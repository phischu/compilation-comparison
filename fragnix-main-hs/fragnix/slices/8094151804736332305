{"sliceID":8094151804736332305,"uses":[{"reference":{"otherSlice":6856618864151171204},"usedName":{"constructorName":{"identifier":"One"},"constructorTypeName":{"identifier":"Digit"}},"qualification":null},{"reference":{"otherSlice":2368152319216379417},"usedName":{"constructorName":{"identifier":"InsOne"},"constructorTypeName":{"identifier":"Ins"}},"qualification":null},{"reference":{"otherSlice":3135415485728324443},"usedName":{"constructorName":{"identifier":"InsRightDig"},"constructorTypeName":{"identifier":"InsNodeDig"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":2368152319216379417},"usedName":{"constructorName":{"identifier":"InsTwo"},"constructorTypeName":{"identifier":"Ins"}},"qualification":null},{"reference":{"otherSlice":6856618864151171204},"usedName":{"constructorName":{"identifier":"Two"},"constructorTypeName":{"identifier":"Digit"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"<"}},"qualification":null},{"reference":{"otherSlice":6856618864151171204},"usedName":{"constructorName":{"identifier":"Three"},"constructorTypeName":{"identifier":"Digit"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"-"}},"qualification":null},{"reference":{"otherSlice":2658389187921074114},"usedName":{"valueName":{"identifier":"size"}},"qualification":null},{"reference":{"otherSlice":6856618864151171204},"usedName":{"constructorName":{"identifier":"Four"},"constructorTypeName":{"identifier":"Digit"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"otherSlice":3135415485728324443},"usedName":{"constructorName":{"identifier":"InsNodeDig"},"constructorTypeName":{"identifier":"InsNodeDig"}},"qualification":null},{"reference":{"otherSlice":6843874425638804520},"usedName":{"valueName":{"identifier":"node3"}},"qualification":null},{"reference":{"otherSlice":2658389187921074114},"usedName":{"typeName":{"identifier":"Sized"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null},{"reference":{"otherSlice":2368152319216379417},"usedName":{"typeName":{"identifier":"Ins"}},"qualification":null},{"reference":{"otherSlice":6856618864151171204},"usedName":{"typeName":{"identifier":"Digit"}},"qualification":null},{"reference":{"otherSlice":3135415485728324443},"usedName":{"typeName":{"identifier":"InsNodeDig"}},"qualification":null}],"fragment":["insRightDigit ::\n                Sized a => (Int -> a -> Ins a) -> Int -> Digit a -> InsNodeDig a","insRightDigit f !i (One a)\n  = case f i a of\n        InsOne a' -> InsRightDig $ One a'\n        InsTwo a1 a2 -> InsRightDig $ Two a1 a2\ninsRightDigit f i (Two a b)\n  | i < sa =\n    case f i a of\n        InsOne a' -> InsRightDig $ Two a' b\n        InsTwo a1 a2 -> InsRightDig $ Three a1 a2 b\n  | otherwise =\n    case f (i - sa) b of\n        InsOne b' -> InsRightDig $ Two a b'\n        InsTwo b1 b2 -> InsRightDig $ Three a b1 b2\n  where sa = size a\ninsRightDigit f i (Three a b c)\n  | i < sa =\n    case f i a of\n        InsOne a' -> InsRightDig $ Three a' b c\n        InsTwo a1 a2 -> InsRightDig $ Four a1 a2 b c\n  | i < sab =\n    case f (i - sa) b of\n        InsOne b' -> InsRightDig $ Three a b' c\n        InsTwo b1 b2 -> InsRightDig $ Four a b1 b2 c\n  | otherwise =\n    case f (i - sab) c of\n        InsOne c' -> InsRightDig $ Three a b c'\n        InsTwo c1 c2 -> InsRightDig $ Four a b c1 c2\n  where sa = size a\n        sab = sa + size b\ninsRightDigit f i (Four a b c d)\n  | i < sa =\n    case f i a of\n        InsOne a' -> InsRightDig $ Four a' b c d\n        InsTwo a1 a2 -> InsNodeDig (node3 a1 a2 b) (Two c d)\n  | i < sab =\n    case f (i - sa) b of\n        InsOne b' -> InsRightDig $ Four a b' c d\n        InsTwo b1 b2 -> InsNodeDig (node3 a b1 b2) (Two c d)\n  | i < sabc =\n    case f (i - sab) c of\n        InsOne c' -> InsRightDig $ Four a b c' d\n        InsTwo c1 c2 -> InsNodeDig (node3 a b c1) (Two c2 d)\n  | otherwise =\n    case f (i - sabc) d of\n        InsOne d' -> InsRightDig $ Four a b c d'\n        InsTwo d1 d2 -> InsNodeDig (node3 a b c) (Two d1 d2)\n  where sa = size a\n        sab = sa + size b\n        sabc = sab + size c"],"instances":[],"language":{"extensions":["BangPatterns","DeriveDataTypeable","StandaloneDeriving","FlexibleInstances","ScopedTypeVariables","DeriveGeneric","TypeFamilies","PatternSynonyms","ViewPatterns","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}