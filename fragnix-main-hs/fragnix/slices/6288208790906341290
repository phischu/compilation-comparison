{"sliceID":6288208790906341290,"uses":[{"reference":{"otherSlice":2658389187921074114},"usedName":{"typeName":{"identifier":"Sized"}},"qualification":null},{"reference":{"otherSlice":6856618864151171204},"usedName":{"typeName":{"identifier":"Digit"}},"qualification":null},{"reference":{"otherSlice":2103754850612341338},"usedName":{"typeName":{"identifier":"FingerTree"}},"qualification":null},{"reference":{"otherSlice":6856618864151171204},"usedName":{"constructorName":{"identifier":"One"},"constructorTypeName":{"identifier":"Digit"}},"qualification":null},{"reference":{"otherSlice":2103754850612341338},"usedName":{"constructorName":{"identifier":"Single"},"constructorTypeName":{"identifier":"FingerTree"}},"qualification":null},{"reference":{"otherSlice":6856618864151171204},"usedName":{"constructorName":{"identifier":"Two"},"constructorTypeName":{"identifier":"Digit"}},"qualification":null},{"reference":{"otherSlice":8624209003781892825},"usedName":{"valueName":{"identifier":"deep"}},"qualification":null},{"reference":{"otherSlice":2103754850612341338},"usedName":{"constructorName":{"identifier":"EmptyT"},"constructorTypeName":{"identifier":"FingerTree"}},"qualification":null},{"reference":{"otherSlice":6856618864151171204},"usedName":{"constructorName":{"identifier":"Three"},"constructorTypeName":{"identifier":"Digit"}},"qualification":null},{"reference":{"otherSlice":6856618864151171204},"usedName":{"constructorName":{"identifier":"Four"},"constructorTypeName":{"identifier":"Digit"}},"qualification":null}],"fragment":["digitToTree :: Sized a => Digit a -> FingerTree a","digitToTree (One a) = Single a\ndigitToTree (Two a b) = deep (One a) EmptyT (One b)\ndigitToTree (Three a b c) = deep (Two a b) EmptyT (One c)\ndigitToTree (Four a b c d) = deep (Two a b) EmptyT (Two c d)"],"instances":[],"language":{"extensions":["BangPatterns","DeriveDataTypeable","StandaloneDeriving","FlexibleInstances","ScopedTypeVariables","DeriveGeneric","TypeFamilies","PatternSynonyms","ViewPatterns","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}