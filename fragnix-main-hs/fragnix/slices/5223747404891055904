{"sliceID":5223747404891055904,"uses":[{"reference":{"otherSlice":8153634949087815593},"usedName":{"constructorName":{"identifier":"RspNoBody"},"constructorTypeName":{"identifier":"Rsp"}},"qualification":null},{"reference":{"otherSlice":5036614696814365},"usedName":{"valueName":{"identifier":"composeHeader"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":">>="}},"qualification":null},{"reference":{"otherSlice":3086651893912105973},"usedName":{"valueName":{"identifier":"connSendAll"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Nothing"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":8153634949087815593},"usedName":{"constructorName":{"identifier":"RspBuilder"},"constructorTypeName":{"identifier":"Rsp"}},"qualification":null},{"reference":{"otherSlice":2702056344112703069},"usedName":{"valueName":{"identifier":"composeHeaderBuilder"}},"qualification":null},{"reference":{"builtinModule":"Data.Monoid"},"usedName":{"valueName":{"operator":"<>"}},"qualification":null},{"reference":{"otherSlice":212215127239558568},"usedName":{"valueName":{"identifier":"chunkedTransferEncoding"}},"qualification":null},{"reference":{"otherSlice":4197475487860820622},"usedName":{"valueName":{"identifier":"chunkedTransferTerminator"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"otherSlice":3086651893912105973},"usedName":{"valueName":{"identifier":"connWriteBuffer"}},"qualification":null},{"reference":{"otherSlice":3086651893912105973},"usedName":{"valueName":{"identifier":"connBufferSize"}},"qualification":null},{"reference":{"otherSlice":7160331277906665345},"usedName":{"valueName":{"identifier":"toBufIOWith"}},"qualification":null},{"reference":{"otherSlice":8153634949087815593},"usedName":{"constructorName":{"identifier":"RspStream"},"constructorTypeName":{"identifier":"Rsp"}},"qualification":null},{"reference":{"otherSlice":234909098031431684},"usedName":{"valueName":{"identifier":"newBlazeRecv"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":5105839400915451185},"usedName":{"valueName":{"identifier":"reuseBufferStrategy"}},"qualification":null},{"reference":{"otherSlice":7250970757621745007},"usedName":{"valueName":{"identifier":"toBuilderBuffer"}},"qualification":null},{"reference":{"builtinModule":"Control.Monad"},"usedName":{"valueName":{"identifier":"unless"}},"qualification":null},{"reference":{"otherSlice":7202692338078551997},"usedName":{"valueName":{"identifier":"null"}},"qualification":"S"},{"reference":{"otherSlice":7784077940034131363},"usedName":{"valueName":{"identifier":"sendFragment"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null},{"reference":{"otherSlice":5375758593092890350},"usedName":{"valueName":{"identifier":"flush"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"when"}},"qualification":null},{"reference":{"builtinModule":"Data.Maybe"},"usedName":{"valueName":{"identifier":"maybe"}},"qualification":null},{"reference":{"otherSlice":8153634949087815593},"usedName":{"constructorName":{"identifier":"RspRaw"},"constructorTypeName":{"identifier":"Rsp"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":">>"}},"qualification":null},{"reference":{"otherSlice":8153634949087815593},"usedName":{"constructorName":{"identifier":"RspFile"},"constructorTypeName":{"identifier":"Rsp"}},"qualification":null},{"reference":{"otherSlice":8174925800893531719},"usedName":{"valueName":{"identifier":"filePartOffset"}},"qualification":null},{"reference":{"otherSlice":8174925800893531719},"usedName":{"valueName":{"identifier":"filePartByteCount"}},"qualification":null},{"reference":{"otherSlice":893539762194440625},"usedName":{"valueName":{"identifier":"addContentHeadersForFilePart"}},"qualification":null},{"reference":{"builtinModule":"Control.Exception.Base"},"usedName":{"valueName":{"identifier":"try"}},"qualification":"E"},{"reference":{"otherSlice":8144835655087874660},"usedName":{"valueName":{"identifier":"getFileInfo"}},"qualification":null},{"reference":{"builtinModule":"Data.Either"},"usedName":{"constructorName":{"identifier":"Left"},"constructorTypeName":{"identifier":"Either"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO.Exception"},"usedName":{"typeName":{"identifier":"IOException"}},"qualification":"E"},{"reference":{"builtinModule":"Data.Either"},"usedName":{"constructorName":{"identifier":"Right"},"constructorTypeName":{"identifier":"Either"}},"qualification":null},{"reference":{"otherSlice":3463371140375939985},"usedName":{"valueName":{"identifier":"conditionalRequest"}},"qualification":null},{"reference":{"otherSlice":6790633583197881706},"usedName":{"constructorName":{"identifier":"WithoutBody"},"constructorTypeName":{"identifier":"RspFileInfo"}},"qualification":null},{"reference":{"otherSlice":6790633583197881706},"usedName":{"constructorName":{"identifier":"WithBody"},"constructorTypeName":{"identifier":"RspFileInfo"}},"qualification":null},{"reference":{"otherSlice":3086651893912105973},"usedName":{"typeName":{"identifier":"Connection"}},"qualification":null},{"reference":{"otherSlice":8144835655087874660},"usedName":{"typeName":{"identifier":"InternalInfo"}},"qualification":null},{"reference":{"otherSlice":3972775607744493639},"usedName":{"typeName":{"identifier":"HttpVersion"}},"qualification":"H"},{"reference":{"otherSlice":4798754932090144467},"usedName":{"typeName":{"identifier":"Status"}},"qualification":"H"},{"reference":{"otherSlice":1840970391973419978},"usedName":{"typeName":{"identifier":"ResponseHeaders"}},"qualification":"H"},{"reference":{"otherSlice":8153634949087815593},"usedName":{"typeName":{"identifier":"Rsp"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Integer.GMP.Internals"},"usedName":{"typeName":{"identifier":"Integer"}},"qualification":null},{"reference":{"otherSlice":8144835655087874660},"usedName":{"valueName":{"identifier":"getFd"}},"qualification":null},{"reference":{"otherSlice":5511506812057969333},"usedName":{"constructorName":{"identifier":"FileId"},"constructorTypeName":{"identifier":"FileId"}},"qualification":null},{"reference":{"otherSlice":3086651893912105973},"usedName":{"valueName":{"identifier":"connSendFile"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO"},"usedName":{"typeName":{"identifier":"FilePath"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"True"},"constructorTypeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"otherSlice":8137760265770714654},"usedName":{"valueName":{"identifier":"notFound404"}},"qualification":"H"},{"reference":{"otherSlice":7624719733800711574},"usedName":{"valueName":{"identifier":"replaceHeader"}},"qualification":null},{"reference":{"otherSlice":1770321871109794098},"usedName":{"valueName":{"identifier":"hContentType"}},"qualification":"H"},{"reference":{"otherSlice":7667068916034633241},"usedName":{"valueName":{"identifier":"byteString"}},"qualification":null}],"fragment":["sendRsp ::\n        Connection ->\n          InternalInfo ->\n            H.HttpVersion ->\n              H.Status ->\n                H.ResponseHeaders -> Rsp -> IO (Maybe H.Status, Maybe Integer)","sendRsp conn _ ver s hs RspNoBody\n  = do composeHeader ver s hs >>= connSendAll conn\n       return (Just s, Nothing)\nsendRsp conn _ ver s hs (RspBuilder body needsChunked)\n  = do header <- composeHeaderBuilder ver s hs needsChunked\n       let hdrBdy\n             | needsChunked =\n               header <> chunkedTransferEncoding body <> chunkedTransferTerminator\n             | otherwise = header <> body\n           buffer = connWriteBuffer conn\n           size = connBufferSize conn\n       toBufIOWith buffer size (connSendAll conn) hdrBdy\n       return (Just s, Nothing)\nsendRsp conn _ ver s hs (RspStream streamingBody needsChunked th)\n  = do header <- composeHeaderBuilder ver s hs needsChunked\n       (recv, finish) <- newBlazeRecv $\n                           reuseBufferStrategy $\n                             toBuilderBuffer (connWriteBuffer conn) (connBufferSize conn)\n       let send builder\n             = do popper <- recv builder\n                  let loop\n                        = do bs <- popper\n                             unless (S.null bs) $\n                               do sendFragment conn th bs\n                                  loop\n                  loop\n           sendChunk\n             | needsChunked = send . chunkedTransferEncoding\n             | otherwise = send\n       send header\n       streamingBody sendChunk (sendChunk flush)\n       when needsChunked $ send chunkedTransferTerminator\n       mbs <- finish\n       maybe (return ()) (sendFragment conn th) mbs\n       return (Just s, Nothing)\nsendRsp conn _ _ _ _ (RspRaw withApp src tickle)\n  = do withApp recv send\n       return (Nothing, Nothing)\n  where recv\n          = do bs <- src\n               unless (S.null bs) tickle\n               return bs\n        send bs = connSendAll conn bs >> tickle\nsendRsp conn ii ver s0 hs0 (RspFile path (Just part) _ isHead hook)\n  = sendRspFile2XX conn ii ver s0 hs path beg len isHead hook\n  where beg = filePartOffset part\n        len = filePartByteCount part\n        hs = addContentHeadersForFilePart hs0 part\nsendRsp conn ii ver _ hs0 (RspFile path Nothing idxhdr isHead hook)\n  = do efinfo <- E.try $ getFileInfo ii path\n       case efinfo of\n           Left (_ex :: E.IOException) -> sendRspFile404 conn ii ver hs0\n           Right finfo -> case conditionalRequest finfo hs0 idxhdr of\n                              WithoutBody s -> sendRsp conn ii ver s hs0 RspNoBody\n                              WithBody s hs beg len -> sendRspFile2XX conn ii ver s hs path beg\n                                                         len\n                                                         isHead\n                                                         hook","sendRspFile2XX ::\n               Connection ->\n                 InternalInfo ->\n                   H.HttpVersion ->\n                     H.Status ->\n                       H.ResponseHeaders ->\n                         FilePath ->\n                           Integer ->\n                             Integer -> Bool -> IO () -> IO (Maybe H.Status, Maybe Integer)","sendRspFile2XX conn ii ver s hs path beg len isHead hook\n  | isHead = sendRsp conn ii ver s hs RspNoBody\n  | otherwise =\n    do lheader <- composeHeader ver s hs\n       (mfd, fresher) <- getFd ii path\n       let fid = FileId path mfd\n           hook' = hook >> fresher\n       connSendFile conn fid beg len hook' [lheader]\n       return (Just s, Just len)","sendRspFile404 ::\n               Connection ->\n                 InternalInfo ->\n                   H.HttpVersion ->\n                     H.ResponseHeaders -> IO (Maybe H.Status, Maybe Integer)","sendRspFile404 conn ii ver hs0\n  = sendRsp conn ii ver s hs (RspBuilder body True)\n  where s = H.notFound404\n        hs = replaceHeader H.hContentType \"text/plain; charset=utf-8\" hs0\n        body = byteString \"File not found\""],"instances":[],"language":{"extensions":["OverloadedStrings","ScopedTypeVariables","TupleSections","RankNTypes","BangPatterns","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}