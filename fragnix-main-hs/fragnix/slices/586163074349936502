{"sliceID":586163074349936502,"uses":[{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"True"},"constructorTypeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"String"}},"qualification":null},{"reference":{"builtinModule":"GHC.Unicode"},"usedName":{"valueName":{"identifier":"isUpper"}},"qualification":null},{"reference":{"builtinModule":"GHC.Unicode"},"usedName":{"valueName":{"identifier":"toLower"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"False"},"constructorTypeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Char"}},"qualification":null}],"fragment":["camelTo :: Char -> String -> String","camelTo c = lastWasCap True\n  where lastWasCap :: Bool -> String -> String\n        lastWasCap _ [] = []\n        lastWasCap prev (x : xs)\n          = if isUpper x then\n              if prev then toLower x : lastWasCap True xs else\n                c : toLower x : lastWasCap True xs\n              else x : lastWasCap False xs"],"instances":[],"language":{"extensions":["DeriveDataTypeable","GeneralizedNewtypeDeriving","Rank2Types","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}