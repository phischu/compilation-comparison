{"sliceID":4378126216223036796,"uses":[{"reference":{"builtinModule":"GHC.Err"},"usedName":{"valueName":{"identifier":"undefined"}},"qualification":null},{"reference":{"builtinModule":"Foreign.Storable"},"usedName":{"typeName":{"identifier":"Storable"}},"qualification":null},{"reference":{"otherSlice":2921449568316915535},"usedName":{"typeName":{"identifier":"Parser"}},"qualification":null},{"reference":{"otherSlice":7818487502457833785},"usedName":{"valueName":{"identifier":"toForeignPtr"}},"qualification":"B"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"fmap"}},"qualification":null},{"reference":{"otherSlice":2434325198715611861},"usedName":{"valueName":{"identifier":"take"}},"qualification":null},{"reference":{"builtinModule":"Foreign.Storable"},"usedName":{"valueName":{"identifier":"sizeOf"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null},{"reference":{"otherSlice":1407842651072297740},"usedName":{"valueName":{"identifier":"inlinePerformIO"}},"qualification":null},{"reference":{"builtinModule":"Foreign.ForeignPtr"},"usedName":{"valueName":{"identifier":"withForeignPtr"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"Foreign.Storable"},"usedName":{"valueName":{"identifier":"peek"}},"qualification":null},{"reference":{"builtinModule":"GHC.Ptr"},"usedName":{"valueName":{"identifier":"castPtr"}},"qualification":null},{"reference":{"builtinModule":"GHC.Ptr"},"usedName":{"valueName":{"identifier":"plusPtr"}},"qualification":null}],"fragment":["storable :: Storable a => Parser a","storable = hack undefined\n  where hack :: Storable b => b -> Parser b\n        hack dummy\n          = do (fp, o, _) <- B.toForeignPtr `fmap` take (sizeOf dummy)\n               return . inlinePerformIO . withForeignPtr fp $\n                 \\ p -> peek (castPtr $ p `plusPtr` o)"],"instances":[],"language":{"extensions":["BangPatterns","GADTs","OverloadedStrings","RankNTypes","RecordWildCards","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}