{"sliceID":7185722620784157417,"uses":[{"reference":{"otherSlice":7526508591127148747},"usedName":{"valueName":{"identifier":"zipWithM_"}},"qualification":"S"},{"reference":{"otherSlice":5841983516172584459},"usedName":{"valueName":{"identifier":"sElems"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Monad"}},"qualification":null},{"reference":{"otherSlice":5841983516172584459},"usedName":{"typeName":{"identifier":"Bundle"}},"qualification":null}],"fragment":["zipWithM_ ::\n            Monad m => (a -> b -> m c) -> Bundle m v a -> Bundle m v b -> m ()","zipWithM_ f sa sb = S.zipWithM_ f (sElems sa) (sElems sb)"],"instances":[],"language":{"extensions":["ExistentialQuantification","MultiParamTypeClasses","FlexibleInstances","Rank2Types","BangPatterns","KindSignatures","GADTs","ScopedTypeVariables","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}