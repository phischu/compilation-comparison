{"sliceID":7650905676372894653,"uses":[{"reference":{"otherSlice":3480565206993838535},"usedName":{"valueName":{"identifier":"unstream"}},"qualification":null},{"reference":{"otherSlice":6578256206532177873},"usedName":{"valueName":{"identifier":"zipWith3"}},"qualification":"Bundle"},{"reference":{"otherSlice":5483074428067105677},"usedName":{"valueName":{"identifier":"stream"}},"qualification":null},{"reference":{"otherSlice":8572689894313737623},"usedName":{"typeName":{"identifier":"Vector"}},"qualification":null}],"fragment":["zipWith3 ::\n           (Vector v a, Vector v b, Vector v c, Vector v d) =>\n           (a -> b -> c -> d) -> v a -> v b -> v c -> v d","zipWith3 f\n  = \\ as bs cs ->\n      unstream (Bundle.zipWith3 f (stream as) (stream bs) (stream cs))"],"instances":[],"language":{"extensions":["Rank2Types","MultiParamTypeClasses","FlexibleContexts","TypeFamilies","ScopedTypeVariables","BangPatterns","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}