{"sliceID":4238221614800696419,"uses":[{"reference":{"otherSlice":2497553050502348575},"usedName":{"constructorName":{"identifier":"Empty"},"constructorTypeName":{"identifier":"FingerTree"}},"qualification":null},{"reference":{"otherSlice":2497553050502348575},"usedName":{"constructorName":{"identifier":"Single"},"constructorTypeName":{"identifier":"FingerTree"}},"qualification":null},{"reference":{"otherSlice":2497553050502348575},"usedName":{"constructorName":{"identifier":"Deep"},"constructorTypeName":{"identifier":"FingerTree"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"fmap"}},"qualification":null},{"reference":{"otherSlice":7857519559657207043},"usedName":{"valueName":{"identifier":"deep"}},"qualification":null},{"reference":{"otherSlice":5256430667094458706},"usedName":{"valueName":{"identifier":"tailsDigit"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null},{"reference":{"otherSlice":967665031512543017},"usedName":{"valueName":{"identifier":"digitToTree"}},"qualification":null},{"reference":{"otherSlice":1455843312851584907},"usedName":{"constructorName":{"identifier":"Just2"},"constructorTypeName":{"identifier":"Maybe2"}},"qualification":null},{"reference":{"otherSlice":7823183531276495350},"usedName":{"valueName":{"identifier":"viewLTree"}},"qualification":null},{"reference":{"otherSlice":7269267225048545427},"usedName":{"valueName":{"identifier":"tailsNode"}},"qualification":null},{"reference":{"otherSlice":3097725820661431075},"usedName":{"typeName":{"identifier":"Sized"}},"qualification":null},{"reference":{"otherSlice":2497553050502348575},"usedName":{"typeName":{"identifier":"FingerTree"}},"qualification":null}],"fragment":["tailsTree ::\n            Sized a => (FingerTree a -> b) -> FingerTree a -> FingerTree b","tailsTree _ Empty = Empty\ntailsTree f (Single x) = Single (f (Single x))\ntailsTree f (Deep n pr m sf)\n  = Deep n (fmap (\\ pr' -> f (deep pr' m sf)) (tailsDigit pr))\n      (tailsTree f' m)\n      (fmap (f . digitToTree) (tailsDigit sf))\n  where f' ms\n          = let Just2 node m' = viewLTree ms in\n              fmap (\\ pr' -> f (deep pr' m' sf)) (tailsNode node)"],"instances":[],"language":{"extensions":["DeriveDataTypeable","StandaloneDeriving","TypeFamilies","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}