{"sliceID":2953107097186895109,"uses":[{"reference":{"builtinModule":"GHC.Prim"},"usedName":{"valueName":{"identifier":"seq"}},"qualification":null},{"reference":{"otherSlice":6591243309425094314},"usedName":{"valueName":{"identifier":"cons"}},"qualification":null},{"reference":{"otherSlice":9168283441173633284},"usedName":{"valueName":{"identifier":"postscanlM"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Monad"}},"qualification":null},{"reference":{"otherSlice":1254073128444822395},"usedName":{"typeName":{"identifier":"Stream"}},"qualification":null}],"fragment":["scanlM' ::\n          Monad m => (a -> b -> m a) -> a -> Stream m b -> Stream m a","scanlM' f z s = z `seq` (z `cons` postscanlM f z s)"],"instances":[],"language":{"extensions":["ExistentialQuantification","MultiParamTypeClasses","FlexibleInstances","Rank2Types","BangPatterns","KindSignatures","GADTs","ScopedTypeVariables","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}