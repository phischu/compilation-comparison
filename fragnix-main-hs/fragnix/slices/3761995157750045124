{"sliceID":3761995157750045124,"uses":[{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Monad"}},"qualification":null},{"reference":{"otherSlice":5608026940872757338},"usedName":{"typeName":{"identifier":"Listen"}},"qualification":null},{"reference":{"otherSlice":956119367104656861},"usedName":{"typeName":{"identifier":"AccumT"}},"qualification":null},{"reference":{"otherSlice":956119367104656861},"usedName":{"constructorName":{"identifier":"AccumT"},"constructorTypeName":{"identifier":"AccumT"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":1719551204349862948},"usedName":{"valueName":{"identifier":"runAccumT"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null}],"fragment":["liftListen ::\n             (Monad m) => Listen w m (a, s) -> Listen w (AccumT s m) a","liftListen listen m\n  = AccumT $\n      \\ s ->\n        do ~((a, s'), w) <- listen (runAccumT m s)\n           return ((a, w), s')"],"instances":[],"language":{"extensions":["AutoDeriveTypeable","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}