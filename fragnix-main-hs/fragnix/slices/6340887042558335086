{"sliceID":6340887042558335086,"uses":[{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Char"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"String"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"map"}},"qualification":null},{"reference":{"builtinModule":"GHC.Unicode"},"usedName":{"valueName":{"identifier":"toLower"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null},{"reference":{"builtinModule":"GHC.Unicode"},"usedName":{"valueName":{"identifier":"isUpper"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"&&"}},"qualification":null},{"reference":{"builtinModule":"GHC.Unicode"},"usedName":{"valueName":{"identifier":"isLower"}},"qualification":null}],"fragment":["camelTo2 :: Char -> String -> String","camelTo2 c = map toLower . go2 . go1\n  where go1 \"\" = \"\"\n        go1 (x : (u : (l : xs)))\n          | isUpper u && isLower l = x : c : u : l : go1 xs\n        go1 (x : xs) = x : go1 xs\n        go2 \"\" = \"\"\n        go2 (l : (u : xs)) | isLower l && isUpper u = l : c : u : go2 xs\n        go2 (x : xs) = x : go2 xs"],"instances":[],"language":{"extensions":["DeriveDataTypeable","GeneralizedNewtypeDeriving","Rank2Types","TemplateHaskellQuotes","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards","TemplateHaskell"],"isInstance":false}}