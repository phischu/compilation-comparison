{"sliceID":4697479440122842934,"uses":[{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":8409514452798233170},"usedName":{"valueName":{"identifier":"split"}},"qualification":"T"},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"otherSlice":3595708566871650969},"usedName":{"valueName":{"identifier":"decodeUtf8"}},"qualification":"TE"},{"reference":{"otherSlice":30758760526534613},"usedName":{"valueName":{"identifier":"rawPathInfo"}},"qualification":null},{"reference":{"otherSlice":30758760526534613},"usedName":{"valueName":{"identifier":"pathInfo"}},"qualification":null},{"reference":{"otherSlice":30758760526534613},"usedName":{"typeName":{"identifier":"Request"}},"qualification":null},{"reference":{"otherSlice":8642306666063513779},"usedName":{"typeName":{"identifier":"ByteString"}},"qualification":"S8"}],"fragment":["setRawPathInfo :: Request -> S8.ByteString -> Request","setRawPathInfo r rawPinfo\n  = let pInfo\n          = dropFrontSlash $ T.split (== '/') $ TE.decodeUtf8 rawPinfo\n      in r{rawPathInfo = rawPinfo, pathInfo = pInfo}\n  where dropFrontSlash (\"\" : (\"\" : [])) = []\n        dropFrontSlash (\"\" : path) = path\n        dropFrontSlash path = path"],"instances":[],"language":{"extensions":["OverloadedStrings","DeriveDataTypeable","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}