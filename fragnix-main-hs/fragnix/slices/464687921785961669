{"sliceID":464687921785961669,"uses":[{"reference":{"builtinModule":"GHC.Prim"},"usedName":{"valueName":{"identifier":"seq"}},"qualification":null},{"reference":{"otherSlice":6083203894151599169},"usedName":{"valueName":{"identifier":"fromStream"}},"qualification":null},{"reference":{"otherSlice":1254073128444822395},"usedName":{"constructorName":{"identifier":"Stream"},"constructorTypeName":{"identifier":"Stream"}},"qualification":null},{"reference":{"otherSlice":8855860816860663679},"usedName":{"constructorName":{"identifier":"Exact"},"constructorTypeName":{"identifier":"Size"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":">"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"otherSlice":5390831090808384141},"usedName":{"valueName":{"identifier":"check"}},"qualification":"Ck"},{"reference":{"otherSlice":4956884951746098628},"usedName":{"constructorName":{"identifier":"Bounds"},"constructorTypeName":{"identifier":"Checks"}},"qualification":"Ck"},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"&&"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"<="}},"qualification":null},{"reference":{"builtinModule":"GHC.Real"},"usedName":{"valueName":{"identifier":"fromIntegral"}},"qualification":null},{"reference":{"builtinModule":"GHC.Enum"},"usedName":{"valueName":{"identifier":"maxBound"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"-"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"otherSlice":2120320550836080743},"usedName":{"constructorName":{"identifier":"Yield"},"constructorTypeName":{"identifier":"Step"}},"qualification":null},{"reference":{"otherSlice":2120320550836080743},"usedName":{"constructorName":{"identifier":"Done"},"constructorTypeName":{"identifier":"Step"}},"qualification":null},{"reference":{"builtinModule":"GHC.Real"},"usedName":{"typeName":{"identifier":"Integral"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Monad"}},"qualification":null},{"reference":{"otherSlice":5841983516172584459},"usedName":{"typeName":{"identifier":"Bundle"}},"qualification":null}],"fragment":["enumFromTo_big_int ::\n                     (Integral a, Monad m) => a -> a -> Bundle m v a","enumFromTo_big_int x y\n  = x `seq` y `seq` fromStream (Stream step x) (Exact (len x y))\n  where {-# INLINE [0] len #-}\n        len u v\n          | u > v = 0\n          | otherwise =\n            ((Ck.check \"Data/Vector/Fusion/Bundle/Monadic.hs\" 908) Ck.Bounds)\n              \"enumFromTo\"\n              \"vector too large\"\n              (n > 0 && n <= fromIntegral (maxBound :: Int))\n              $ fromIntegral n\n          where n = v - u + 1\n        \n        {-# INLINE [0] step #-}\n        step z\n          | z <= y = return $ Yield z (z + 1)\n          | otherwise = return $ Done"],"instances":[],"language":{"extensions":["ExistentialQuantification","MultiParamTypeClasses","FlexibleInstances","Rank2Types","BangPatterns","KindSignatures","GADTs","ScopedTypeVariables","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}