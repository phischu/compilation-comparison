{"sliceID":8491060695961459618,"uses":[{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Monad"}},"qualification":null},{"reference":{"otherSlice":8979303205475815826},"usedName":{"typeName":{"identifier":"Error"}},"qualification":null},{"reference":{"otherSlice":2824110155630133856},"usedName":{"typeName":{"identifier":"MonadError"}},"qualification":null},{"reference":{"otherSlice":1776344282554687497},"usedName":{"typeName":{"identifier":"ErrorT"}},"qualification":null},{"reference":{"otherSlice":2824110155630133856},"usedName":{"valueName":{"identifier":"throwError"}},"qualification":null},{"reference":{"otherSlice":6433527891046492750},"usedName":{"valueName":{"identifier":"throwError"}},"qualification":"ErrorT"},{"reference":{"otherSlice":2824110155630133856},"usedName":{"valueName":{"identifier":"catchError"}},"qualification":null},{"reference":{"otherSlice":6870560494270777346},"usedName":{"valueName":{"identifier":"catchError"}},"qualification":"ErrorT"}],"fragment":["instance (Monad m, Error e) => MonadError e (ErrorT e m) where\n        throwError = ErrorT.throwError\n        catchError = ErrorT.catchError"],"instances":[],"language":{"extensions":["MultiParamTypeClasses","FunctionalDependencies","FlexibleInstances","UndecidableInstances","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":true}}