{"sliceID":6704883726740458334,"uses":[{"reference":{"otherSlice":722674047690492996},"usedName":{"valueName":{"identifier":"checkLength"}},"qualification":"Ck"},{"reference":{"otherSlice":4579156144394400265},"usedName":{"constructorName":{"identifier":"Internal"},"constructorTypeName":{"identifier":"Checks"}},"qualification":"Ck"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":3867849288792351978},"usedName":{"valueName":{"identifier":"unsafeNew"}},"qualification":null},{"reference":{"otherSlice":1358554234100414793},"usedName":{"valueName":{"identifier":"unsafeWrite"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"-"}},"qualification":null},{"reference":{"otherSlice":3826499326822741802},"usedName":{"valueName":{"identifier":"foldM'"}},"qualification":"Stream"},{"reference":{"otherSlice":5256657168060225464},"usedName":{"valueName":{"identifier":"check"}},"qualification":"Ck"},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"<="}},"qualification":null},{"reference":{"otherSlice":3538790270360548723},"usedName":{"valueName":{"identifier":"unsafeSlice"}},"qualification":null},{"reference":{"otherSlice":7891398766449735146},"usedName":{"valueName":{"identifier":"reverse"}},"qualification":null},{"reference":{"otherSlice":3377634759521931512},"usedName":{"typeName":{"identifier":"PrimMonad"}},"qualification":null},{"reference":{"otherSlice":3867849288792351978},"usedName":{"typeName":{"identifier":"MVector"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"otherSlice":963393349676107981},"usedName":{"typeName":{"identifier":"Stream"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null},{"reference":{"otherSlice":3377634759521931512},"usedName":{"typeName":{"identifier":"PrimState"}},"qualification":null}],"fragment":["partitionMax ::\n               (PrimMonad m, MVector v a) =>\n               (a -> Bool) ->\n                 Stream a -> Int -> m (v (PrimState m) a, v (PrimState m) a)","partitionMax f s n\n  = do v <- ((Ck.checkLength \"Data/Vector/Generic/Mutable.hs\" 839)\n               Ck.Internal)\n              \"unstablePartitionMax\"\n              n\n              $ unsafeNew n\n       let {-# INLINE [0] put #-}\n           put (i, j) x\n             | f x =\n               do unsafeWrite v i x\n                  return (i + 1, j)\n             | otherwise =\n               let j' = j - 1 in\n                 do unsafeWrite v j' x\n                    return (i, j')\n       (i, j) <- Stream.foldM' put (0, n) s\n       ((Ck.check \"Data/Vector/Generic/Mutable.hs\" 854) Ck.Internal)\n         \"partitionMax\"\n         \"invalid indices\"\n         (i <= j)\n         $ return ()\n       let l = unsafeSlice 0 i v\n           r = unsafeSlice j (n - j) v\n       reverse r\n       return (l, r)"],"instances":[],"language":{"extensions":["DeriveDataTypeable","MultiParamTypeClasses","BangPatterns","ScopedTypeVariables","TypeFamilies","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}