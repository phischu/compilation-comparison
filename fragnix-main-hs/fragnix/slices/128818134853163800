{"sliceID":128818134853163800,"uses":[{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"<="}},"qualification":null},{"reference":{"otherSlice":1699226608098321587},"usedName":{"constructorName":{"identifier":"Empty"},"constructorTypeName":{"identifier":"ByteString"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"<"}},"qualification":null},{"reference":{"builtinModule":"GHC.Real"},"usedName":{"valueName":{"identifier":"fromIntegral"}},"qualification":null},{"reference":{"otherSlice":5479977491236351550},"usedName":{"valueName":{"identifier":"smallChunkSize"}},"qualification":null},{"reference":{"otherSlice":1699226608098321587},"usedName":{"constructorName":{"identifier":"Chunk"},"constructorTypeName":{"identifier":"ByteString"}},"qualification":null},{"reference":{"otherSlice":1192146602724822468},"usedName":{"valueName":{"identifier":"replicate"}},"qualification":"S"},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"otherSlice":3560339300675439450},"usedName":{"valueName":{"identifier":"unsafeTake"}},"qualification":"S"},{"reference":{"builtinModule":"GHC.Real"},"usedName":{"valueName":{"identifier":"quotRem"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"-"}},"qualification":null},{"reference":{"builtinModule":"GHC.Int"},"usedName":{"typeName":{"identifier":"Int64"}},"qualification":null},{"reference":{"builtinModule":"GHC.Word"},"usedName":{"typeName":{"identifier":"Word8"}},"qualification":null},{"reference":{"otherSlice":1699226608098321587},"usedName":{"typeName":{"identifier":"ByteString"}},"qualification":null}],"fragment":["replicate :: Int64 -> Word8 -> ByteString","replicate n w\n  | n <= 0 = Empty\n  | n < fromIntegral smallChunkSize =\n    Chunk (S.replicate (fromIntegral n) w) Empty\n  | r == 0 = cs\n  | otherwise = Chunk (S.unsafeTake (fromIntegral r) c) cs\n  where c = S.replicate smallChunkSize w\n        cs = nChunks q\n        (q, r) = quotRem n (fromIntegral smallChunkSize)\n        nChunks 0 = Empty\n        nChunks m = Chunk c (nChunks (m - 1))"],"instances":[],"language":{"extensions":["BangPatterns","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}