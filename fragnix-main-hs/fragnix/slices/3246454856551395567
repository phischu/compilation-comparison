{"sliceID":3246454856551395567,"uses":[{"reference":{"otherSlice":7281902249350019939},"usedName":{"typeName":{"identifier":"FromJSON"}},"qualification":null},{"reference":{"otherSlice":2770826839842273940},"usedName":{"typeName":{"identifier":"ZonedTime"}},"qualification":null},{"reference":{"otherSlice":7281902249350019939},"usedName":{"valueName":{"identifier":"parseJSON"}},"qualification":null},{"reference":{"otherSlice":1669319695546572556},"usedName":{"constructorName":{"identifier":"String"},"constructorTypeName":{"identifier":"Value"}},"qualification":null},{"reference":{"builtinModule":"Control.Applicative"},"usedName":{"valueName":{"operator":"<|>"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"fail"}},"qualification":null},{"reference":{"otherSlice":8091790558075919903},"usedName":{"valueName":{"identifier":"parseTime"}},"qualification":null},{"reference":{"otherSlice":5058511724612501106},"usedName":{"valueName":{"identifier":"defaultTimeLocale"}},"qualification":null},{"reference":{"otherSlice":212440380998441966},"usedName":{"valueName":{"identifier":"unpack"}},"qualification":null},{"reference":{"builtinModule":"Data.Maybe"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"Control.Applicative"},"usedName":{"valueName":{"identifier":"pure"}},"qualification":null},{"reference":{"builtinModule":"Data.Maybe"},"usedName":{"constructorName":{"identifier":"Nothing"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"Control.Applicative"},"usedName":{"valueName":{"identifier":"empty"}},"qualification":null},{"reference":{"builtinModule":"GHC.List"},"usedName":{"valueName":{"identifier":"foldr1"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"map"}},"qualification":null},{"reference":{"otherSlice":2448737557573459507},"usedName":{"valueName":{"identifier":"dateTimeFmt"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"foldr"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"++"}},"qualification":null},{"reference":{"builtinModule":"Data.Monoid"},"usedName":{"valueName":{"identifier":"mappend"}},"qualification":null},{"reference":{"otherSlice":5575856346009189387},"usedName":{"valueName":{"identifier":"typeMismatch"}},"qualification":null}],"fragment":["instance FromJSON ZonedTime where\n        parseJSON (String t)\n          = tryFormats alternateFormats <|>\n              fail \"could not parse ECMA-262 ISO-8601 date\"\n          where tryFormat f\n                  = case parseTime defaultTimeLocale f (unpack t) of\n                        Just d -> pure d\n                        Nothing -> empty\n                tryFormats = foldr1 (<|>) . map tryFormat\n                alternateFormats\n                  = dateTimeFmt defaultTimeLocale :\n                      distributeList [\"%Y\", \"%Y-%m\", \"%F\"]\n                        [\"T%R\", \"T%T\", \"T%T%Q\", \"T%T%QZ\", \"T%T%Q%z\"]\n                distributeList xs ys\n                  = foldr (\\ x acc -> acc ++ distribute x ys) [] xs\n                distribute x = map (mappend x)\n        parseJSON v = typeMismatch \"ZonedTime\" v"],"instances":[],"language":{"extensions":["DeriveDataTypeable","FlexibleContexts","FlexibleInstances","GeneralizedNewtypeDeriving","IncoherentInstances","OverlappingInstances","OverloadedStrings","UndecidableInstances","ViewPatterns","DefaultSignatures","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":true}}