{"sliceID":3646349632437383194,"uses":[{"reference":{"otherSlice":3224449322082811614},"usedName":{"constructorName":{"identifier":"HashPSQ"},"constructorTypeName":{"identifier":"HashPSQ"}},"qualification":null},{"reference":{"otherSlice":1543787085560373111},"usedName":{"valueName":{"identifier":"alter"}},"qualification":"IntPSQ"},{"reference":{"otherSlice":2051332017860334620},"usedName":{"valueName":{"identifier":"hash"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Nothing"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":7487454122265490466},"usedName":{"constructorName":{"identifier":"B"},"constructorTypeName":{"identifier":"Bucket"}},"qualification":null},{"reference":{"otherSlice":6608101925364066612},"usedName":{"valueName":{"identifier":"empty"}},"qualification":"OrdPSQ"},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"otherSlice":5020828853057595567},"usedName":{"valueName":{"identifier":"mkBucket"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"<"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"||"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"&&"}},"qualification":null},{"reference":{"otherSlice":5491414819710291670},"usedName":{"valueName":{"identifier":"insert"}},"qualification":"OrdPSQ"},{"reference":{"otherSlice":5845050617877558124},"usedName":{"valueName":{"identifier":"member"}},"qualification":"OrdPSQ"},{"reference":{"otherSlice":8574526554438388516},"usedName":{"valueName":{"identifier":"delete"}},"qualification":"OrdPSQ"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"typeName":{"identifier":"Ord"}},"qualification":null},{"reference":{"otherSlice":2051332017860334620},"usedName":{"typeName":{"identifier":"Hashable"}},"qualification":null},{"reference":{"otherSlice":3224449322082811614},"usedName":{"typeName":{"identifier":"HashPSQ"}},"qualification":null}],"fragment":["insert ::\n         (Ord k, Hashable k, Ord p) =>\n         k -> p -> v -> HashPSQ k p v -> HashPSQ k p v","insert k p v (HashPSQ ipsq)\n  = case IntPSQ.alter (\\ x -> ((), ins x)) (hash k) ipsq of\n        ((), ipsq') -> HashPSQ ipsq'\n  where ins Nothing = Just (p, B k v (OrdPSQ.empty))\n        ins (Just (p', B k' v' os))\n          | k' == k = Just (mkBucket k p v os)\n          | p' < p || (p == p' && k' < k) =\n            Just (p', B k' v' (OrdPSQ.insert k p v os))\n          | OrdPSQ.member k os =\n            Just (p, B k v (OrdPSQ.insert k' p' v' (OrdPSQ.delete k os)))\n          | otherwise = Just (p, B k v (OrdPSQ.insert k' p' v' os))"],"instances":[],"language":{"extensions":["BangPatterns","DeriveFoldable","DeriveFunctor","DeriveTraversable","GeneralizedNewtypeDeriving","ScopedTypeVariables","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}