{"sliceID":3451855433869944216,"uses":[{"reference":{"builtinModule":"GHC.Exts"},"usedName":{"typeName":{"identifier":"IsList"}},"qualification":"Exts"},{"reference":{"otherSlice":836250808765999032},"usedName":{"typeName":{"identifier":"Array"}},"qualification":null},{"reference":{"builtinModule":"GHC.Exts"},"usedName":{"typeName":{"identifier":"Item"}},"qualification":null},{"reference":{"builtinModule":"GHC.Exts"},"usedName":{"valueName":{"identifier":"fromListN"}},"qualification":"Exts"},{"reference":{"otherSlice":6359411244316829523},"usedName":{"valueName":{"identifier":"createArray"}},"qualification":null},{"reference":{"otherSlice":5999148496770720081},"usedName":{"valueName":{"identifier":"die"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":554915414788471638},"usedName":{"valueName":{"identifier":"writeArray"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":">>"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"GHC.Exts"},"usedName":{"valueName":{"identifier":"fromList"}},"qualification":"Exts"},{"reference":{"builtinModule":"Data.Foldable"},"usedName":{"valueName":{"identifier":"length"}},"qualification":null},{"reference":{"builtinModule":"GHC.Exts"},"usedName":{"valueName":{"identifier":"toList"}},"qualification":"Exts"},{"reference":{"builtinModule":"Data.Foldable"},"usedName":{"valueName":{"identifier":"toList"}},"qualification":null}],"fragment":["instance Exts.IsList (Array a) where\n        type Item (Array a) = a\n        fromListN n l\n          = createArray n (die \"fromListN\" \"mismatched size and list\") $\n              \\ mi ->\n                let go i (x : xs) = writeArray mi i x >> go (i + 1) xs\n                    go _ [] = return ()\n                  in go 0 l\n        fromList l = Exts.fromListN (length l) l\n        toList = toList"],"instances":[],"language":{"extensions":["MagicHash","UnboxedTuples","DeriveDataTypeable","BangPatterns","RankNTypes","TypeFamilies","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":true}}