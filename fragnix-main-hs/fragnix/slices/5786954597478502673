{"sliceID":5786954597478502673,"uses":[{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"map"}},"qualification":null},{"reference":{"otherSlice":4787763427951093240},"usedName":{"valueName":{"identifier":"mk"}},"qualification":"CI"},{"reference":{"otherSlice":9017596368694003413},"usedName":{"valueName":{"identifier":"mapResponseHeaders"}},"qualification":null},{"reference":{"builtinModule":"GHC.List"},"usedName":{"valueName":{"identifier":"filter"}},"qualification":null},{"reference":{"builtinModule":"Data.Tuple"},"usedName":{"valueName":{"identifier":"fst"}},"qualification":null},{"reference":{"builtinModule":"Data.Foldable"},"usedName":{"valueName":{"identifier":"notElem"}},"qualification":null},{"reference":{"otherSlice":4010822550476529195},"usedName":{"typeName":{"identifier":"ByteString"}},"qualification":null},{"reference":{"otherSlice":8896971230885589368},"usedName":{"typeName":{"identifier":"Response"}},"qualification":null}],"fragment":["stripHeaders :: [ByteString] -> (Response -> Response)","stripHeaders hs\n  = let hnames = map CI.mk hs in\n      mapResponseHeaders (filter (\\ hdr -> fst hdr `notElem` hnames))"],"instances":[],"language":{"extensions":["OverloadedStrings","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}