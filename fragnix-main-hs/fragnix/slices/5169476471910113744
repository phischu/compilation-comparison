{"sliceID":5169476471910113744,"uses":[{"reference":{"otherSlice":386873204376864945},"usedName":{"valueName":{"identifier":"unstream"}},"qualification":null},{"reference":{"otherSlice":4169325315089601918},"usedName":{"valueName":{"identifier":"scanl"}},"qualification":"S"},{"reference":{"otherSlice":1355624681337041399},"usedName":{"valueName":{"identifier":"stream"}},"qualification":null},{"reference":{"otherSlice":8720616505311582446},"usedName":{"valueName":{"identifier":"safe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Char"}},"qualification":null},{"reference":{"otherSlice":5700351957984311116},"usedName":{"typeName":{"identifier":"Text"}},"qualification":null}],"fragment":["scanl :: (Char -> Char -> Char) -> Char -> Text -> Text","scanl f z t = unstream (S.scanl g z (stream t))\n  where g a b = safe (f a b)"],"instances":[],"language":{"extensions":["BangPatterns","MagicHash","TypeFamilies","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}