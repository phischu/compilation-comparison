{"sliceID":196398726453624288,"uses":[{"reference":{"otherSlice":3089301142827340338},"usedName":{"typeName":{"identifier":"MonadBaseControl"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null},{"reference":{"otherSlice":7686766802920706652},"usedName":{"valueName":{"identifier":"control"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO"},"usedName":{"valueName":{"identifier":"mask"}},"qualification":"E"},{"reference":{"otherSlice":2756799654338067511},"usedName":{"valueName":{"identifier":"liftBaseOp_"}},"qualification":null}],"fragment":["mask ::\n       MonadBaseControl IO m => ((forall a . m a -> m a) -> m b) -> m b","mask f\n  = control $\n      \\ runInBase -> E.mask $ \\ g -> runInBase $ f $ liftBaseOp_ g"],"instances":[],"language":{"extensions":["NoImplicitPrelude","ExistentialQuantification","FlexibleContexts","RankNTypes","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}