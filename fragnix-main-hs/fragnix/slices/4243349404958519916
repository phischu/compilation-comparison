{"sliceID":4243349404958519916,"uses":[{"reference":{"otherSlice":2921449568316915535},"usedName":{"typeName":{"identifier":"Parser"}},"qualification":null},{"reference":{"otherSlice":2241541392207318616},"usedName":{"typeName":{"identifier":"Text"}},"qualification":null},{"reference":{"otherSlice":2692508683421592563},"usedName":{"valueName":{"identifier":"scan"}},"qualification":"A"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"<*"}},"qualification":null},{"reference":{"otherSlice":1602417609265774386},"usedName":{"valueName":{"identifier":"anyWord8"}},"qualification":"A"},{"reference":{"otherSlice":2629811951709569108},"usedName":{"valueName":{"identifier":"unescapeText"}},"qualification":null},{"reference":{"builtinModule":"Data.Either"},"usedName":{"constructorName":{"identifier":"Right"},"constructorTypeName":{"identifier":"Either"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"Data.Either"},"usedName":{"constructorName":{"identifier":"Left"},"constructorTypeName":{"identifier":"Either"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"fail"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"GHC.Show"},"usedName":{"valueName":{"identifier":"show"}},"qualification":null},{"reference":{"otherSlice":5992440094370673928},"usedName":{"constructorName":{"identifier":"S"},"constructorTypeName":{"identifier":"S"}},"qualification":null},{"reference":{"builtinModule":"GHC.Word"},"usedName":{"constructorName":{"identifier":"W8#"},"constructorTypeName":{"identifier":"Word8"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"valueName":{"identifier":"isTrue#"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Prim"},"usedName":{"valueName":{"identifier":"word2Int#"}},"qualification":null},{"reference":{"builtinModule":"GHC.Prim"},"usedName":{"valueName":{"operator":"==#"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Nothing"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null}],"fragment":["jstring_ :: Parser Text","jstring_\n  = {-# SCC \"jstring_\" #-}\n      do s <- A.scan startState go <* A.anyWord8\n         case unescapeText s of\n             Right r -> return r\n             Left err -> fail $ show err\n  where startState = S 0#\n        go (S a) (W8# c)\n          | isTrue# a = Just (S 0#)\n          | isTrue# (word2Int# c ==# 34#) = Nothing\n          | otherwise = let a' = word2Int# c ==# 92# in Just (S a')"],"instances":[],"language":{"extensions":["BangPatterns","OverloadedStrings","MagicHash","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}