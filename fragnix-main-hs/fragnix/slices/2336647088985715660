{"sliceID":2336647088985715660,"uses":[{"reference":{"otherSlice":2946060544503603071},"usedName":{"valueName":{"identifier":"liftBaseWith"}},"qualification":null},{"reference":{"builtinModule":"Control.Exception.Base"},"usedName":{"valueName":{"identifier":"try"}},"qualification":"E"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":">>="}},"qualification":null},{"reference":{"otherSlice":6168520986088681806},"usedName":{"valueName":{"identifier":"sequenceEither"}},"qualification":null},{"reference":{"otherSlice":2946060544503603071},"usedName":{"typeName":{"identifier":"MonadBaseControl"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null},{"reference":{"builtinModule":"GHC.Exception"},"usedName":{"typeName":{"identifier":"Exception"}},"qualification":null},{"reference":{"builtinModule":"Data.Either"},"usedName":{"typeName":{"identifier":"Either"}},"qualification":null}],"fragment":["try ::\n      (MonadBaseControl IO m, Exception e) => m a -> m (Either e a)","try m\n  = liftBaseWith (\\ runInIO -> E.try (runInIO m)) >>= sequenceEither"],"instances":[],"language":{"extensions":["NoImplicitPrelude","ExistentialQuantification","FlexibleContexts","RankNTypes","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}