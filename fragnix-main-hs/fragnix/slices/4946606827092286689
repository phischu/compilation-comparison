{"sliceID":4946606827092286689,"uses":[{"reference":{"otherSlice":5880482885310492406},"usedName":{"valueName":{"identifier":"unstreamR"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null},{"reference":{"otherSlice":1470416861628802485},"usedName":{"valueName":{"identifier":"scanl"}},"qualification":"Stream"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"flip"}},"qualification":null},{"reference":{"otherSlice":5929876489315814621},"usedName":{"valueName":{"identifier":"streamR"}},"qualification":null},{"reference":{"otherSlice":8934491602005769172},"usedName":{"typeName":{"identifier":"Vector"}},"qualification":null}],"fragment":["scanr ::\n        (Vector v a, Vector v b) => (a -> b -> b) -> b -> v a -> v b","scanr f z = unstreamR . Stream.scanl (flip f) z . streamR"],"instances":[],"language":{"extensions":["DeriveDataTypeable","Rank2Types","MultiParamTypeClasses","FlexibleContexts","TypeFamilies","ScopedTypeVariables","BangPatterns","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}