{"sliceID":7175972213004608947,"uses":[{"reference":{"otherSlice":3224449322082811614},"usedName":{"constructorName":{"identifier":"HashPSQ"},"constructorTypeName":{"identifier":"HashPSQ"}},"qualification":null},{"reference":{"otherSlice":1543787085560373111},"usedName":{"valueName":{"identifier":"alter"}},"qualification":"IntPSQ"},{"reference":{"otherSlice":2051332017860334620},"usedName":{"valueName":{"identifier":"hash"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Nothing"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":7487454122265490466},"usedName":{"typeName":{"identifier":"Bucket"}},"qualification":null},{"reference":{"otherSlice":7487454122265490466},"usedName":{"constructorName":{"identifier":"B"},"constructorTypeName":{"identifier":"Bucket"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"otherSlice":1930047187859149429},"usedName":{"valueName":{"identifier":"minView"}},"qualification":"OrdPSQ"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"otherSlice":6853604625936942139},"usedName":{"valueName":{"identifier":"deleteView"}},"qualification":"OrdPSQ"},{"reference":{"otherSlice":2051332017860334620},"usedName":{"typeName":{"identifier":"Hashable"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"typeName":{"identifier":"Ord"}},"qualification":null},{"reference":{"otherSlice":3224449322082811614},"usedName":{"typeName":{"identifier":"HashPSQ"}},"qualification":null}],"fragment":["deleteView ::\n           forall k p v . (Hashable k, Ord k, Ord p) =>\n             k -> HashPSQ k p v -> Maybe (p, v, HashPSQ k p v)","deleteView k (HashPSQ ipsq)\n  = case IntPSQ.alter f (hash k) ipsq of\n        (Nothing, _) -> Nothing\n        (Just (p, x), ipsq') -> Just (p, x, HashPSQ ipsq')\n  where f ::\n          Maybe (p, Bucket k p v) -> (Maybe (p, v), Maybe (p, Bucket k p v))\n        f Nothing = (Nothing, Nothing)\n        f (Just (p, B bk bx opsq))\n          | k == bk =\n            case OrdPSQ.minView opsq of\n                Nothing -> (Just (p, bx), Nothing)\n                Just (k', p', x', opsq') -> (Just (p, bx),\n                                             Just (p', B k' x' opsq'))\n          | otherwise =\n            case OrdPSQ.deleteView k opsq of\n                Nothing -> (Nothing, Nothing)\n                Just (p', x', opsq') -> (Just (p', x'), Just (p, B bk bx opsq'))"],"instances":[],"language":{"extensions":["BangPatterns","DeriveFoldable","DeriveFunctor","DeriveTraversable","GeneralizedNewtypeDeriving","ScopedTypeVariables","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}