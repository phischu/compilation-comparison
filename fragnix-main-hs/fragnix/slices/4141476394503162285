{"sliceID":4141476394503162285,"uses":[{"reference":{"otherSlice":4550311875082670326},"usedName":{"constructorName":{"identifier":"WhenMissing"},"constructorTypeName":{"identifier":"WhenMissing"}},"qualification":null},{"reference":{"otherSlice":4550311875082670326},"usedName":{"valueName":{"identifier":"missingSubtree"}},"qualification":null},{"reference":{"otherSlice":4550311875082670326},"usedName":{"valueName":{"identifier":"missingKey"}},"qualification":null},{"reference":{"otherSlice":6827720984828590032},"usedName":{"constructorName":{"identifier":"WhenMatched"},"constructorTypeName":{"identifier":"WhenMatched"}},"qualification":null},{"reference":{"otherSlice":4406277257444163371},"usedName":{"constructorName":{"identifier":"Tip"},"constructorTypeName":{"identifier":"Map"}},"qualification":null},{"reference":{"otherSlice":4406277257444163371},"usedName":{"constructorName":{"identifier":"Bin"},"constructorTypeName":{"identifier":"Map"}},"qualification":null},{"reference":{"otherSlice":6824479104392179637},"usedName":{"valueName":{"identifier":"splitLookup"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Nothing"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"liftA3"}},"qualification":null},{"reference":{"builtinModule":"Data.Maybe"},"usedName":{"valueName":{"identifier":"maybe"}},"qualification":null},{"reference":{"otherSlice":8591646212762114909},"usedName":{"valueName":{"identifier":"link2"}},"qualification":null},{"reference":{"otherSlice":7995582847914420959},"usedName":{"valueName":{"identifier":"link"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Applicative"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"typeName":{"identifier":"Ord"}},"qualification":null},{"reference":{"otherSlice":4550311875082670326},"usedName":{"typeName":{"identifier":"WhenMissing"}},"qualification":null},{"reference":{"otherSlice":6827720984828590032},"usedName":{"typeName":{"identifier":"WhenMatched"}},"qualification":null},{"reference":{"otherSlice":4406277257444163371},"usedName":{"typeName":{"identifier":"Map"}},"qualification":null}],"fragment":["mergeA ::\n         (Applicative f, Ord k) =>\n         WhenMissing f k a c ->\n           WhenMissing f k b c ->\n             WhenMatched f k a b c -> Map k a -> Map k b -> f (Map k c)","mergeA WhenMissing{missingSubtree = g1t, missingKey = g1k}\n  WhenMissing{missingSubtree = g2t} (WhenMatched f) = go\n  where go t1 Tip = g1t t1\n        go Tip t2 = g2t t2\n        go (Bin _ kx x1 l1 r1) t2\n          = case splitLookup kx t2 of\n                (l2, mx2, r2) -> case mx2 of\n                                     Nothing -> liftA3\n                                                  (\\ l' mx' r' -> maybe link2 (link kx) mx' l' r')\n                                                  l1l2\n                                                  (g1k kx x1)\n                                                  r1r2\n                                     Just x2 -> liftA3\n                                                  (\\ l' mx' r' -> maybe link2 (link kx) mx' l' r')\n                                                  l1l2\n                                                  (f kx x1 x2)\n                                                  r1r2\n                  where !l1l2 = go l1 l2\n                        !r1r2 = go r1 r2"],"instances":[],"language":{"extensions":["BangPatterns","PatternGuards","DeriveDataTypeable","StandaloneDeriving","RoleAnnotations","TypeFamilies","MagicHash","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll"],"isInstance":false}}