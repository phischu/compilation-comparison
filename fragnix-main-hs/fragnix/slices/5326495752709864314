{"sliceID":5326495752709864314,"uses":[{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":8556082736304368763},"usedName":{"valueName":{"identifier":"uncons"}},"qualification":"B"},{"reference":{"builtinModule":"Data.Maybe"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":7389831803702733683},"usedName":{"valueName":{"identifier":"breakByte"}},"qualification":"B"},{"reference":{"otherSlice":771203234283857029},"usedName":{"valueName":{"identifier":"decodePathSegment"}},"qualification":null},{"reference":{"otherSlice":675696118971413715},"usedName":{"valueName":{"identifier":"null"}},"qualification":"B"},{"reference":{"otherSlice":6985366053944096403},"usedName":{"valueName":{"identifier":"drop"}},"qualification":"B"},{"reference":{"otherSlice":8642306666063513779},"usedName":{"typeName":{"identifier":"ByteString"}},"qualification":"B"},{"reference":{"otherSlice":6742866475076404776},"usedName":{"typeName":{"identifier":"Text"}},"qualification":null}],"fragment":["decodePathSegments :: B.ByteString -> [Text]","decodePathSegments \"\" = []\ndecodePathSegments \"/\" = []\ndecodePathSegments a = go $ drop1Slash a\n  where drop1Slash bs\n          = case B.uncons bs of\n                Just (47, bs') -> bs'\n                _ -> bs\n        go bs\n          = let (x, y) = B.breakByte 47 bs in\n              decodePathSegment x : if B.null y then [] else go $ B.drop 1 y"],"instances":[],"language":{"extensions":["OverloadedStrings","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}