{"sliceID":7621902729901128220,"uses":[{"reference":{"otherSlice":3281333190237423352},"usedName":{"valueName":{"identifier":"unstreamM"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null},{"reference":{"otherSlice":266484267662195323},"usedName":{"valueName":{"identifier":"mapM"}},"qualification":"Bundle"},{"reference":{"otherSlice":5483074428067105677},"usedName":{"valueName":{"identifier":"stream"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Monad"}},"qualification":null},{"reference":{"otherSlice":8572689894313737623},"usedName":{"typeName":{"identifier":"Vector"}},"qualification":null}],"fragment":["mapM ::\n       (Monad m, Vector v a, Vector v b) => (a -> m b) -> v a -> m (v b)","mapM f = unstreamM . Bundle.mapM f . stream"],"instances":[],"language":{"extensions":["Rank2Types","MultiParamTypeClasses","FlexibleContexts","TypeFamilies","ScopedTypeVariables","BangPatterns","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}