{"sliceID":3231595289245328912,"uses":[{"reference":{"builtinModule":"GHC.Integer.GMP.Internals"},"usedName":{"typeName":{"identifier":"Integer"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"<"}},"qualification":null},{"reference":{"builtinModule":"GHC.Err"},"usedName":{"valueName":{"identifier":"error"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"I#"},"constructorTypeName":{"identifier":"Int"}},"qualification":null},{"reference":{"builtinModule":"GHC.Integer.Logarithms"},"usedName":{"valueName":{"identifier":"integerLog2#"}},"qualification":null}],"fragment":["integerLog2 :: Integer -> Int","integerLog2 n\n  | n < 1 =\n    error\n      \"Math.NumberTheory.Logarithms.integerLog2: argument must be positive\"\n  | otherwise = I# (integerLog2# n)"],"instances":[],"language":{"extensions":["MagicHash","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}