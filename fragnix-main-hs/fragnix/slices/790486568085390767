{"sliceID":790486568085390767,"uses":[{"reference":{"builtinModule":"System.Environment"},"usedName":{"valueName":{"identifier":"getEnv"}},"qualification":null},{"reference":{"builtinModule":"System.IO.Error"},"usedName":{"valueName":{"identifier":"catchIOError"}},"qualification":null},{"reference":{"builtinModule":"System.IO.Error"},"usedName":{"valueName":{"identifier":"isDoesNotExistError"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"GHC.Exception"},"usedName":{"valueName":{"identifier":"throw"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO"},"usedName":{"typeName":{"identifier":"FilePath"}},"qualification":null}],"fragment":["getTemporaryDirectory :: IO FilePath","getTemporaryDirectory\n  = do getEnv \"TMPDIR\" `catchIOError`\n         \\ e -> if isDoesNotExistError e then return \"/tmp\" else throw e"],"instances":[],"language":{"extensions":["NondecreasingIndentation","MultiParamTypeClasses","ExplicitForAll","PatternGuards"],"isInstance":false}}