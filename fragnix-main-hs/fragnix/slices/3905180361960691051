{"sliceID":3905180361960691051,"uses":[{"reference":{"otherSlice":8785507881657649312},"usedName":{"valueName":{"identifier":"runParser"}},"qualification":null},{"reference":{"otherSlice":8110604328950241751},"usedName":{"valueName":{"identifier":"demandInput_"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":">>="}},"qualification":null},{"reference":{"otherSlice":8785507881657649312},"usedName":{"constructorName":{"identifier":"Parser"},"constructorTypeName":{"identifier":"Parser"}},"qualification":"T"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":257242900272862120},"usedName":{"valueName":{"identifier":"commonPrefixes"}},"qualification":"T"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Nothing"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":1423595995722349223},"usedName":{"valueName":{"identifier":"null"}},"qualification":"T"},{"reference":{"otherSlice":494130822622245686},"usedName":{"constructorName":{"identifier":"Pos"},"constructorTypeName":{"identifier":"Pos"}},"qualification":null},{"reference":{"otherSlice":3513142258151533013},"usedName":{"valueName":{"identifier":"lengthWord16"}},"qualification":"T"},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"otherSlice":667365505062687263},"usedName":{"valueName":{"identifier":"substring"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"otherSlice":2241541392207318616},"usedName":{"typeName":{"identifier":"Text"}},"qualification":null},{"reference":{"otherSlice":4855283351988594762},"usedName":{"typeName":{"identifier":"Buffer"}},"qualification":null},{"reference":{"otherSlice":494130822622245686},"usedName":{"typeName":{"identifier":"Pos"}},"qualification":null},{"reference":{"otherSlice":5210530093827115852},"usedName":{"typeName":{"identifier":"More"}},"qualification":null},{"reference":{"otherSlice":4706368261711476883},"usedName":{"typeName":{"identifier":"Failure"}},"qualification":null},{"reference":{"otherSlice":5496378818065695349},"usedName":{"typeName":{"identifier":"Success"}},"qualification":null},{"reference":{"otherSlice":8059514202366001557},"usedName":{"typeName":{"identifier":"Result"}},"qualification":null}],"fragment":["stringSuspended ::\n                (Text -> Text) ->\n                  Text ->\n                    Text ->\n                      Buffer -> Pos -> More -> Failure r -> Success Text r -> Result r","stringSuspended f s000 s0 t0 pos0 more0 lose0 succ0\n  = runParser (demandInput_ >>= go) t0 pos0 more0 lose0 succ0\n  where go s'\n          = T.Parser $\n              \\ t pos more lose succ ->\n                let s = f s' in\n                  case T.commonPrefixes s0 s of\n                      Nothing -> lose t pos more [] \"string\"\n                      Just (_pfx, ssfx, tsfx) | T.null ssfx ->\n                                                let l = Pos (T.lengthWord16 s000) in\n                                                  succ t (pos + l) more (substring pos l t)\n                                              | T.null tsfx ->\n                                                stringSuspended f s000 ssfx t pos more lose succ\n                                              | otherwise -> lose t pos more [] \"string\""],"instances":[],"language":{"extensions":["BangPatterns","FlexibleInstances","GADTs","OverloadedStrings","Rank2Types","RecordWildCards","TypeFamilies","TypeSynonymInstances","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}