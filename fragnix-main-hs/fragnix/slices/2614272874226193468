{"sliceID":2614272874226193468,"uses":[{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Monad"}},"qualification":null},{"reference":{"otherSlice":196551500793978085},"usedName":{"typeName":{"identifier":"MonadError"}},"qualification":null},{"reference":{"otherSlice":1241761596975731733},"usedName":{"typeName":{"identifier":"ExceptT"}},"qualification":null},{"reference":{"otherSlice":196551500793978085},"usedName":{"valueName":{"identifier":"throwError"}},"qualification":null},{"reference":{"otherSlice":6622441572639390814},"usedName":{"valueName":{"identifier":"throwE"}},"qualification":"ExceptT"},{"reference":{"otherSlice":196551500793978085},"usedName":{"valueName":{"identifier":"catchError"}},"qualification":null},{"reference":{"otherSlice":5591272549291925841},"usedName":{"valueName":{"identifier":"catchE"}},"qualification":"ExceptT"}],"fragment":["instance Monad m => MonadError e (ExceptT e m) where\n        throwError = ExceptT.throwE\n        catchError = ExceptT.catchE"],"instances":[],"language":{"extensions":["MultiParamTypeClasses","FunctionalDependencies","FlexibleInstances","UndecidableInstances","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":true}}