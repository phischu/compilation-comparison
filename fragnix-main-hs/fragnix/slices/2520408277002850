{"sliceID":2520408277002850,"uses":[{"reference":{"otherSlice":7108958530577935890},"usedName":{"valueName":{"identifier":"isPosix"}},"qualification":null},{"reference":{"builtinModule":"GHC.List"},"usedName":{"valueName":{"identifier":"length"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":">="}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"&&"}},"qualification":null},{"reference":{"builtinModule":"GHC.List"},"usedName":{"valueName":{"identifier":"all"}},"qualification":null},{"reference":{"otherSlice":8016967709815987406},"usedName":{"valueName":{"identifier":"isPathSeparator"}},"qualification":null},{"reference":{"builtinModule":"GHC.List"},"usedName":{"valueName":{"identifier":"take"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"++"}},"qualification":null},{"reference":{"otherSlice":1984839075869969633},"usedName":{"valueName":{"identifier":"joinDrive"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":3154808444676624085},"usedName":{"valueName":{"identifier":"splitDrive"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"map"}},"qualification":null},{"reference":{"builtinModule":"GHC.List"},"usedName":{"valueName":{"identifier":"elem"}},"qualification":null},{"reference":{"otherSlice":6197048896430682067},"usedName":{"valueName":{"identifier":"badCharacters"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"otherSlice":5485054675587763819},"usedName":{"valueName":{"identifier":"joinPath"}},"qualification":null},{"reference":{"otherSlice":1202087755029244194},"usedName":{"valueName":{"identifier":"splitPath"}},"qualification":null},{"reference":{"builtinModule":"GHC.List"},"usedName":{"valueName":{"identifier":"reverse"}},"qualification":null},{"reference":{"builtinModule":"GHC.List"},"usedName":{"valueName":{"identifier":"span"}},"qualification":null},{"reference":{"builtinModule":"GHC.Unicode"},"usedName":{"valueName":{"identifier":"toUpper"}},"qualification":null},{"reference":{"otherSlice":6365202011982503947},"usedName":{"valueName":{"identifier":"badElements"}},"qualification":null},{"reference":{"otherSlice":9017684592245659270},"usedName":{"valueName":{"operator":"<.>"}},"qualification":null},{"reference":{"otherSlice":5419675369402405491},"usedName":{"valueName":{"identifier":"splitExtensions"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO"},"usedName":{"typeName":{"identifier":"FilePath"}},"qualification":null}],"fragment":["makeValid :: FilePath -> FilePath","makeValid \"\" = \"_\"\nmakeValid path | isPosix = path\nmakeValid x\n  | length x >= 2 && all isPathSeparator x = take 2 x ++ \"drive\"\nmakeValid path = joinDrive drv $ validElements $ validChars pth\n  where (drv, pth) = splitDrive path\n        validChars = map f\n        f x\n          | x `elem` badCharacters = '_'\n          | otherwise = x\n        validElements x = joinPath $ map g $ splitPath x\n        g x = h (reverse b) ++ reverse a\n          where (a, b) = span isPathSeparator $ reverse x\n        h x\n          = if map toUpper a `elem` badElements then a ++ \"_\" <.> b else x\n          where (a, b) = splitExtensions x"],"instances":[],"language":{"extensions":["MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}