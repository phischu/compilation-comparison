{"sliceID":8010158739140238939,"uses":[{"reference":{"otherSlice":7949339268674780491},"usedName":{"constructorName":{"identifier":"C"},"constructorTypeName":{"identifier":"Get"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":7949339268674780491},"usedName":{"valueName":{"identifier":"runCont"}},"qualification":null},{"reference":{"otherSlice":4921503095993748944},"usedName":{"constructorName":{"identifier":"Done"},"constructorTypeName":{"identifier":"Decoder"}},"qualification":null},{"reference":{"otherSlice":4921503095993748944},"usedName":{"constructorName":{"identifier":"Partial"},"constructorTypeName":{"identifier":"Decoder"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null},{"reference":{"otherSlice":4921503095993748944},"usedName":{"constructorName":{"identifier":"Fail"},"constructorTypeName":{"identifier":"Decoder"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"++"}},"qualification":null},{"reference":{"otherSlice":4921503095993748944},"usedName":{"constructorName":{"identifier":"BytesRead"},"constructorTypeName":{"identifier":"Decoder"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"String"}},"qualification":null},{"reference":{"otherSlice":7949339268674780491},"usedName":{"typeName":{"identifier":"Get"}},"qualification":null}],"fragment":["label :: String -> Get a -> Get a","label msg decoder\n  = C $\n      \\ inp ks ->\n        let r0 = runCont decoder inp (\\ inp' a -> Done inp' a)\n            go r\n              = case r of\n                    Done inp' a -> ks inp' a\n                    Partial k -> Partial (go . k)\n                    Fail inp' s -> Fail inp' (s ++ \"\\n\" ++ msg)\n                    BytesRead u k -> BytesRead u (go . k)\n          in go r0"],"instances":[],"language":{"extensions":["RankNTypes","MagicHash","BangPatterns","TypeFamilies","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}