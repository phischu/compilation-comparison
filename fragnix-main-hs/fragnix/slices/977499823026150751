{"sliceID":977499823026150751,"uses":[{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null},{"reference":{"builtinModule":"Data.Foldable"},"usedName":{"valueName":{"identifier":"toList"}},"qualification":"Foldable"},{"reference":{"otherSlice":922052853736689873},"usedName":{"constructorName":{"operator":":|"},"constructorTypeName":{"identifier":"NonEmpty"}},"qualification":null},{"reference":{"builtinModule":"GHC.List"},"usedName":{"valueName":{"identifier":"span"}},"qualification":"List"},{"reference":{"builtinModule":"Data.Foldable"},"usedName":{"typeName":{"identifier":"Foldable"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"otherSlice":922052853736689873},"usedName":{"typeName":{"identifier":"NonEmpty"}},"qualification":null}],"fragment":["groupBy :: Foldable f => (a -> a -> Bool) -> f a -> [NonEmpty a]","groupBy eq0 = go eq0 . Foldable.toList\n  where go _ [] = []\n        go eq (x : xs) = (x :| ys) : groupBy eq zs\n          where (ys, zs) = List.span (eq x) xs"],"instances":[],"language":{"extensions":["DeriveDataTypeable","DeriveGeneric","TypeFamilies","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}