{"sliceID":5509779685441209175,"uses":[{"reference":{"builtinModule":"GHC.Real"},"usedName":{"typeName":{"identifier":"RealFrac"}},"qualification":null},{"reference":{"otherSlice":655943511058533134},"usedName":{"typeName":{"identifier":"Scientific"}},"qualification":null},{"reference":{"builtinModule":"GHC.Real"},"usedName":{"valueName":{"identifier":"properFraction"}},"qualification":null},{"reference":{"otherSlice":655943511058533134},"usedName":{"constructorName":{"identifier":"Scientific"},"constructorTypeName":{"identifier":"Scientific"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"<"}},"qualification":null},{"reference":{"otherSlice":5401736758592844430},"usedName":{"valueName":{"identifier":"dangerouslySmall"}},"qualification":null},{"reference":{"builtinModule":"GHC.Real"},"usedName":{"valueName":{"identifier":"quotRem"}},"qualification":null},{"reference":{"otherSlice":235860202706809728},"usedName":{"valueName":{"identifier":"magnitude"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"identifier":"fromInteger"}},"qualification":null},{"reference":{"otherSlice":2794777964408613631},"usedName":{"valueName":{"identifier":"scientific"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"otherSlice":9132385980192987407},"usedName":{"valueName":{"identifier":"toIntegral"}},"qualification":null},{"reference":{"builtinModule":"GHC.Real"},"usedName":{"valueName":{"identifier":"truncate"}},"qualification":null},{"reference":{"otherSlice":4542313401038864995},"usedName":{"valueName":{"identifier":"whenFloating"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"GHC.Real"},"usedName":{"valueName":{"identifier":"quot"}},"qualification":null},{"reference":{"builtinModule":"GHC.Real"},"usedName":{"valueName":{"identifier":"round"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"-"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"identifier":"signum"}},"qualification":null},{"reference":{"otherSlice":655943511058533134},"usedName":{"valueName":{"identifier":"coefficient"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"identifier":"abs"}},"qualification":null},{"reference":{"builtinModule":"GHC.Real"},"usedName":{"valueName":{"identifier":"even"}},"qualification":null},{"reference":{"builtinModule":"GHC.Err"},"usedName":{"valueName":{"identifier":"error"}},"qualification":null},{"reference":{"builtinModule":"GHC.Real"},"usedName":{"valueName":{"identifier":"ceiling"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"<="}},"qualification":null},{"reference":{"builtinModule":"Prelude"},"usedName":{"valueName":{"operator":"$!"}},"qualification":null},{"reference":{"builtinModule":"GHC.Real"},"usedName":{"valueName":{"identifier":"floor"}},"qualification":null},{"reference":{"builtinModule":"GHC.Real"},"usedName":{"valueName":{"identifier":"div"}},"qualification":null}],"fragment":["instance RealFrac Scientific where\n        properFraction s@(Scientific c e)\n          | e < 0 =\n            if dangerouslySmall c e then (0, s) else\n              let (q, r) = c `quotRem` magnitude (-e) in\n                (fromInteger q, scientific r e)\n          | otherwise = (toIntegral s, 0)\n        \n        {-# INLINE properFraction #-}\n        truncate\n          = whenFloating $\n              \\ c e ->\n                if dangerouslySmall c e then 0 else\n                  fromInteger $ c `quot` magnitude (-e)\n        \n        {-# INLINE truncate #-}\n        round\n          = whenFloating $\n              \\ c e ->\n                if dangerouslySmall c e then 0 else\n                  let (q, r) = c `quotRem` magnitude (-e)\n                      n = fromInteger q\n                      m = if r < 0 then n - 1 else n + 1\n                      f = scientific r e\n                    in\n                    case signum $ coefficient $ abs f - 0.5 of\n                        -1 -> n\n                        0 -> if even n then n else m\n                        1 -> m\n                        _ -> error \"round default defn: Bad value\"\n        \n        {-# INLINE round #-}\n        ceiling\n          = whenFloating $\n              \\ c e ->\n                if dangerouslySmall c e then if c <= 0 then 0 else 1 else\n                  let (q, r) = c `quotRem` magnitude (-e) in\n                    fromInteger $! if r <= 0 then q else q + 1\n        \n        {-# INLINE ceiling #-}\n        floor\n          = whenFloating $\n              \\ c e ->\n                if dangerouslySmall c e then if c < 0 then -1 else 0 else\n                  fromInteger (c `div` magnitude (-e))\n        \n        {-# INLINE floor #-}"],"instances":[],"language":{"extensions":["DeriveDataTypeable","BangPatterns","ScopedTypeVariables","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":true}}