{"sliceID":6207471131858593646,"uses":[{"reference":{"otherSlice":6354384331303644420},"usedName":{"typeName":{"identifier":"Consume"}},"qualification":null},{"reference":{"otherSlice":7375684867847713962},"usedName":{"valueName":{"identifier":"break"}},"qualification":"B"},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"otherSlice":7202692338078551997},"usedName":{"valueName":{"identifier":"null"}},"qualification":"B"},{"reference":{"builtinModule":"Data.Either"},"usedName":{"constructorName":{"identifier":"Left"},"constructorTypeName":{"identifier":"Either"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"builtinModule":"Data.Either"},"usedName":{"constructorName":{"identifier":"Right"},"constructorTypeName":{"identifier":"Either"}},"qualification":null},{"reference":{"otherSlice":3748312495235440417},"usedName":{"valueName":{"identifier":"drop"}},"qualification":"B"}],"fragment":["consumeUntilNul :: Consume ()","consumeUntilNul _ str\n  = case B.break (== 0) str of\n        (want, rest) | B.null rest -> Left ()\n                     | otherwise -> Right (want, B.drop 1 rest)"],"instances":[],"language":{"extensions":["RankNTypes","MagicHash","BangPatterns","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}