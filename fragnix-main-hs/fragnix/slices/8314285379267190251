{"sliceID":8314285379267190251,"uses":[{"reference":{"otherSlice":8434830524291201891},"usedName":{"valueName":{"identifier":"control"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO"},"usedName":{"valueName":{"identifier":"uninterruptibleMask"}},"qualification":"E"},{"reference":{"otherSlice":5274235527769873836},"usedName":{"valueName":{"identifier":"liftBaseOp_"}},"qualification":null},{"reference":{"otherSlice":2946060544503603071},"usedName":{"typeName":{"identifier":"MonadBaseControl"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null}],"fragment":["uninterruptibleMask ::\n                      MonadBaseControl IO m => ((forall a . m a -> m a) -> m b) -> m b","uninterruptibleMask f\n  = control $\n      \\ runInBase ->\n        E.uninterruptibleMask $ \\ g -> runInBase $ f $ liftBaseOp_ g"],"instances":[],"language":{"extensions":["NoImplicitPrelude","ExistentialQuantification","FlexibleContexts","RankNTypes","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}