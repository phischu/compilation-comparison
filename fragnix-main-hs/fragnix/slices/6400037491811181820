{"sliceID":6400037491811181820,"uses":[{"reference":{"builtinModule":"GHC.Enum"},"usedName":{"typeName":{"identifier":"Enum"}},"qualification":null},{"reference":{"otherSlice":5601756352919082239},"usedName":{"typeName":{"identifier":"WrappedMonoid"}},"qualification":null},{"reference":{"builtinModule":"GHC.Enum"},"usedName":{"valueName":{"identifier":"succ"}},"qualification":null},{"reference":{"otherSlice":5601756352919082239},"usedName":{"constructorName":{"identifier":"WrapMonoid"},"constructorTypeName":{"identifier":"WrappedMonoid"}},"qualification":null},{"reference":{"builtinModule":"GHC.Enum"},"usedName":{"valueName":{"identifier":"pred"}},"qualification":null},{"reference":{"builtinModule":"GHC.Enum"},"usedName":{"valueName":{"identifier":"toEnum"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null},{"reference":{"builtinModule":"GHC.Enum"},"usedName":{"valueName":{"identifier":"fromEnum"}},"qualification":null},{"reference":{"otherSlice":5601756352919082239},"usedName":{"valueName":{"identifier":"unwrapMonoid"}},"qualification":null},{"reference":{"builtinModule":"GHC.Enum"},"usedName":{"valueName":{"identifier":"enumFrom"}},"qualification":null},{"reference":{"builtinModule":"Data.Functor"},"usedName":{"valueName":{"operator":"<$>"}},"qualification":null},{"reference":{"builtinModule":"GHC.Enum"},"usedName":{"valueName":{"identifier":"enumFromThen"}},"qualification":null},{"reference":{"builtinModule":"GHC.Enum"},"usedName":{"valueName":{"identifier":"enumFromTo"}},"qualification":null},{"reference":{"builtinModule":"GHC.Enum"},"usedName":{"valueName":{"identifier":"enumFromThenTo"}},"qualification":null}],"fragment":["instance Enum a => Enum (WrappedMonoid a) where\n        succ (WrapMonoid a) = WrapMonoid (succ a)\n        pred (WrapMonoid a) = WrapMonoid (pred a)\n        toEnum = WrapMonoid . toEnum\n        fromEnum = fromEnum . unwrapMonoid\n        enumFrom (WrapMonoid a) = WrapMonoid <$> enumFrom a\n        enumFromThen (WrapMonoid a) (WrapMonoid b)\n          = WrapMonoid <$> enumFromThen a b\n        enumFromTo (WrapMonoid a) (WrapMonoid b)\n          = WrapMonoid <$> enumFromTo a b\n        enumFromThenTo (WrapMonoid a) (WrapMonoid b) (WrapMonoid c)\n          = WrapMonoid <$> enumFromThenTo a b c"],"instances":[],"language":{"extensions":["DeriveDataTypeable","DefaultSignatures","DeriveGeneric","ScopedTypeVariables","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":true}}