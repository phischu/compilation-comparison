{"sliceID":9175644371980767049,"uses":[{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"MonadPlus"}},"qualification":null},{"reference":{"otherSlice":7992777469771370652},"usedName":{"typeName":{"identifier":"SelectT"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"mzero"}},"qualification":null},{"reference":{"otherSlice":7992777469771370652},"usedName":{"constructorName":{"identifier":"SelectT"},"constructorTypeName":{"identifier":"SelectT"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"const"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"mplus"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null}],"fragment":["instance (MonadPlus m) => MonadPlus (SelectT r m) where\n        mzero = SelectT (const mzero)\n        \n        {-# INLINE mzero #-}\n        SelectT f `mplus` SelectT g = SelectT $ \\ k -> f k `mplus` g k\n        \n        {-# INLINE mplus #-}"],"instances":[],"language":{"extensions":["PolyKinds","AutoDeriveTypeable","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":true}}