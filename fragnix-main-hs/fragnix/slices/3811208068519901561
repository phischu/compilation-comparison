{"sliceID":3811208068519901561,"uses":[{"reference":{"otherSlice":4136673170685477501},"usedName":{"constructorName":{"identifier":"Tip"},"constructorTypeName":{"identifier":"Map"}},"qualification":null},{"reference":{"builtinModule":"GHC.Prim"},"usedName":{"valueName":{"identifier":"seq"}},"qualification":null},{"reference":{"otherSlice":4136673170685477501},"usedName":{"constructorName":{"identifier":"Bin"},"constructorTypeName":{"identifier":"Map"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"False"},"constructorTypeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":">="}},"qualification":null},{"reference":{"otherSlice":3037198660365307946},"usedName":{"valueName":{"identifier":"foldlStrict"}},"qualification":null},{"reference":{"otherSlice":4217041042954822635},"usedName":{"valueName":{"identifier":"insert"}},"qualification":null},{"reference":{"builtinModule":"GHC.Err"},"usedName":{"valueName":{"identifier":"undefined"}},"qualification":null},{"reference":{"otherSlice":1386147070881178325},"usedName":{"valueName":{"identifier":"insertMax"}},"qualification":null},{"reference":{"builtinModule":"Data.Bits"},"usedName":{"valueName":{"identifier":"shiftL"}},"qualification":null},{"reference":{"otherSlice":16352432595093499},"usedName":{"valueName":{"identifier":"link"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"builtinModule":"Data.Bits"},"usedName":{"valueName":{"identifier":"shiftR"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"typeName":{"identifier":"Ord"}},"qualification":null},{"reference":{"otherSlice":4136673170685477501},"usedName":{"typeName":{"identifier":"Map"}},"qualification":null}],"fragment":["fromList :: Ord k => [(k, a)] -> Map k a","fromList [] = Tip\nfromList [(kx, x)] = x `seq` Bin 1 kx x Tip Tip\nfromList ((kx0, x0) : xs0)\n  | not_ordered kx0 xs0 =\n    x0 `seq` fromList' (Bin 1 kx0 x0 Tip Tip) xs0\n  | otherwise = x0 `seq` go (1 :: Int) (Bin 1 kx0 x0 Tip Tip) xs0\n  where not_ordered _ [] = False\n        not_ordered kx ((ky, _) : _) = kx >= ky\n        \n        {-# INLINE not_ordered #-}\n        fromList' t0 xs = foldlStrict ins t0 xs\n          where ins t (k, x) = insert k x t\n        go arg _ _ | arg `seq` False = undefined\n        go _ t [] = t\n        go _ t [(kx, x)] = x `seq` insertMax kx x t\n        go s l xs@((kx, x) : xss)\n          | not_ordered kx xss = fromList' l xs\n          | otherwise =\n            case create s xss of\n                (r, ys, []) -> x `seq` go (s `shiftL` 1) (link kx x l r) ys\n                (r, _, ys) -> x `seq` fromList' (link kx x l r) ys\n        create arg _ | arg `seq` False = undefined\n        create _ [] = (Tip, [], [])\n        create s xs@(xp : xss)\n          | s == 1 =\n            case xp of\n                (kx, x) | not_ordered kx xss ->\n                          x `seq` (Bin 1 kx x Tip Tip, [], xss)\n                        | otherwise -> x `seq` (Bin 1 kx x Tip Tip, xss, [])\n          | otherwise =\n            case create (s `shiftR` 1) xs of\n                res@(_, [], _) -> res\n                (l, [(ky, y)], zs) -> y `seq` (insertMax ky y l, [], zs)\n                (l, ys@((ky, y) : yss), _) | not_ordered ky yss -> (l, [], ys)\n                                           | otherwise ->\n                                             case create (s `shiftR` 1) yss of\n                                                 (r, zs, ws) -> y `seq` (link ky y l r, zs, ws)"],"instances":[],"language":{"extensions":["MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}