{"sliceID":7422994771197817154,"uses":[{"reference":{"otherSlice":8011917848744696410},"usedName":{"valueName":{"identifier":"zipWithM"}},"qualification":null},{"reference":{"otherSlice":8603883923225182388},"usedName":{"valueName":{"identifier":"zip"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Monad"}},"qualification":null},{"reference":{"otherSlice":5841983516172584459},"usedName":{"typeName":{"identifier":"Bundle"}},"qualification":null}],"fragment":["zipWith4M ::\n            Monad m =>\n            (a -> b -> c -> d -> m e) ->\n              Bundle m v a ->\n                Bundle m v b -> Bundle m v c -> Bundle m v d -> Bundle m v e","zipWith4M f sa sb sc sd\n  = zipWithM (\\ (a, b) (c, d) -> f a b c d) (zip sa sb) (zip sc sd)"],"instances":[],"language":{"extensions":["ExistentialQuantification","MultiParamTypeClasses","FlexibleInstances","Rank2Types","BangPatterns","KindSignatures","GADTs","ScopedTypeVariables","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}