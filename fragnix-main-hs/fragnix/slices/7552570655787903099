{"sliceID":7552570655787903099,"uses":[{"reference":{"builtinModule":"Data.Bits"},"usedName":{"typeName":{"identifier":"Bits"}},"qualification":null},{"reference":{"otherSlice":7170945053634004430},"usedName":{"typeName":{"identifier":"Natural"}},"qualification":null},{"reference":{"otherSlice":7170945053634004430},"usedName":{"constructorName":{"identifier":"Natural"},"constructorTypeName":{"identifier":"Natural"}},"qualification":null},{"reference":{"builtinModule":"Data.Bits"},"usedName":{"valueName":{"operator":".&."}},"qualification":null},{"reference":{"builtinModule":"Data.Bits"},"usedName":{"valueName":{"operator":".|."}},"qualification":null},{"reference":{"builtinModule":"Data.Bits"},"usedName":{"valueName":{"identifier":"xor"}},"qualification":null},{"reference":{"builtinModule":"Data.Bits"},"usedName":{"valueName":{"identifier":"complement"}},"qualification":null},{"reference":{"builtinModule":"GHC.Err"},"usedName":{"valueName":{"identifier":"error"}},"qualification":null},{"reference":{"builtinModule":"Data.Bits"},"usedName":{"valueName":{"identifier":"shift"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null},{"reference":{"builtinModule":"Data.Bits"},"usedName":{"valueName":{"identifier":"rotate"}},"qualification":null},{"reference":{"builtinModule":"Data.Bits"},"usedName":{"valueName":{"identifier":"bit"}},"qualification":null},{"reference":{"builtinModule":"Data.Bits"},"usedName":{"valueName":{"identifier":"setBit"}},"qualification":null},{"reference":{"builtinModule":"Data.Bits"},"usedName":{"valueName":{"identifier":"clearBit"}},"qualification":null},{"reference":{"builtinModule":"Data.Bits"},"usedName":{"valueName":{"identifier":"complementBit"}},"qualification":null},{"reference":{"builtinModule":"Data.Bits"},"usedName":{"valueName":{"identifier":"testBit"}},"qualification":null},{"reference":{"otherSlice":7170945053634004430},"usedName":{"valueName":{"identifier":"runNatural"}},"qualification":null},{"reference":{"builtinModule":"Data.Bits"},"usedName":{"valueName":{"identifier":"bitSizeMaybe"}},"qualification":null},{"reference":{"builtinModule":"Data.Maybe"},"usedName":{"constructorName":{"identifier":"Nothing"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"Data.Bits"},"usedName":{"valueName":{"identifier":"bitSize"}},"qualification":null},{"reference":{"builtinModule":"Data.Bits"},"usedName":{"valueName":{"identifier":"isSigned"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"False"},"constructorTypeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"builtinModule":"Data.Bits"},"usedName":{"valueName":{"identifier":"shiftL"}},"qualification":null},{"reference":{"builtinModule":"Data.Bits"},"usedName":{"valueName":{"identifier":"shiftR"}},"qualification":null},{"reference":{"builtinModule":"Data.Bits"},"usedName":{"valueName":{"identifier":"rotateL"}},"qualification":null},{"reference":{"builtinModule":"Data.Bits"},"usedName":{"valueName":{"identifier":"rotateR"}},"qualification":null},{"reference":{"builtinModule":"Data.Bits"},"usedName":{"valueName":{"identifier":"popCount"}},"qualification":null},{"reference":{"builtinModule":"Data.Bits"},"usedName":{"valueName":{"identifier":"popCountDefault"}},"qualification":null}],"fragment":["instance Bits Natural where\n        Natural n .&. Natural m = Natural (n .&. m)\n        \n        {-# INLINE (.&.) #-}\n        Natural n .|. Natural m = Natural (n .|. m)\n        \n        {-# INLINE (.|.) #-}\n        xor (Natural n) (Natural m) = Natural (xor n m)\n        \n        {-# INLINE xor #-}\n        complement _\n          = error \"Bits.complement: Natural complement undefined\"\n        \n        {-# INLINE complement #-}\n        shift (Natural n) = Natural . shift n\n        \n        {-# INLINE shift #-}\n        rotate (Natural n) = Natural . rotate n\n        \n        {-# INLINE rotate #-}\n        bit = Natural . bit\n        \n        {-# INLINE bit #-}\n        setBit (Natural n) = Natural . setBit n\n        \n        {-# INLINE setBit #-}\n        clearBit (Natural n) = Natural . clearBit n\n        \n        {-# INLINE clearBit #-}\n        complementBit (Natural n) = Natural . complementBit n\n        \n        {-# INLINE complementBit #-}\n        testBit = testBit . runNatural\n        \n        {-# INLINE testBit #-}\n        bitSizeMaybe _ = Nothing\n        \n        {-# INLINE bitSizeMaybe #-}\n        bitSize = error \"Natural: bitSize\"\n        \n        {-# INLINE bitSize #-}\n        isSigned _ = False\n        \n        {-# INLINE isSigned #-}\n        shiftL (Natural n) = Natural . shiftL n\n        \n        {-# INLINE shiftL #-}\n        shiftR (Natural n) = Natural . shiftR n\n        \n        {-# INLINE shiftR #-}\n        rotateL (Natural n) = Natural . rotateL n\n        \n        {-# INLINE rotateL #-}\n        rotateR (Natural n) = Natural . rotateR n\n        \n        {-# INLINE rotateR #-}\n        popCount = popCountDefault\n        \n        {-# INLINE popCount #-}"],"instances":[],"language":{"extensions":["DeriveDataTypeable","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":true}}