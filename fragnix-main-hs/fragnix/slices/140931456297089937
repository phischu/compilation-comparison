{"sliceID":140931456297089937,"uses":[{"reference":{"builtinModule":"Data.Data"},"usedName":{"typeName":{"identifier":"Constr"}},"qualification":null},{"reference":{"builtinModule":"Data.Data"},"usedName":{"valueName":{"identifier":"mkConstr"}},"qualification":null},{"reference":{"builtinModule":"Data.Data"},"usedName":{"constructorName":{"identifier":"Infix"},"constructorTypeName":{"identifier":"Fixity"}},"qualification":null},{"reference":{"builtinModule":"Data.Data"},"usedName":{"valueName":{"identifier":"mkDataType"}},"qualification":null},{"reference":{"builtinModule":"Data.Data"},"usedName":{"typeName":{"identifier":"DataType"}},"qualification":null},{"reference":{"builtinModule":"Data.Data"},"usedName":{"constructorName":{"identifier":"Prefix"},"constructorTypeName":{"identifier":"Fixity"}},"qualification":null}],"fragment":["emptyConstr, consConstr :: Constr","emptyConstr = mkConstr seqDataType \"empty\" [] Prefix","consConstr = mkConstr seqDataType \"<|\" [] Infix","seqDataType :: DataType","seqDataType\n  = mkDataType \"Data.Sequence.Seq\" [emptyConstr, consConstr]"],"instances":[],"language":{"extensions":["BangPatterns","DeriveDataTypeable","StandaloneDeriving","FlexibleInstances","ScopedTypeVariables","DeriveGeneric","TypeFamilies","PatternSynonyms","ViewPatterns","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}