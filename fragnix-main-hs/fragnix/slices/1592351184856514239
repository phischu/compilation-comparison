{"sliceID":1592351184856514239,"uses":[{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Monad"}},"qualification":null},{"reference":{"otherSlice":2824110155630133856},"usedName":{"typeName":{"identifier":"MonadError"}},"qualification":null},{"reference":{"otherSlice":6951942191127587656},"usedName":{"typeName":{"identifier":"ExceptT"}},"qualification":null},{"reference":{"otherSlice":2824110155630133856},"usedName":{"valueName":{"identifier":"throwError"}},"qualification":null},{"reference":{"otherSlice":4958504163393547175},"usedName":{"valueName":{"identifier":"throwE"}},"qualification":"ExceptT"},{"reference":{"otherSlice":2824110155630133856},"usedName":{"valueName":{"identifier":"catchError"}},"qualification":null},{"reference":{"otherSlice":9021098677065907571},"usedName":{"valueName":{"identifier":"catchE"}},"qualification":"ExceptT"}],"fragment":["instance Monad m => MonadError e (ExceptT e m) where\n        throwError = ExceptT.throwE\n        catchError = ExceptT.catchE"],"instances":[],"language":{"extensions":["MultiParamTypeClasses","FunctionalDependencies","FlexibleInstances","UndecidableInstances","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":true}}