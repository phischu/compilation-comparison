{"sliceID":8732818930460613760,"uses":[{"reference":{"otherSlice":2180372455056153309},"usedName":{"constructorName":{"identifier":"StateT"},"constructorTypeName":{"identifier":"StateT"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":2180372455056153309},"usedName":{"valueName":{"identifier":"runStateT"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Monad"}},"qualification":null},{"reference":{"otherSlice":1090343104806115234},"usedName":{"typeName":{"identifier":"Listen"}},"qualification":null},{"reference":{"otherSlice":2180372455056153309},"usedName":{"typeName":{"identifier":"StateT"}},"qualification":null}],"fragment":["liftListen ::\n             (Monad m) => Listen w m (a, s) -> Listen w (StateT s m) a","liftListen listen m\n  = StateT $\n      \\ s ->\n        do ((a, s'), w) <- listen (runStateT m s)\n           return ((a, w), s')"],"instances":[],"language":{"extensions":["MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}