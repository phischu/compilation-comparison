{"sliceID":1048321499783976883,"uses":[{"reference":{"otherSlice":478568884727328392},"usedName":{"valueName":{"identifier":"scan"}},"qualification":"A"},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"False"},"constructorTypeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"Data.Maybe"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"builtinModule":"Data.Maybe"},"usedName":{"constructorName":{"identifier":"Nothing"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":1795696646168850633},"usedName":{"valueName":{"identifier":"word8"}},"qualification":"A"},{"reference":{"otherSlice":4046473978622283587},"usedName":{"valueName":{"identifier":"elem"}},"qualification":"B"},{"reference":{"otherSlice":7978328717775530744},"usedName":{"valueName":{"identifier":"parse"}},"qualification":"Z"},{"reference":{"otherSlice":1767390428456495938},"usedName":{"valueName":{"identifier":"unescape"}},"qualification":null},{"reference":{"builtinModule":"Data.Either"},"usedName":{"constructorName":{"identifier":"Right"},"constructorTypeName":{"identifier":"Either"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"Data.Either"},"usedName":{"constructorName":{"identifier":"Left"},"constructorTypeName":{"identifier":"Either"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"fail"}},"qualification":null},{"reference":{"otherSlice":4396306804536225638},"usedName":{"valueName":{"identifier":"decodeUtf8'"}},"qualification":null},{"reference":{"builtinModule":"GHC.Show"},"usedName":{"valueName":{"identifier":"show"}},"qualification":null},{"reference":{"otherSlice":2385146024156182908},"usedName":{"typeName":{"identifier":"Parser"}},"qualification":null},{"reference":{"otherSlice":6742866475076404776},"usedName":{"typeName":{"identifier":"Text"}},"qualification":null}],"fragment":["jstring_ :: Parser Text","jstring_\n  = {-# SCC \"jstring_\" #-}\n      do s <- A.scan False $\n                \\ s c ->\n                  if s then Just False else\n                    if c == 34 then Nothing else Just (c == 92)\n         _ <- A.word8 34\n         s1 <- if 92 `B.elem` s then\n                 case Z.parse unescape s of\n                     Right r -> return r\n                     Left err -> fail err\n                 else return s\n         case decodeUtf8' s1 of\n             Right r -> return r\n             Left err -> fail $ show err"],"instances":[],"language":{"extensions":["BangPatterns","OverloadedStrings","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}