{"sliceID":8448991748376704759,"uses":[{"reference":{"otherSlice":3326759671840124085},"usedName":{"typeName":{"identifier":"PrimMonad"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"typeName":{"identifier":"Ord"}},"qualification":null},{"reference":{"otherSlice":4641953017354057066},"usedName":{"typeName":{"identifier":"MVector"}},"qualification":null},{"reference":{"otherSlice":3326759671840124085},"usedName":{"typeName":{"identifier":"PrimState"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"<"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"False"},"constructorTypeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"otherSlice":7517232424497046995},"usedName":{"valueName":{"identifier":"unsafeRead"}},"qualification":null},{"reference":{"otherSlice":1897748703035116512},"usedName":{"valueName":{"identifier":"unsafeSwap"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":">>"}},"qualification":null},{"reference":{"otherSlice":9098813734154914137},"usedName":{"valueName":{"identifier":"reverse"}},"qualification":null},{"reference":{"otherSlice":9056219066746679510},"usedName":{"valueName":{"identifier":"unsafeSlice"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"-"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"True"},"constructorTypeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"otherSlice":6402119587946108601},"usedName":{"valueName":{"identifier":"length"}},"qualification":null}],"fragment":["nextPermutation ::\n                  (PrimMonad m, Ord e, MVector v e) => v (PrimState m) e -> m Bool","nextPermutation v\n  | dim < 2 = return False\n  | otherwise =\n    do val <- unsafeRead v 0\n       (k, l) <- loop val (-1) 0 val 1\n       if k < 0 then return False else\n         unsafeSwap v k l >> reverse (unsafeSlice (k + 1) (dim - k - 1) v)\n           >> return True\n  where loop !kval !k !l !prev !i\n          | i == dim = return (k, l)\n          | otherwise =\n            do cur <- unsafeRead v i\n               let (kval', k') = if prev < cur then (prev, i - 1) else (kval, k)\n                   l' = if kval' < cur then i else l\n               loop kval' k' l' cur (i + 1)\n        dim = length v"],"instances":[],"language":{"extensions":["MultiParamTypeClasses","FlexibleContexts","BangPatterns","TypeFamilies","ScopedTypeVariables","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}