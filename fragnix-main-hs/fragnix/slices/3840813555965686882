{"sliceID":3840813555965686882,"uses":[{"reference":{"otherSlice":7772613785600637975},"usedName":{"valueName":{"identifier":"empty"}},"qualification":null},{"reference":{"builtinModule":"Data.Maybe"},"usedName":{"valueName":{"identifier":"maybe"}},"qualification":null},{"reference":{"otherSlice":2196463450091998458},"usedName":{"valueName":{"identifier":"cons'"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":9208044541903137161},"usedName":{"typeName":{"identifier":"Seq"}},"qualification":null}],"fragment":["unfoldl :: (b -> Maybe (b, a)) -> b -> Seq a","unfoldl f = unfoldl' empty\n  where unfoldl' !as b\n          = maybe as (\\ (b', a) -> unfoldl' (a `cons'` as) b') (f b)"],"instances":[],"language":{"extensions":["BangPatterns","DeriveDataTypeable","StandaloneDeriving","FlexibleInstances","ScopedTypeVariables","DeriveGeneric","TypeFamilies","PatternSynonyms","ViewPatterns","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}