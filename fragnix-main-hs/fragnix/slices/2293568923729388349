{"sliceID":2293568923729388349,"uses":[{"reference":{"otherSlice":1140128385335500304},"usedName":{"valueName":{"identifier":"c_sendfile"}},"qualification":null},{"reference":{"builtinModule":"Foreign.C.Error"},"usedName":{"valueName":{"identifier":"getErrno"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"builtinModule":"Foreign.C.Error"},"usedName":{"valueName":{"identifier":"eAGAIN"}},"qualification":null},{"reference":{"builtinModule":"GHC.Conc.IO"},"usedName":{"valueName":{"identifier":"threadWaitWrite"}},"qualification":null},{"reference":{"builtinModule":"Foreign.C.Error"},"usedName":{"valueName":{"identifier":"throwErrno"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"-"}},"qualification":null},{"reference":{"builtinModule":"GHC.Real"},"usedName":{"valueName":{"identifier":"fromIntegral"}},"qualification":null},{"reference":{"builtinModule":"Control.Monad"},"usedName":{"valueName":{"identifier":"when"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"/="}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"System.Posix.Types"},"usedName":{"typeName":{"identifier":"Fd"}},"qualification":null},{"reference":{"builtinModule":"GHC.Ptr"},"usedName":{"typeName":{"identifier":"Ptr"}},"qualification":null},{"reference":{"builtinModule":"System.Posix.Types"},"usedName":{"typeName":{"identifier":"COff"}},"qualification":null},{"reference":{"builtinModule":"Foreign.C.Types"},"usedName":{"typeName":{"identifier":"CSize"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null}],"fragment":["sendfileloop :: Fd -> Fd -> Ptr COff -> CSize -> IO () -> IO ()","sendfileloop dst src offp len hook\n  = do bytes <- c_sendfile dst src offp len\n       case bytes of\n           -1 -> do errno <- getErrno\n                    if errno == eAGAIN then\n                      do threadWaitWrite dst\n                         sendfileloop dst src offp len hook\n                      else throwErrno \"Network.SendFile.Linux.sendfileloop\"\n           0 -> return ()\n           _ -> do hook\n                   let left = len - fromIntegral bytes\n                   when (left /= 0) $ sendfileloop dst src offp left hook"],"instances":[],"language":{"extensions":["ForeignFunctionInterface","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}