{"sliceID":5841434079263693852,"uses":[{"reference":{"otherSlice":7158232503314572113},"usedName":{"constructorName":{"identifier":"MaybeT"},"constructorTypeName":{"identifier":"MaybeT"}},"qualification":null},{"reference":{"otherSlice":6951942191127587656},"usedName":{"constructorName":{"identifier":"ExceptT"},"constructorTypeName":{"identifier":"ExceptT"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"fmap"}},"qualification":null},{"reference":{"builtinModule":"Data.Maybe"},"usedName":{"valueName":{"identifier":"maybe"}},"qualification":null},{"reference":{"builtinModule":"Data.Either"},"usedName":{"constructorName":{"identifier":"Left"},"constructorTypeName":{"identifier":"Either"}},"qualification":null},{"reference":{"builtinModule":"Data.Either"},"usedName":{"constructorName":{"identifier":"Right"},"constructorTypeName":{"identifier":"Either"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Functor"}},"qualification":null},{"reference":{"otherSlice":7158232503314572113},"usedName":{"typeName":{"identifier":"MaybeT"}},"qualification":null},{"reference":{"otherSlice":6951942191127587656},"usedName":{"typeName":{"identifier":"ExceptT"}},"qualification":null}],"fragment":["maybeToExceptT :: (Functor m) => e -> MaybeT m a -> ExceptT e m a","maybeToExceptT e (MaybeT m)\n  = ExceptT $ fmap (maybe (Left e) Right) m"],"instances":[],"language":{"extensions":["MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}