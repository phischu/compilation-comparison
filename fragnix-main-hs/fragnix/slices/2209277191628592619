{"sliceID":2209277191628592619,"uses":[{"reference":{"otherSlice":9201373314145361548},"usedName":{"valueName":{"identifier":"boundedWrite"}},"qualification":null},{"reference":{"otherSlice":2748850932974285300},"usedName":{"valueName":{"identifier":"encodeCharUtf8"}},"qualification":null},{"reference":{"otherSlice":6919928885694922795},"usedName":{"valueName":{"identifier":"pokeN"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"Foreign.Storable"},"usedName":{"valueName":{"identifier":"pokeByteOff"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Char"}},"qualification":null},{"reference":{"otherSlice":7634829019090806275},"usedName":{"typeName":{"identifier":"Write"}},"qualification":null}],"fragment":["writeChar :: Char -> Write","writeChar c = boundedWrite 4 (encodeCharUtf8 f1 f2 f3 f4 c)\n  where f1 x1 = pokeN 1 $ \\ op -> do pokeByteOff op 0 x1\n        f2 x1 x2\n          = pokeN 2 $\n              \\ op ->\n                do pokeByteOff op 0 x1\n                   pokeByteOff op 1 x2\n        f3 x1 x2 x3\n          = pokeN 3 $\n              \\ op ->\n                do pokeByteOff op 0 x1\n                   pokeByteOff op 1 x2\n                   pokeByteOff op 2 x3\n        f4 x1 x2 x3 x4\n          = pokeN 4 $\n              \\ op ->\n                do pokeByteOff op 0 x1\n                   pokeByteOff op 1 x2\n                   pokeByteOff op 2 x3\n                   pokeByteOff op 3 x4"],"instances":[],"language":{"extensions":["MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}