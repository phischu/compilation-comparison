{"sliceID":5901584132879337842,"uses":[{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":5797786865840180786},"usedName":{"valueName":{"identifier":"uncons"}},"qualification":"B"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":3001491077528801909},"usedName":{"valueName":{"identifier":"breakByte"}},"qualification":"B"},{"reference":{"otherSlice":1967997472054530863},"usedName":{"valueName":{"identifier":"decodePathSegment"}},"qualification":null},{"reference":{"otherSlice":7202692338078551997},"usedName":{"valueName":{"identifier":"null"}},"qualification":"B"},{"reference":{"otherSlice":3748312495235440417},"usedName":{"valueName":{"identifier":"drop"}},"qualification":"B"},{"reference":{"otherSlice":4010822550476529195},"usedName":{"typeName":{"identifier":"ByteString"}},"qualification":"B"},{"reference":{"otherSlice":2241541392207318616},"usedName":{"typeName":{"identifier":"Text"}},"qualification":null}],"fragment":["decodePathSegments :: B.ByteString -> [Text]","decodePathSegments \"\" = []\ndecodePathSegments \"/\" = []\ndecodePathSegments a = go $ drop1Slash a\n  where drop1Slash bs\n          = case B.uncons bs of\n                Just (47, bs') -> bs'\n                _ -> bs\n        go bs\n          = let (x, y) = B.breakByte 47 bs in\n              decodePathSegment x : if B.null y then [] else go $ B.drop 1 y"],"instances":[],"language":{"extensions":["OverloadedStrings","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}