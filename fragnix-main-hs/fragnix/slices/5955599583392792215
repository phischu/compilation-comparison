{"sliceID":5955599583392792215,"uses":[{"reference":{"builtinModule":"Data.Foldable"},"usedName":{"typeName":{"identifier":"Foldable"}},"qualification":null},{"reference":{"otherSlice":9102435058156373170},"usedName":{"typeName":{"identifier":"IResult"}},"qualification":null},{"reference":{"builtinModule":"Data.Foldable"},"usedName":{"valueName":{"identifier":"foldMap"}},"qualification":null},{"reference":{"otherSlice":9102435058156373170},"usedName":{"constructorName":{"identifier":"IError"},"constructorTypeName":{"identifier":"IResult"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"mempty"}},"qualification":null},{"reference":{"otherSlice":9102435058156373170},"usedName":{"constructorName":{"identifier":"ISuccess"},"constructorTypeName":{"identifier":"IResult"}},"qualification":null},{"reference":{"builtinModule":"Data.Foldable"},"usedName":{"valueName":{"identifier":"foldr"}},"qualification":null}],"fragment":["instance Foldable IResult where\n        foldMap _ (IError _ _) = mempty\n        foldMap f (ISuccess y) = f y\n        \n        {-# INLINE foldMap #-}\n        foldr _ z (IError _ _) = z\n        foldr f z (ISuccess y) = f y z\n        \n        {-# INLINE foldr #-}"],"instances":[],"language":{"extensions":["DeriveDataTypeable","GeneralizedNewtypeDeriving","Rank2Types","TemplateHaskellQuotes","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards","TemplateHaskell"],"isInstance":true}}