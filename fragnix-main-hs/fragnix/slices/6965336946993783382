{"sliceID":6965336946993783382,"uses":[{"reference":{"otherSlice":7772613785600637975},"usedName":{"valueName":{"identifier":"empty"}},"qualification":null},{"reference":{"builtinModule":"Data.Maybe"},"usedName":{"valueName":{"identifier":"maybe"}},"qualification":null},{"reference":{"otherSlice":6162599865243518180},"usedName":{"valueName":{"identifier":"snoc'"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":9208044541903137161},"usedName":{"typeName":{"identifier":"Seq"}},"qualification":null}],"fragment":["unfoldr :: (b -> Maybe (a, b)) -> b -> Seq a","unfoldr f = unfoldr' empty\n  where unfoldr' !as b\n          = maybe as (\\ (a, b') -> unfoldr' (as `snoc'` a) b') (f b)"],"instances":[],"language":{"extensions":["BangPatterns","DeriveDataTypeable","StandaloneDeriving","FlexibleInstances","ScopedTypeVariables","DeriveGeneric","TypeFamilies","PatternSynonyms","ViewPatterns","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}