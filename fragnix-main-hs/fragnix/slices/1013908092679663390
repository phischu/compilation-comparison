{"sliceID":1013908092679663390,"uses":[{"reference":{"otherSlice":2186011155846212713},"usedName":{"constructorName":{"identifier":"Stream"},"constructorTypeName":{"identifier":"Stream"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO.Unsafe"},"usedName":{"valueName":{"identifier":"unsafeDupablePerformIO"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":9185008376510166860},"usedName":{"valueName":{"identifier":"upperBound"}},"qualification":null},{"reference":{"otherSlice":4976473949306289482},"usedName":{"valueName":{"identifier":"mallocByteString"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":">>="}},"qualification":null},{"reference":{"otherSlice":899429663293461015},"usedName":{"constructorName":{"identifier":"Done"},"constructorTypeName":{"identifier":"Step"}},"qualification":null},{"reference":{"otherSlice":899429663293461015},"usedName":{"constructorName":{"identifier":"Skip"},"constructorTypeName":{"identifier":"Step"}},"qualification":null},{"reference":{"otherSlice":899429663293461015},"usedName":{"constructorName":{"identifier":"Yield"},"constructorTypeName":{"identifier":"Step"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"builtinModule":"Foreign.ForeignPtr"},"usedName":{"valueName":{"identifier":"withForeignPtr"}},"qualification":null},{"reference":{"builtinModule":"Foreign.Storable"},"usedName":{"valueName":{"identifier":"pokeByteOff"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$!"}},"qualification":null},{"reference":{"otherSlice":4010822550476529195},"usedName":{"constructorName":{"identifier":"PS"},"constructorTypeName":{"identifier":"ByteString"}},"qualification":null},{"reference":{"builtinModule":"GHC.ForeignPtr"},"usedName":{"typeName":{"identifier":"ForeignPtr"}},"qualification":null},{"reference":{"builtinModule":"GHC.Word"},"usedName":{"typeName":{"identifier":"Word8"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null},{"reference":{"otherSlice":7962159238439154152},"usedName":{"valueName":{"identifier":"memcpy"}},"qualification":null},{"reference":{"builtinModule":"GHC.Real"},"usedName":{"valueName":{"identifier":"fromIntegral"}},"qualification":null},{"reference":{"otherSlice":2186011155846212713},"usedName":{"typeName":{"identifier":"Stream"}},"qualification":null},{"reference":{"otherSlice":4010822550476529195},"usedName":{"typeName":{"identifier":"ByteString"}},"qualification":null}],"fragment":["unstream :: Stream Word8 -> ByteString","unstream (Stream next s0 len)\n  = unsafeDupablePerformIO $\n      do let mlen = upperBound 4 len\n         mallocByteString mlen >>= loop mlen 0 s0\n  where loop !n !off !s fp\n          = case next s of\n                Done -> trimUp fp n off\n                Skip s' -> loop n off s' fp\n                Yield x s' | off == n -> realloc fp n off s' x\n                           | otherwise ->\n                             do withForeignPtr fp $ \\ p -> pokeByteOff p off x\n                                loop n (off + 1) s' fp\n        \n        {-# NOINLINE realloc #-}\n        realloc fp n off s x\n          = do let n' = n + n\n               fp' <- copy0 fp n n'\n               withForeignPtr fp' $ \\ p -> pokeByteOff p off x\n               loop n' (off + 1) s fp'\n        \n        {-# NOINLINE trimUp #-}\n        trimUp fp _ off = return $! PS fp 0 off\n        \n        copy0 :: ForeignPtr Word8 -> Int -> Int -> IO (ForeignPtr Word8)\n        copy0 !src !srcLen !destLen\n          = do dest <- mallocByteString destLen\n               withForeignPtr src $\n                 \\ src' ->\n                   withForeignPtr dest $\n                     \\ dest' -> memcpy dest' src' (fromIntegral srcLen)\n               return dest"],"instances":[],"language":{"extensions":["BangPatterns","Rank2Types","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}