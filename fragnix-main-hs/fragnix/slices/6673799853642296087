{"sliceID":6673799853642296087,"uses":[{"reference":{"otherSlice":8920435067653639686},"usedName":{"valueName":{"identifier":"takeWhile"}},"qualification":"B8"},{"reference":{"builtinModule":"Data.Functor"},"usedName":{"valueName":{"operator":"<$>"}},"qualification":null},{"reference":{"otherSlice":6319358220054646503},"usedName":{"valueName":{"identifier":"get"}},"qualification":null},{"reference":{"otherSlice":929813521966159103},"usedName":{"valueName":{"identifier":"inputSpansChunks"}},"qualification":null},{"reference":{"otherSlice":7235567377809295464},"usedName":{"valueName":{"identifier":"length"}},"qualification":"B"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":2969014793257273644},"usedName":{"valueName":{"identifier":"concatReverse"}},"qualification":null},{"reference":{"builtinModule":"GHC.Word"},"usedName":{"typeName":{"identifier":"Word8"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"otherSlice":4010822550476529195},"usedName":{"typeName":{"identifier":"ByteString"}},"qualification":null},{"reference":{"otherSlice":2921449568316915535},"usedName":{"typeName":{"identifier":"Parser"}},"qualification":null}],"fragment":["takeWhileAcc ::\n             (Word8 -> Bool) -> [ByteString] -> Parser ByteString","takeWhileAcc p = go\n  where go acc\n          = do s <- B8.takeWhile p <$> get\n               continue <- inputSpansChunks (B.length s)\n               if continue then go (s : acc) else return $ concatReverse (s : acc)"],"instances":[],"language":{"extensions":["BangPatterns","GADTs","OverloadedStrings","RankNTypes","RecordWildCards","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}