{"sliceID":2198610003956534500,"uses":[{"reference":{"otherSlice":7530605435439670142},"usedName":{"valueName":{"identifier":"zipWith3M"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Monad"}},"qualification":null},{"reference":{"otherSlice":9209112058599157037},"usedName":{"typeName":{"identifier":"Stream"}},"qualification":null}],"fragment":["zipWith3 ::\n           Monad m =>\n           (a -> b -> c -> d) ->\n             Stream m a -> Stream m b -> Stream m c -> Stream m d","zipWith3 f = zipWith3M (\\ a b c -> return (f a b c))"],"instances":[],"language":{"extensions":["DeriveDataTypeable","ExistentialQuantification","Rank2Types","BangPatterns","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}