{"sliceID":3496720045863107214,"uses":[{"reference":{"builtinModule":"Control.Monad.IO.Class"},"usedName":{"valueName":{"identifier":"liftIO"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":7140860429684256485},"usedName":{"valueName":{"identifier":"isStdStream"}},"qualification":null},{"reference":{"otherSlice":8736707139686016472},"usedName":{"valueName":{"identifier":"osStdStream"}},"qualification":null},{"reference":{"otherSlice":3786645991386293886},"usedName":{"valueName":{"identifier":"createProcess_"}},"qualification":"PI"},{"reference":{"otherSlice":8672789154543806589},"usedName":{"valueName":{"identifier":"std_in"}},"qualification":null},{"reference":{"builtinModule":"Data.Maybe"},"usedName":{"valueName":{"identifier":"fromMaybe"}},"qualification":null},{"reference":{"otherSlice":8672789154543806589},"usedName":{"valueName":{"identifier":"std_out"}},"qualification":null},{"reference":{"otherSlice":8672789154543806589},"usedName":{"valueName":{"identifier":"std_err"}},"qualification":null},{"reference":{"builtinModule":"GHC.Conc.Sync"},"usedName":{"valueName":{"identifier":"atomically"}},"qualification":null},{"reference":{"otherSlice":2247901393646104436},"usedName":{"valueName":{"identifier":"newEmptyTMVar"}},"qualification":null},{"reference":{"builtinModule":"GHC.Conc.Sync"},"usedName":{"valueName":{"identifier":"forkIOWithUnmask"}},"qualification":null},{"reference":{"builtinModule":"Control.Exception.Base"},"usedName":{"valueName":{"identifier":"try"}},"qualification":null},{"reference":{"otherSlice":7835758549541460382},"usedName":{"valueName":{"identifier":"waitForProcess"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":">>="}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null},{"reference":{"otherSlice":4064130125690704443},"usedName":{"valueName":{"identifier":"putTMVar"}},"qualification":null},{"reference":{"builtinModule":"Data.Either"},"usedName":{"valueName":{"identifier":"either"}},"qualification":null},{"reference":{"builtinModule":"GHC.Exception"},"usedName":{"valueName":{"identifier":"throw"}},"qualification":null},{"reference":{"builtinModule":"GHC.Exception"},"usedName":{"typeName":{"identifier":"SomeException"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"id"}},"qualification":null},{"reference":{"builtinModule":"Control.Exception.Base"},"usedName":{"valueName":{"identifier":"finally"}},"qualification":null},{"reference":{"builtinModule":"Data.Maybe"},"usedName":{"valueName":{"identifier":"maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO.Handle"},"usedName":{"valueName":{"identifier":"hClose"}},"qualification":null},{"reference":{"builtinModule":"Data.Functor"},"usedName":{"valueName":{"operator":"<$>"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"<*>"}},"qualification":null},{"reference":{"otherSlice":7297189587595958643},"usedName":{"constructorName":{"identifier":"StreamingProcessHandle"},"constructorTypeName":{"identifier":"StreamingProcessHandle"}},"qualification":null},{"reference":{"builtinModule":"Control.Monad.IO.Class"},"usedName":{"typeName":{"identifier":"MonadIO"}},"qualification":null},{"reference":{"otherSlice":7140860429684256485},"usedName":{"typeName":{"identifier":"InputSource"}},"qualification":null},{"reference":{"otherSlice":8736707139686016472},"usedName":{"typeName":{"identifier":"OutputSink"}},"qualification":null},{"reference":{"otherSlice":8672789154543806589},"usedName":{"typeName":{"identifier":"CreateProcess"}},"qualification":null},{"reference":{"otherSlice":7297189587595958643},"usedName":{"typeName":{"identifier":"StreamingProcessHandle"}},"qualification":null}],"fragment":["streamingProcess ::\n                   (MonadIO m, InputSource stdin, OutputSink stdout,\n                    OutputSink stderr) =>\n                   CreateProcess -> m (stdin, stdout, stderr, StreamingProcessHandle)","streamingProcess cp\n  = liftIO $\n      do let (getStdin, stdinStream) = isStdStream\n             (getStdout, stdoutStream) = osStdStream\n             (getStderr, stderrStream) = osStdStream\n         (stdinH, stdoutH, stderrH, ph) <- PI.createProcess_\n                                             \"streamingProcess\"\n                                             cp{std_in = fromMaybe (std_in cp) stdinStream,\n                                                std_out = fromMaybe (std_out cp) stdoutStream,\n                                                std_err = fromMaybe (std_err cp) stderrStream}\n         ec <- atomically newEmptyTMVar\n         _ <- forkIOWithUnmask $\n                \\ _unmask ->\n                  try (waitForProcess ph) >>=\n                    atomically . putTMVar ec . either (throw :: SomeException -> a) id\n         let close\n               = mclose stdinH `finally` mclose stdoutH `finally` mclose stderrH\n               where mclose = maybe (return ()) hClose\n         (,,,) <$> getStdin stdinH <*> getStdout stdoutH <*>\n           getStderr stderrH\n           <*> return (StreamingProcessHandle ph ec close)"],"instances":[],"language":{"extensions":["DeriveDataTypeable","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}