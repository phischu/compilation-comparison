{"sliceID":7728987221100114867,"uses":[{"reference":{"otherSlice":8124621916570831835},"usedName":{"constructorName":{"identifier":"DirStream"},"constructorTypeName":{"identifier":"DirStream"}},"qualification":null},{"reference":{"builtinModule":"Foreign.Marshal.Alloc"},"usedName":{"valueName":{"identifier":"alloca"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"Foreign.C.Error"},"usedName":{"valueName":{"identifier":"resetErrno"}},"qualification":null},{"reference":{"otherSlice":8414658193587100772},"usedName":{"valueName":{"identifier":"c_readdir"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"builtinModule":"Foreign.Storable"},"usedName":{"valueName":{"identifier":"peek"}},"qualification":null},{"reference":{"builtinModule":"GHC.Ptr"},"usedName":{"valueName":{"identifier":"nullPtr"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"otherSlice":2109377013281436257},"usedName":{"valueName":{"identifier":"empty"}},"qualification":"BC"},{"reference":{"otherSlice":4047834211272093904},"usedName":{"valueName":{"identifier":"d_name"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":">>="}},"qualification":null},{"reference":{"otherSlice":5572555168081624613},"usedName":{"valueName":{"identifier":"peekFilePath"}},"qualification":null},{"reference":{"otherSlice":2795421344924638765},"usedName":{"valueName":{"identifier":"c_freeDirEnt"}},"qualification":null},{"reference":{"builtinModule":"Foreign.C.Error"},"usedName":{"valueName":{"identifier":"getErrno"}},"qualification":null},{"reference":{"builtinModule":"Foreign.C.Error"},"usedName":{"valueName":{"identifier":"eINTR"}},"qualification":null},{"reference":{"builtinModule":"Foreign.C.Error"},"usedName":{"constructorName":{"identifier":"Errno"},"constructorTypeName":{"identifier":"Errno"}},"qualification":null},{"reference":{"builtinModule":"Foreign.C.Error"},"usedName":{"valueName":{"identifier":"throwErrno"}},"qualification":null},{"reference":{"otherSlice":8124621916570831835},"usedName":{"typeName":{"identifier":"DirStream"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null},{"reference":{"otherSlice":6448989911410740041},"usedName":{"typeName":{"identifier":"RawFilePath"}},"qualification":null}],"fragment":["readDirStream :: DirStream -> IO RawFilePath","readDirStream (DirStream dirp)\n  = alloca $ \\ ptr_dEnt -> loop ptr_dEnt\n  where loop ptr_dEnt\n          = do resetErrno\n               r <- c_readdir dirp ptr_dEnt\n               if (r == 0) then\n                 do dEnt <- peek ptr_dEnt\n                    if (dEnt == nullPtr) then return BC.empty else\n                      do entry <- (d_name dEnt >>= peekFilePath)\n                         c_freeDirEnt dEnt\n                         return entry\n                 else\n                 do errno <- getErrno\n                    if (errno == eINTR) then loop ptr_dEnt else\n                      do let (Errno eo) = errno\n                         if (eo == 0) then return BC.empty else throwErrno \"readDirStream\""],"instances":[],"language":{"extensions":["NondecreasingIndentation","MultiParamTypeClasses","ExplicitForAll","PatternGuards"],"isInstance":false}}