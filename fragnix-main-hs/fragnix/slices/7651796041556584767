{"sliceID":7651796041556584767,"uses":[{"reference":{"otherSlice":502757297177600472},"usedName":{"valueName":{"identifier":"zipWith"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Monad"}},"qualification":null},{"reference":{"otherSlice":9209112058599157037},"usedName":{"typeName":{"identifier":"Stream"}},"qualification":null}],"fragment":["zip :: Monad m => Stream m a -> Stream m b -> Stream m (a, b)","zip = zipWith (,)"],"instances":[],"language":{"extensions":["DeriveDataTypeable","ExistentialQuantification","Rank2Types","BangPatterns","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}