{"sliceID":4272420466188907908,"uses":[{"reference":{"otherSlice":6576482533724013730},"usedName":{"valueName":{"identifier":"packSocketTypeOrThrow"}},"qualification":null},{"reference":{"otherSlice":3577467866906529459},"usedName":{"valueName":{"identifier":"throwSocketErrorIfMinus1Retry"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":313682671242160586},"usedName":{"valueName":{"identifier":"c_socket"}},"qualification":null},{"reference":{"otherSlice":1094036884309048518},"usedName":{"valueName":{"identifier":"packFamily"}},"qualification":null},{"reference":{"otherSlice":5361557413058721245},"usedName":{"valueName":{"identifier":"setNonBlockIfNeeded"}},"qualification":null},{"reference":{"builtinModule":"GHC.MVar"},"usedName":{"valueName":{"identifier":"newMVar"}},"qualification":null},{"reference":{"otherSlice":7451797085728876607},"usedName":{"constructorName":{"identifier":"NotConnected"},"constructorTypeName":{"identifier":"SocketStatus"}},"qualification":null},{"reference":{"otherSlice":4674243622065387603},"usedName":{"valueName":{"identifier":"withSocketsDo"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"otherSlice":1546470151414195006},"usedName":{"constructorName":{"identifier":"MkSocket"},"constructorTypeName":{"identifier":"Socket"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"when"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"otherSlice":6366556555504853542},"usedName":{"constructorName":{"identifier":"AF_INET6"},"constructorTypeName":{"identifier":"Family"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"&&"}},"qualification":null},{"reference":{"otherSlice":5966676263279217999},"usedName":{"constructorName":{"identifier":"Stream"},"constructorTypeName":{"identifier":"SocketType"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"||"}},"qualification":null},{"reference":{"otherSlice":5966676263279217999},"usedName":{"constructorName":{"identifier":"Datagram"},"constructorTypeName":{"identifier":"SocketType"}},"qualification":null},{"reference":{"otherSlice":7642706057452917817},"usedName":{"valueName":{"identifier":"setSocketOption"}},"qualification":null},{"reference":{"otherSlice":5653121259726360349},"usedName":{"constructorName":{"identifier":"IPv6Only"},"constructorTypeName":{"identifier":"SocketOption"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO"},"usedName":{"valueName":{"identifier":"onException"}},"qualification":null},{"reference":{"otherSlice":1691131710779787624},"usedName":{"valueName":{"identifier":"close"}},"qualification":null},{"reference":{"otherSlice":6366556555504853542},"usedName":{"typeName":{"identifier":"Family"}},"qualification":null},{"reference":{"otherSlice":5966676263279217999},"usedName":{"typeName":{"identifier":"SocketType"}},"qualification":null},{"reference":{"otherSlice":1789404086918125319},"usedName":{"typeName":{"identifier":"ProtocolNumber"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null},{"reference":{"otherSlice":1546470151414195006},"usedName":{"typeName":{"identifier":"Socket"}},"qualification":null}],"fragment":["socket :: Family -> SocketType -> ProtocolNumber -> IO Socket","socket family stype protocol\n  = do c_stype <- packSocketTypeOrThrow \"socket\" stype\n       fd <- throwSocketErrorIfMinus1Retry \"Network.Socket.socket\" $\n               c_socket (packFamily family) c_stype protocol\n       setNonBlockIfNeeded fd\n       socket_status <- newMVar NotConnected\n       withSocketsDo $ return ()\n       let sock = MkSocket fd family stype protocol socket_status\n       when (family == AF_INET6 && (stype == Stream || stype == Datagram))\n         $ setSocketOption sock IPv6Only 0 `onException` close sock\n       return sock"],"instances":[],"language":{"extensions":["DeriveDataTypeable","ForeignFunctionInterface","TypeSynonymInstances","ScopedTypeVariables","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}