{"sliceID":5382744851172164193,"uses":[{"reference":{"builtinModule":"GHC.List"},"usedName":{"valueName":{"identifier":"lookup"}},"qualification":null},{"reference":{"otherSlice":1770321871109794098},"usedName":{"valueName":{"identifier":"hContentType"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":9025559142516147699},"usedName":{"valueName":{"identifier":"requestHeaders"}},"qualification":null},{"reference":{"otherSlice":6566497558386118446},"usedName":{"valueName":{"identifier":"parseContentType"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"otherSlice":5551878124765860506},"usedName":{"constructorName":{"identifier":"UrlEncoded"},"constructorTypeName":{"identifier":"RequestBodyType"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":5551878124765860506},"usedName":{"constructorName":{"identifier":"Multipart"},"constructorTypeName":{"identifier":"RequestBodyType"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Nothing"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":9025559142516147699},"usedName":{"typeName":{"identifier":"Request"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":5551878124765860506},"usedName":{"typeName":{"identifier":"RequestBodyType"}},"qualification":null}],"fragment":["getRequestBodyType :: Request -> Maybe RequestBodyType","getRequestBodyType req\n  = do ctype' <- lookup hContentType $ requestHeaders req\n       let (ctype, attrs) = parseContentType ctype'\n       case ctype of\n           \"application/x-www-form-urlencoded\" -> return UrlEncoded\n           \"multipart/form-data\" | Just bound <- lookup \"boundary\" attrs ->\n                                   return $ Multipart bound\n           _ -> Nothing"],"instances":[],"language":{"extensions":["OverloadedStrings","ExistentialQuantification","PatternGuards","TypeFamilies","RankNTypes","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll"],"isInstance":false}}