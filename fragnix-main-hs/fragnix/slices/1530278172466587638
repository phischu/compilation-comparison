{"sliceID":1530278172466587638,"uses":[{"reference":{"otherSlice":3289594752393879501},"usedName":{"valueName":{"identifier":"unstream"}},"qualification":null},{"reference":{"otherSlice":6249333715840763035},"usedName":{"valueName":{"identifier":"zipWith6"}},"qualification":"Stream"},{"reference":{"otherSlice":2700673456966481432},"usedName":{"valueName":{"identifier":"stream"}},"qualification":null},{"reference":{"otherSlice":8934491602005769172},"usedName":{"typeName":{"identifier":"Vector"}},"qualification":null}],"fragment":["zipWith6 ::\n           (Vector v a, Vector v b, Vector v c, Vector v d, Vector v e,\n            Vector v f, Vector v g) =>\n           (a -> b -> c -> d -> e -> f -> g) ->\n             v a -> v b -> v c -> v d -> v e -> v f -> v g","zipWith6 f as bs cs ds es fs\n  = unstream\n      (Stream.zipWith6 f (stream as) (stream bs) (stream cs) (stream ds)\n         (stream es)\n         (stream fs))"],"instances":[],"language":{"extensions":["DeriveDataTypeable","Rank2Types","MultiParamTypeClasses","FlexibleContexts","TypeFamilies","ScopedTypeVariables","BangPatterns","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}