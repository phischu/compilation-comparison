{"sliceID":6056057948688620316,"uses":[{"reference":{"otherSlice":8413007277180029656},"usedName":{"constructorName":{"identifier":"Nil"},"constructorTypeName":{"identifier":"IntPSQ"}},"qualification":null},{"reference":{"otherSlice":8413007277180029656},"usedName":{"constructorName":{"identifier":"Tip"},"constructorTypeName":{"identifier":"IntPSQ"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"<"}},"qualification":null},{"reference":{"otherSlice":8413007277180029656},"usedName":{"constructorName":{"identifier":"Bin"},"constructorTypeName":{"identifier":"IntPSQ"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"typeName":{"identifier":"Ord"}},"qualification":null},{"reference":{"otherSlice":3333873766829315113},"usedName":{"typeName":{"identifier":"Mask"}},"qualification":null},{"reference":{"otherSlice":8413007277180029656},"usedName":{"typeName":{"identifier":"IntPSQ"}},"qualification":null}],"fragment":["merge :: Ord p => Mask -> IntPSQ p v -> IntPSQ p v -> IntPSQ p v","merge m l r\n  = case l of\n        Nil -> r\n        Tip lk lp lx -> case r of\n                            Nil -> l\n                            Tip rk rp rx | (lp, lk) < (rp, rk) -> Bin lk lp lx m Nil r\n                                         | otherwise -> Bin rk rp rx m l Nil\n                            Bin rk rp rx rm rl rr | (lp, lk) < (rp, rk) -> Bin lk lp lx m Nil r\n                                                  | otherwise -> Bin rk rp rx m l (merge rm rl rr)\n        Bin lk lp lx lm ll lr -> case r of\n                                     Nil -> l\n                                     Tip rk rp rx | (lp, lk) < (rp, rk) ->\n                                                    Bin lk lp lx m (merge lm ll lr) r\n                                                  | otherwise -> Bin rk rp rx m l Nil\n                                     Bin rk rp rx rm rl rr | (lp, lk) < (rp, rk) ->\n                                                             Bin lk lp lx m (merge lm ll lr) r\n                                                           | otherwise ->\n                                                             Bin rk rp rx m l (merge rm rl rr)"],"instances":[],"language":{"extensions":["BangPatterns","DeriveFoldable","DeriveFunctor","DeriveTraversable","UnboxedTuples","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}