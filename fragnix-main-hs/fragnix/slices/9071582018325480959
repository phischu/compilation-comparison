{"sliceID":9071582018325480959,"uses":[{"reference":{"otherSlice":1603778416143527141},"usedName":{"valueName":{"identifier":"gets"}},"qualification":null},{"reference":{"otherSlice":9062756934444404541},"usedName":{"valueName":{"identifier":"input"}},"qualification":null},{"reference":{"otherSlice":6258463563638113276},"usedName":{"valueName":{"identifier":"length"}},"qualification":"B"},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":">="}},"qualification":null},{"reference":{"otherSlice":2689962365626447382},"usedName":{"valueName":{"identifier":"put"}},"qualification":null},{"reference":{"otherSlice":9062756934444404541},"usedName":{"constructorName":{"identifier":"S"},"constructorTypeName":{"identifier":"S"}},"qualification":null},{"reference":{"otherSlice":6479985746417015458},"usedName":{"valueName":{"identifier":"unsafeDrop"}},"qualification":"B"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":">>"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"otherSlice":3560339300675439450},"usedName":{"valueName":{"identifier":"unsafeTake"}},"qualification":"B"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"fail"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null},{"reference":{"otherSlice":9181835938134167535},"usedName":{"typeName":{"identifier":"Parser"}},"qualification":null},{"reference":{"otherSlice":8642306666063513779},"usedName":{"typeName":{"identifier":"ByteString"}},"qualification":null}],"fragment":["take :: Int -> Parser ByteString","take !n\n  = do s <- gets input\n       if B.length s >= n then\n         put (S (B.unsafeDrop n s)) >> return (B.unsafeTake n s) else\n         fail \"insufficient input\""],"instances":[],"language":{"extensions":["BangPatterns","MagicHash","UnboxedTuples","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}