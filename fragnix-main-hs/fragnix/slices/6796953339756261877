{"sliceID":6796953339756261877,"uses":[{"reference":{"builtinModule":"GHC.IO"},"usedName":{"typeName":{"identifier":"FilePath"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null},{"reference":{"otherSlice":4010822550476529195},"usedName":{"typeName":{"identifier":"ByteString"}},"qualification":null},{"reference":{"builtinModule":"Control.Exception.Base"},"usedName":{"valueName":{"identifier":"bracket"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO.Handle.FD"},"usedName":{"valueName":{"identifier":"openBinaryFile"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO.IOMode"},"usedName":{"constructorName":{"identifier":"ReadMode"},"constructorTypeName":{"identifier":"IOMode"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO.Handle"},"usedName":{"valueName":{"identifier":"hClose"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO.Handle"},"usedName":{"valueName":{"identifier":"hFileSize"}},"qualification":null},{"reference":{"builtinModule":"GHC.Real"},"usedName":{"valueName":{"identifier":"fromIntegral"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"identifier":"max"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"otherSlice":475877964841097706},"usedName":{"valueName":{"identifier":"hGetContentsSizeHint"}},"qualification":null}],"fragment":["readFile :: FilePath -> IO ByteString","readFile f\n  = bracket (openBinaryFile f ReadMode) hClose $\n      \\ h ->\n        do filesz <- hFileSize h\n           let readsz = (fromIntegral filesz `max` 0) + 1\n           hGetContentsSizeHint h readsz (readsz `max` 255)"],"instances":[],"language":{"extensions":["MagicHash","UnboxedTuples","NamedFieldPuns","BangPatterns","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}