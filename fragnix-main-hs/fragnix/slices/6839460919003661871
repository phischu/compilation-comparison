{"sliceID":6839460919003661871,"uses":[{"reference":{"builtinModule":"GHC.List"},"usedName":{"valueName":{"identifier":"lookup"}},"qualification":null},{"reference":{"builtinModule":"Data.Functor"},"usedName":{"valueName":{"operator":"<$>"}},"qualification":null},{"reference":{"builtinModule":"System.Environment"},"usedName":{"valueName":{"identifier":"getEnvironment"}},"qualification":null},{"reference":{"builtinModule":"Data.Maybe"},"usedName":{"valueName":{"identifier":"maybe"}},"qualification":null},{"reference":{"otherSlice":8048835883300392726},"usedName":{"valueName":{"identifier":"run"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"String"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null},{"reference":{"builtinModule":"Text.Read"},"usedName":{"valueName":{"identifier":"reads"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"fail"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"++"}},"qualification":null},{"reference":{"otherSlice":2598732416915737838},"usedName":{"typeName":{"identifier":"Port"}},"qualification":null},{"reference":{"otherSlice":2503338423706628106},"usedName":{"typeName":{"identifier":"Application"}},"qualification":null}],"fragment":["runEnv :: Port -> Application -> IO ()","runEnv p app\n  = do mp <- lookup \"PORT\" <$> getEnvironment\n       maybe (run p app) runReadPort mp\n  where runReadPort :: String -> IO ()\n        runReadPort sp\n          = case reads sp of\n                ((p', _) : _) -> run p' app\n                _ -> fail $ \"Invalid value in $PORT: \" ++ sp"],"instances":[],"language":{"extensions":["BangPatterns","OverloadedStrings","PackageImports","PatternGuards","ScopedTypeVariables","TupleSections","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll"],"isInstance":false}}