{"sliceID":1212538307867996875,"uses":[{"reference":{"otherSlice":7489777852631374026},"usedName":{"constructorName":{"identifier":"TPriorityQueue"},"constructorTypeName":{"identifier":"TPriorityQueue"}},"qualification":null},{"reference":{"builtinModule":"GHC.Conc.Sync"},"usedName":{"valueName":{"identifier":"readTVar"}},"qualification":null},{"reference":{"otherSlice":5846418415255764928},"usedName":{"valueName":{"identifier":"dequeue"}},"qualification":"Q"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Nothing"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Conc.Sync"},"usedName":{"valueName":{"identifier":"retry"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Conc.Sync"},"usedName":{"valueName":{"identifier":"writeTVar"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"otherSlice":7489777852631374026},"usedName":{"typeName":{"identifier":"TPriorityQueue"}},"qualification":null},{"reference":{"builtinModule":"GHC.Conc.Sync"},"usedName":{"typeName":{"identifier":"STM"}},"qualification":null},{"reference":{"otherSlice":1147202051748983015},"usedName":{"typeName":{"identifier":"Key"}},"qualification":null},{"reference":{"otherSlice":269795606805388831},"usedName":{"typeName":{"identifier":"Precedence"}},"qualification":null}],"fragment":["dequeue :: TPriorityQueue a -> STM (Key, Precedence, a)","dequeue (TPriorityQueue th)\n  = do h <- readTVar th\n       case Q.dequeue h of\n           Nothing -> retry\n           Just (k, p, v, h') -> do writeTVar th h'\n                                    return (k, p, v)"],"instances":[],"language":{"extensions":["MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}