{"sliceID":4341430300563309855,"uses":[{"reference":{"otherSlice":7781639745957293926},"usedName":{"typeName":{"identifier":"Binary"}},"qualification":null},{"reference":{"otherSlice":8468946667989408909},"usedName":{"typeName":{"identifier":"Seq"}},"qualification":"Seq"},{"reference":{"otherSlice":7781639745957293926},"usedName":{"valueName":{"identifier":"put"}},"qualification":null},{"reference":{"otherSlice":6742606937213304270},"usedName":{"valueName":{"identifier":"length"}},"qualification":"Seq"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":">>"}},"qualification":null},{"reference":{"builtinModule":"Data.Foldable"},"usedName":{"valueName":{"identifier":"mapM_"}},"qualification":"Fold"},{"reference":{"otherSlice":7781639745957293926},"usedName":{"valueName":{"identifier":"get"}},"qualification":null},{"reference":{"otherSlice":2395809604474213102},"usedName":{"typeName":{"identifier":"Get"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null},{"reference":{"otherSlice":1530965345057959329},"usedName":{"valueName":{"identifier":"empty"}},"qualification":"Seq"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"Prelude"},"usedName":{"valueName":{"operator":"$!"}},"qualification":null},{"reference":{"builtinModule":"GHC.Prim"},"usedName":{"valueName":{"identifier":"seq"}},"qualification":null},{"reference":{"otherSlice":3678145073151579799},"usedName":{"valueName":{"operator":"|>"}},"qualification":"Seq"},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"-"}},"qualification":null}],"fragment":["instance (Binary e) => Binary (Seq.Seq e) where\n        put s = put (Seq.length s) >> Fold.mapM_ put s\n        get\n          = do n <- get :: Get Int\n               rep Seq.empty n get\n          where rep xs 0 _ = return $! xs\n                rep xs n g\n                  = xs `seq`\n                      n `seq`\n                        do x <- g\n                           rep (xs Seq.|> x) (n - 1) g"],"instances":[],"language":{"extensions":["FlexibleContexts","DefaultSignatures","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":true}}