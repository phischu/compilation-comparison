{"sliceID":4164730125724827689,"uses":[{"reference":{"otherSlice":2739854332109383794},"usedName":{"valueName":{"identifier":"wrapTillBound"}},"qualification":null},{"reference":{"otherSlice":675696118971413715},"usedName":{"valueName":{"identifier":"null"}},"qualification":"S"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":">>="}},"qualification":null},{"reference":{"otherSlice":8642306666063513779},"usedName":{"typeName":{"identifier":"ByteString"}},"qualification":"S"},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null},{"reference":{"otherSlice":7175686423223527142},"usedName":{"typeName":{"identifier":"Source"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Bool"}},"qualification":null}],"fragment":["sinkTillBound ::\n              S.ByteString ->\n                (x -> S.ByteString -> IO x) -> x -> Source -> IO (Bool, x)","sinkTillBound bound iter seed0 src\n  = do (next, final) <- wrapTillBound bound src\n       let loop seed\n             = do bs <- next\n                  if S.null bs then return seed else iter seed bs >>= loop\n       seed <- loop seed0\n       b <- final\n       return (b, seed)"],"instances":[],"language":{"extensions":["OverloadedStrings","ExistentialQuantification","PatternGuards","TypeFamilies","RankNTypes","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll"],"isInstance":false}}