{"sliceID":3487007818076747542,"uses":[{"reference":{"otherSlice":3530682747090335108},"usedName":{"valueName":{"identifier":"contramapB"}},"qualification":null},{"reference":{"builtinModule":"Data.Either"},"usedName":{"constructorName":{"identifier":"Left"},"constructorTypeName":{"identifier":"Either"}},"qualification":null},{"reference":{"builtinModule":"Data.Either"},"usedName":{"constructorName":{"identifier":"Right"},"constructorTypeName":{"identifier":"Either"}},"qualification":null},{"reference":{"otherSlice":7285025425656614743},"usedName":{"valueName":{"identifier":"eitherB"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"otherSlice":2317942471882700773},"usedName":{"typeName":{"identifier":"BoundedPrim"}},"qualification":null}],"fragment":["condB ::\n      (a -> Bool) -> BoundedPrim a -> BoundedPrim a -> BoundedPrim a","condB p be1 be2\n  = contramapB (\\ x -> if p x then Left x else Right x)\n      (eitherB be1 be2)"],"instances":[],"language":{"extensions":["ScopedTypeVariables","BangPatterns","Unsafe","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}