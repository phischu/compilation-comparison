{"sliceID":7024913392421834560,"uses":[{"reference":{"otherSlice":1254073128444822395},"usedName":{"constructorName":{"identifier":"Stream"},"constructorTypeName":{"identifier":"Stream"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"SPEC"},"constructorTypeName":{"identifier":"SPEC"}},"qualification":null},{"reference":{"otherSlice":2120320550836080743},"usedName":{"constructorName":{"identifier":"Yield"},"constructorTypeName":{"identifier":"Step"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"otherSlice":2120320550836080743},"usedName":{"constructorName":{"identifier":"Skip"},"constructorTypeName":{"identifier":"Step"}},"qualification":null},{"reference":{"otherSlice":2120320550836080743},"usedName":{"constructorName":{"identifier":"Done"},"constructorTypeName":{"identifier":"Step"}},"qualification":null},{"reference":{"otherSlice":6854859016888063541},"usedName":{"valueName":{"identifier":"error"}},"qualification":"Ck"},{"reference":{"otherSlice":5512440569757699109},"usedName":{"valueName":{"identifier":"emptyStream"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Monad"}},"qualification":null},{"reference":{"otherSlice":1254073128444822395},"usedName":{"typeName":{"identifier":"Stream"}},"qualification":null}],"fragment":["head :: Monad m => Stream m a -> m a","head (Stream step t) = head_loop SPEC t\n  where head_loop !_ s\n          = do r <- step s\n               case r of\n                   Yield x _ -> return x\n                   Skip s' -> head_loop SPEC s'\n                   Done -> (\\ state ->\n                              (Ck.error \"Data/Vector/Fusion/Stream/Monadic.hs\" 251) state\n                                emptyStream)\n                             \"head\""],"instances":[],"language":{"extensions":["ExistentialQuantification","MultiParamTypeClasses","FlexibleInstances","Rank2Types","BangPatterns","KindSignatures","GADTs","ScopedTypeVariables","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}