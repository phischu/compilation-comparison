{"sliceID":6735251430614770144,"uses":[{"reference":{"otherSlice":8785507881657649312},"usedName":{"constructorName":{"identifier":"Parser"},"constructorTypeName":{"identifier":"Parser"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":5210530093827115852},"usedName":{"constructorName":{"identifier":"Complete"},"constructorTypeName":{"identifier":"More"}},"qualification":null},{"reference":{"otherSlice":8097268505951239635},"usedName":{"valueName":{"identifier":"prompt"}},"qualification":null},{"reference":{"otherSlice":5046549149702894478},"usedName":{"typeName":{"identifier":"Chunk"}},"qualification":null},{"reference":{"otherSlice":8785507881657649312},"usedName":{"typeName":{"identifier":"Parser"}},"qualification":null}],"fragment":["demandInput :: Chunk t => Parser t ()","demandInput\n  = Parser $\n      \\ t pos more lose succ ->\n        case more of\n            Complete -> lose t pos more [] \"not enough input\"\n            _ -> let lose' _ pos' more'\n                       = lose t pos' more' [] \"not enough input\"\n                     succ' t' pos' more' = succ t' pos' more' ()\n                   in prompt t pos more lose' succ'"],"instances":[],"language":{"extensions":["BangPatterns","ScopedTypeVariables","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}