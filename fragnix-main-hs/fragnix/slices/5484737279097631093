{"sliceID":5484737279097631093,"uses":[{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Monad"}},"qualification":null},{"reference":{"otherSlice":171938334774731537},"usedName":{"typeName":{"identifier":"ZeptoT"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"pure"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":">>="}},"qualification":null},{"reference":{"otherSlice":171938334774731537},"usedName":{"constructorName":{"identifier":"Parser"},"constructorTypeName":{"identifier":"ZeptoT"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":171938334774731537},"usedName":{"valueName":{"identifier":"runParser"}},"qualification":null},{"reference":{"otherSlice":2019467624419653315},"usedName":{"constructorName":{"identifier":"OK"},"constructorTypeName":{"identifier":"Result"}},"qualification":null},{"reference":{"otherSlice":2019467624419653315},"usedName":{"constructorName":{"identifier":"Fail"},"constructorTypeName":{"identifier":"Result"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"fail"}},"qualification":null},{"reference":{"builtinModule":"Control.Monad.Fail"},"usedName":{"valueName":{"identifier":"fail"}},"qualification":"Fail"}],"fragment":["instance Monad m => Monad (ZeptoT m) where\n        return = pure\n        \n        {-# INLINE return #-}\n        m >>= k\n          = Parser $\n              \\ s ->\n                do result <- runParser m s\n                   case result of\n                       OK a s' -> runParser (k a) s'\n                       Fail err -> return (Fail err)\n        \n        {-# INLINE (>>=) #-}\n        fail = Fail.fail\n        \n        {-# INLINE fail #-}"],"instances":[],"language":{"extensions":["BangPatterns","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":true}}