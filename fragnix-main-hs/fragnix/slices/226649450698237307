{"sliceID":226649450698237307,"uses":[{"reference":{"builtinModule":"Text.ParserCombinators.ReadP"},"usedName":{"valueName":{"identifier":"satisfy"}},"qualification":"ReadP"},{"reference":{"otherSlice":1077208998466345932},"usedName":{"valueName":{"identifier":"isDecimal"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"ord"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"-"}},"qualification":null},{"reference":{"builtinModule":"Text.ParserCombinators.ReadP"},"usedName":{"valueName":{"identifier":"look"}},"qualification":"ReadP"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":">>="}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"Text.ParserCombinators.ReadP"},"usedName":{"valueName":{"identifier":"get"}},"qualification":"ReadP"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null},{"reference":{"builtinModule":"Text.ParserCombinators.ReadP"},"usedName":{"typeName":{"identifier":"ReadP"}},"qualification":null}],"fragment":["foldDigits :: (a -> Int -> a) -> a -> ReadP a","foldDigits f z\n  = do c <- ReadP.satisfy isDecimal\n       let digit = ord c - 48\n           a = f z digit\n       ReadP.look >>= go a\n  where go !a [] = return a\n        go !a (c : cs)\n          | isDecimal c =\n            do _ <- ReadP.get\n               let digit = ord c - 48\n               go (f a digit) cs\n          | otherwise = return a"],"instances":[],"language":{"extensions":["DeriveDataTypeable","BangPatterns","ScopedTypeVariables","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}