{"sliceID":404988522340189502,"uses":[{"reference":{"builtinModule":"GHC.IO"},"usedName":{"valueName":{"identifier":"unsafeInterleaveIO"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":7399159756141061094},"usedName":{"valueName":{"identifier":"recv"}},"qualification":"N"},{"reference":{"otherSlice":6370398503432730163},"usedName":{"valueName":{"identifier":"defaultChunkSize"}},"qualification":null},{"reference":{"otherSlice":675696118971413715},"usedName":{"valueName":{"identifier":"null"}},"qualification":"S"},{"reference":{"otherSlice":2506276787981637013},"usedName":{"valueName":{"identifier":"shutdown"}},"qualification":null},{"reference":{"otherSlice":2030734789796356589},"usedName":{"constructorName":{"identifier":"ShutdownReceive"},"constructorTypeName":{"identifier":"ShutdownCmd"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":">>"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"otherSlice":1699226608098321587},"usedName":{"constructorName":{"identifier":"Empty"},"constructorTypeName":{"identifier":"ByteString"}},"qualification":null},{"reference":{"otherSlice":1699226608098321587},"usedName":{"constructorName":{"identifier":"Chunk"},"constructorTypeName":{"identifier":"ByteString"}},"qualification":null},{"reference":{"builtinModule":"Control.Monad"},"usedName":{"valueName":{"identifier":"liftM"}},"qualification":null},{"reference":{"otherSlice":3934872489478287384},"usedName":{"typeName":{"identifier":"Socket"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null},{"reference":{"otherSlice":1699226608098321587},"usedName":{"typeName":{"identifier":"ByteString"}},"qualification":null}],"fragment":["getContents :: Socket -> IO ByteString","getContents sock = loop\n  where loop\n          = unsafeInterleaveIO $\n              do s <- N.recv sock defaultChunkSize\n                 if S.null s then shutdown sock ShutdownReceive >> return Empty else\n                   Chunk s `liftM` loop"],"instances":[],"language":{"extensions":["DeriveDataTypeable","ForeignFunctionInterface","TypeSynonymInstances","BangPatterns","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}