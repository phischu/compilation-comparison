{"sliceID":6873689068007915963,"uses":[{"reference":{"builtinModule":"Control.Monad.Fix"},"usedName":{"typeName":{"identifier":"MonadFix"}},"qualification":null},{"reference":{"otherSlice":5096762142386927551},"usedName":{"typeName":{"identifier":"CatchT"}},"qualification":null},{"reference":{"builtinModule":"Control.Monad.Fix"},"usedName":{"valueName":{"identifier":"mfix"}},"qualification":null},{"reference":{"otherSlice":5096762142386927551},"usedName":{"constructorName":{"identifier":"CatchT"},"constructorTypeName":{"identifier":"CatchT"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":5096762142386927551},"usedName":{"valueName":{"identifier":"runCatchT"}},"qualification":null},{"reference":{"builtinModule":"Data.Either"},"usedName":{"constructorName":{"identifier":"Right"},"constructorTypeName":{"identifier":"Either"}},"qualification":null},{"reference":{"builtinModule":"GHC.Err"},"usedName":{"valueName":{"identifier":"error"}},"qualification":null}],"fragment":["instance MonadFix m => MonadFix (CatchT m) where\n        mfix f\n          = CatchT $\n              mfix $\n                \\ a ->\n                  runCatchT $\n                    f $\n                      case a of\n                          Right r -> r\n                          _ -> error \"empty mfix argument\""],"instances":[],"language":{"extensions":["ExistentialQuantification","GeneralizedNewtypeDeriving","RankNTypes","FlexibleInstances","MultiParamTypeClasses","UndecidableInstances","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":true}}