{"sliceID":539118857110994313,"uses":[{"reference":{"otherSlice":6665188221893896621},"usedName":{"valueName":{"identifier":"update_stream"}},"qualification":null},{"reference":{"otherSlice":6319130439146192198},"usedName":{"valueName":{"identifier":"zipWith"}},"qualification":"Bundle"},{"reference":{"otherSlice":5483074428067105677},"usedName":{"valueName":{"identifier":"stream"}},"qualification":null},{"reference":{"otherSlice":8572689894313737623},"usedName":{"typeName":{"identifier":"Vector"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null}],"fragment":["update_ :: (Vector v a, Vector v Int) => v a -> v Int -> v a -> v a","update_ v is w\n  = update_stream v (Bundle.zipWith (,) (stream is) (stream w))"],"instances":[],"language":{"extensions":["Rank2Types","MultiParamTypeClasses","FlexibleContexts","TypeFamilies","ScopedTypeVariables","BangPatterns","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}