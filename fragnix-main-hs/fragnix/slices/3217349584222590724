{"sliceID":3217349584222590724,"uses":[{"reference":{"otherSlice":8184865101111560075},"usedName":{"valueName":{"identifier":"runParser"}},"qualification":null},{"reference":{"otherSlice":2644514564565527716},"usedName":{"valueName":{"identifier":"buffer"}},"qualification":null},{"reference":{"otherSlice":6973050610896521593},"usedName":{"constructorName":{"identifier":"Complete"},"constructorTypeName":{"identifier":"More"}},"qualification":null},{"reference":{"otherSlice":7491300163645506485},"usedName":{"valueName":{"identifier":"failK"}},"qualification":null},{"reference":{"otherSlice":5347359839816870066},"usedName":{"valueName":{"identifier":"successK"}},"qualification":null},{"reference":{"otherSlice":2740837175057996995},"usedName":{"constructorName":{"identifier":"Fail"},"constructorTypeName":{"identifier":"IResult"}},"qualification":null},{"reference":{"builtinModule":"Data.Either"},"usedName":{"constructorName":{"identifier":"Left"},"constructorTypeName":{"identifier":"Either"}},"qualification":null},{"reference":{"otherSlice":2740837175057996995},"usedName":{"constructorName":{"identifier":"Done"},"constructorTypeName":{"identifier":"IResult"}},"qualification":null},{"reference":{"builtinModule":"Data.Either"},"usedName":{"constructorName":{"identifier":"Right"},"constructorTypeName":{"identifier":"Either"}},"qualification":null},{"reference":{"builtinModule":"GHC.Err"},"usedName":{"valueName":{"identifier":"error"}},"qualification":null},{"reference":{"otherSlice":1318512042216165404},"usedName":{"typeName":{"identifier":"Parser"}},"qualification":null},{"reference":{"otherSlice":6742866475076404776},"usedName":{"typeName":{"identifier":"Text"}},"qualification":null},{"reference":{"builtinModule":"Data.Either"},"usedName":{"typeName":{"identifier":"Either"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"String"}},"qualification":null}],"fragment":["parseOnly :: Parser a -> Text -> Either String a","parseOnly m s\n  = case runParser m (buffer s) 0 Complete failK successK of\n        Fail _ _ err -> Left err\n        Done _ a -> Right a\n        _ -> error \"parseOnly: impossible error!\""],"instances":[],"language":{"extensions":["BangPatterns","FlexibleInstances","GADTs","OverloadedStrings","Rank2Types","RecordWildCards","TypeFamilies","TypeSynonymInstances","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}