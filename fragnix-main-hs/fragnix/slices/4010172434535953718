{"sliceID":4010172434535953718,"uses":[{"reference":{"otherSlice":1546470151414195006},"usedName":{"constructorName":{"identifier":"MkSocket"},"constructorTypeName":{"identifier":"Socket"}},"qualification":null},{"reference":{"builtinModule":"GHC.MVar"},"usedName":{"valueName":{"identifier":"readMVar"}},"qualification":null},{"reference":{"otherSlice":3185694825673031411},"usedName":{"valueName":{"identifier":"isAcceptable"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"identifier":"not"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO.Exception"},"usedName":{"valueName":{"identifier":"ioError"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO.Exception"},"usedName":{"valueName":{"identifier":"userError"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"++"}},"qualification":null},{"reference":{"builtinModule":"GHC.Show"},"usedName":{"valueName":{"identifier":"show"}},"qualification":null},{"reference":{"otherSlice":3571188117088414292},"usedName":{"valueName":{"identifier":"sizeOfSockAddrByFamily"}},"qualification":null},{"reference":{"builtinModule":"Foreign.Marshal.Alloc"},"usedName":{"valueName":{"identifier":"allocaBytes"}},"qualification":null},{"reference":{"builtinModule":"Foreign.Marshal.Utils"},"usedName":{"valueName":{"identifier":"with"}},"qualification":null},{"reference":{"builtinModule":"GHC.Real"},"usedName":{"valueName":{"identifier":"fromIntegral"}},"qualification":null},{"reference":{"otherSlice":4047074744671307514},"usedName":{"valueName":{"identifier":"throwSocketErrorIfMinus1RetryMayBlock"}},"qualification":null},{"reference":{"builtinModule":"GHC.Conc.IO"},"usedName":{"valueName":{"identifier":"threadWaitRead"}},"qualification":null},{"reference":{"otherSlice":3373966974145180897},"usedName":{"valueName":{"identifier":"c_accept4"}},"qualification":null},{"reference":{"otherSlice":146393904031774079},"usedName":{"valueName":{"identifier":"peekSockAddr"}},"qualification":null},{"reference":{"builtinModule":"GHC.MVar"},"usedName":{"valueName":{"identifier":"newMVar"}},"qualification":null},{"reference":{"otherSlice":7451797085728876607},"usedName":{"constructorName":{"identifier":"Connected"},"constructorTypeName":{"identifier":"SocketStatus"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"otherSlice":1546470151414195006},"usedName":{"typeName":{"identifier":"Socket"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null},{"reference":{"otherSlice":3812070640366845611},"usedName":{"typeName":{"identifier":"SockAddr"}},"qualification":null}],"fragment":["accept :: Socket -> IO (Socket, SockAddr)","accept sock@(MkSocket s family stype protocol status)\n  = do currentStatus <- readMVar status\n       okay <- isAcceptable sock\n       if not okay then\n         ioError $\n           userError $\n             \"Network.Socket.accept: can't accept socket (\" ++\n               show (family, stype, protocol) ++\n                 \") with status \" ++ show currentStatus\n         else\n         do let sz = sizeOfSockAddrByFamily family\n            allocaBytes sz $\n              \\ sockaddr ->\n                do with (fromIntegral sz) $\n                     \\ ptr_len ->\n                       do new_sock <- throwSocketErrorIfMinus1RetryMayBlock\n                                        \"Network.Socket.accept\"\n                                        (threadWaitRead (fromIntegral s))\n                                        (c_accept4 s sockaddr ptr_len (2048))\n                          addr <- peekSockAddr sockaddr\n                          new_status <- newMVar Connected\n                          return ((MkSocket new_sock family stype protocol new_status), addr)"],"instances":[],"language":{"extensions":["DeriveDataTypeable","ForeignFunctionInterface","TypeSynonymInstances","ScopedTypeVariables","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}