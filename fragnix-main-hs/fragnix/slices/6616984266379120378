{"sliceID":6616984266379120378,"uses":[{"reference":{"otherSlice":2208939782328074699},"usedName":{"valueName":{"identifier":"wantInput"}},"qualification":null},{"reference":{"otherSlice":8330253145869307845},"usedName":{"valueName":{"identifier":"get"}},"qualification":null},{"reference":{"otherSlice":3057677465774450882},"usedName":{"valueName":{"identifier":"advance"}},"qualification":null},{"reference":{"otherSlice":6258463563638113276},"usedName":{"valueName":{"identifier":"length"}},"qualification":"B"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"GHC.List"},"usedName":{"valueName":{"identifier":"reverse"}},"qualification":null},{"reference":{"otherSlice":2385146024156182908},"usedName":{"typeName":{"identifier":"Parser"}},"qualification":null},{"reference":{"otherSlice":8642306666063513779},"usedName":{"typeName":{"identifier":"ByteString"}},"qualification":null}],"fragment":["takeRest :: Parser [ByteString]","takeRest = go []\n  where go acc\n          = do input <- wantInput\n               if input then\n                 do s <- get\n                    advance (B.length s)\n                    go (s : acc)\n                 else return (reverse acc)"],"instances":[],"language":{"extensions":["BangPatterns","GADTs","OverloadedStrings","RecordWildCards","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}