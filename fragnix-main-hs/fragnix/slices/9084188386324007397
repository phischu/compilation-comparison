{"sliceID":9084188386324007397,"uses":[{"reference":{"otherSlice":6479984610474665109},"usedName":{"valueName":{"identifier":"execState"}},"qualification":null},{"reference":{"otherSlice":2565785016262563096},"usedName":{"valueName":{"identifier":"runS"}},"qualification":null},{"reference":{"otherSlice":9034824683221580801},"usedName":{"valueName":{"identifier":"def"}},"qualification":null},{"reference":{"builtinModule":"Data.Foldable"},"usedName":{"valueName":{"identifier":"foldl"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"flip"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":4775289007450556613},"usedName":{"valueName":{"identifier":"notFoundApp"}},"qualification":null},{"reference":{"otherSlice":5789968544046853094},"usedName":{"valueName":{"identifier":"routes"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":">>="}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"otherSlice":5789968544046853094},"usedName":{"valueName":{"identifier":"middlewares"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Monad"}},"qualification":null},{"reference":{"otherSlice":8896971230885589368},"usedName":{"typeName":{"identifier":"Response"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null},{"reference":{"otherSlice":2565785016262563096},"usedName":{"typeName":{"identifier":"ScottyT"}},"qualification":null},{"reference":{"otherSlice":2503338423706628106},"usedName":{"typeName":{"identifier":"Application"}},"qualification":null}],"fragment":["scottyAppT ::\n             (Monad m, Monad n) =>\n             (m Response -> IO Response) -> ScottyT e m () -> n Application","scottyAppT runActionToIO defs\n  = do let s = execState (runS defs) def\n       let rapp req callback\n             = runActionToIO (foldl (flip ($)) notFoundApp (routes s) req) >>=\n                 callback\n       return $ foldl (flip ($)) rapp (middlewares s)"],"instances":[],"language":{"extensions":["OverloadedStrings","RankNTypes","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}