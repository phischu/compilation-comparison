{"sliceID":8067251363920493555,"uses":[{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"Data.Functor"},"usedName":{"valueName":{"operator":"<$>"}},"qualification":null},{"reference":{"otherSlice":3198347555409976524},"usedName":{"valueName":{"identifier":"dispatchParseJSON"}},"qualification":null},{"reference":{"otherSlice":3790782889836978137},"usedName":{"typeName":{"identifier":"JSONClass"}},"qualification":null},{"reference":{"otherSlice":9113544377361668434},"usedName":{"typeName":{"identifier":"TyVarMap"}},"qualification":null}],"fragment":["parseUnaryMatches ::\n                  JSONClass -> TyVarMap -> Type -> Name -> [Q Match]","parseUnaryMatches jc tvMap argTy conName\n  = [do arg <- newName \"arg\"\n        match (varP arg)\n          (normalB $\n             infixApp (conE conName) [| (<$>) |]\n               (dispatchParseJSON jc conName tvMap argTy `appE` varE arg))\n          []]"],"instances":[],"language":{"extensions":["BangPatterns","FlexibleInstances","NamedFieldPuns","NoImplicitPrelude","UndecidableInstances","TemplateHaskellQuotes","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards","TemplateHaskell"],"isInstance":false}}