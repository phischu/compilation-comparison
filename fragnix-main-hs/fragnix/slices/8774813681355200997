{"sliceID":8774813681355200997,"uses":[{"reference":{"otherSlice":1699226608098321587},"usedName":{"constructorName":{"identifier":"Empty"},"constructorTypeName":{"identifier":"ByteString"}},"qualification":null},{"reference":{"otherSlice":1699226608098321587},"usedName":{"constructorName":{"identifier":"Chunk"},"constructorTypeName":{"identifier":"ByteString"}},"qualification":null},{"reference":{"otherSlice":8642306666063513779},"usedName":{"typeName":{"identifier":"ByteString"}},"qualification":"S"},{"reference":{"otherSlice":1699226608098321587},"usedName":{"typeName":{"identifier":"ByteString"}},"qualification":null},{"reference":{"otherSlice":6643706978364404939},"usedName":{"valueName":{"identifier":"elemIndex"}},"qualification":"B"},{"reference":{"otherSlice":5868129045761401277},"usedName":{"valueName":{"identifier":"c2w"}},"qualification":null},{"reference":{"builtinModule":"Data.Maybe"},"usedName":{"constructorName":{"identifier":"Nothing"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":675696118971413715},"usedName":{"valueName":{"identifier":"null"}},"qualification":"B"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"builtinModule":"Data.Maybe"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"/="}},"qualification":null},{"reference":{"otherSlice":3560339300675439450},"usedName":{"valueName":{"identifier":"unsafeTake"}},"qualification":"B"},{"reference":{"otherSlice":6479985746417015458},"usedName":{"valueName":{"identifier":"unsafeDrop"}},"qualification":"B"},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"otherSlice":2291042143385708565},"usedName":{"valueName":{"identifier":"unsafeTail"}},"qualification":"B"},{"reference":{"otherSlice":4238320893071839321},"usedName":{"valueName":{"identifier":"revChunks"}},"qualification":null},{"reference":{"builtinModule":"GHC.Prim"},"usedName":{"valueName":{"identifier":"seq"}},"qualification":null}],"fragment":["lines :: ByteString -> [ByteString]","lines Empty = []\nlines (Chunk c0 cs0) = loop0 c0 cs0\n  where loop0 :: S.ByteString -> ByteString -> [ByteString]\n        loop0 c cs\n          = case B.elemIndex (c2w '\\n') c of\n                Nothing -> case cs of\n                               Empty | B.null c -> []\n                                     | otherwise -> Chunk c Empty : []\n                               (Chunk c' cs') | B.null c -> loop0 c' cs'\n                                              | otherwise -> loop c' [c] cs'\n                Just n | n /= 0 ->\n                         Chunk (B.unsafeTake n c) Empty : loop0 (B.unsafeDrop (n + 1) c) cs\n                       | otherwise -> Empty : loop0 (B.unsafeTail c) cs\n        \n        loop ::\n             S.ByteString -> [S.ByteString] -> ByteString -> [ByteString]\n        loop c line cs\n          = case B.elemIndex (c2w '\\n') c of\n                Nothing -> case cs of\n                               Empty -> let c' = revChunks (c : line) in c' `seq` (c' : [])\n                               (Chunk c' cs') -> loop c' (c : line) cs'\n                Just n -> let c' = revChunks (B.unsafeTake n c : line) in\n                            c' `seq` (c' : loop0 (B.unsafeDrop (n + 1) c) cs)"],"instances":[],"language":{"extensions":["MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}