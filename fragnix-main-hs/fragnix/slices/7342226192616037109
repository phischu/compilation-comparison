{"sliceID":7342226192616037109,"uses":[{"reference":{"otherSlice":3456729514491136568},"usedName":{"valueName":{"identifier":"toOrdinalDate"}},"qualification":null},{"reference":{"otherSlice":5090175635020298350},"usedName":{"valueName":{"identifier":"dayOfYearToMonthAndDay"}},"qualification":null},{"reference":{"otherSlice":6983660229997417830},"usedName":{"valueName":{"identifier":"isLeapYear"}},"qualification":null},{"reference":{"otherSlice":3513222745602344190},"usedName":{"typeName":{"identifier":"Day"}},"qualification":null},{"reference":{"builtinModule":"GHC.Integer"},"usedName":{"typeName":{"identifier":"Integer"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null}],"fragment":["toGregorian :: Day -> (Integer, Int, Int)","toGregorian date = (year, month, day)\n  where (year, yd) = toOrdinalDate date\n        (month, day) = dayOfYearToMonthAndDay (isLeapYear year) yd"],"instances":[],"language":{"extensions":["Rank2Types","DeriveDataTypeable","StandaloneDeriving","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}