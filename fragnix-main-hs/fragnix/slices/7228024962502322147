{"sliceID":7228024962502322147,"uses":[{"reference":{"otherSlice":1989591368275636208},"usedName":{"constructorName":{"identifier":"Semaphore"},"constructorTypeName":{"identifier":"Semaphore"}},"qualification":null},{"reference":{"builtinModule":"Foreign.ForeignPtr"},"usedName":{"valueName":{"identifier":"withForeignPtr"}},"qualification":null},{"reference":{"otherSlice":866853035466714270},"usedName":{"valueName":{"identifier":"sem_trywait"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"True"},"constructorTypeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"builtinModule":"Foreign.C.Error"},"usedName":{"valueName":{"identifier":"getErrno"}},"qualification":null},{"reference":{"builtinModule":"Foreign.C.Error"},"usedName":{"valueName":{"identifier":"eINTR"}},"qualification":null},{"reference":{"builtinModule":"Foreign.C.Error"},"usedName":{"valueName":{"identifier":"eAGAIN"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"False"},"constructorTypeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"builtinModule":"Foreign.C.Error"},"usedName":{"valueName":{"identifier":"throwErrno"}},"qualification":null},{"reference":{"otherSlice":1989591368275636208},"usedName":{"typeName":{"identifier":"Semaphore"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Bool"}},"qualification":null}],"fragment":["semTryWait :: Semaphore -> IO Bool","semTryWait (Semaphore fptr) = withForeignPtr fptr semTrywait'\n  where semTrywait' sem\n          = do res <- sem_trywait sem\n               (if res == 0 then return True else\n                  do errno <- getErrno\n                     (if errno == eINTR then semTrywait' sem else\n                        if errno == eAGAIN then return False else throwErrno \"semTrywait\"))"],"instances":[],"language":{"extensions":["MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}