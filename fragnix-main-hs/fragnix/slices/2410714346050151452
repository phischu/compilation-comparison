{"sliceID":2410714346050151452,"uses":[{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null},{"reference":{"otherSlice":7966810126006906062},"usedName":{"valueName":{"identifier":"findMonthDay"}},"qualification":null},{"reference":{"otherSlice":4426967274123469005},"usedName":{"valueName":{"identifier":"monthLengths"}},"qualification":null},{"reference":{"otherSlice":1101142589065773189},"usedName":{"valueName":{"identifier":"clip"}},"qualification":null}],"fragment":["dayOfYearToMonthAndDay :: Bool -> Int -> (Int, Int)","dayOfYearToMonthAndDay isLeap yd\n  = findMonthDay (monthLengths isLeap)\n      (clip 1 (if isLeap then 366 else 365) yd)"],"instances":[],"language":{"extensions":["Rank2Types","DeriveDataTypeable","StandaloneDeriving","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}