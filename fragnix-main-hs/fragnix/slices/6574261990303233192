{"sliceID":6574261990303233192,"uses":[{"reference":{"otherSlice":675696118971413715},"usedName":{"valueName":{"identifier":"null"}},"qualification":"B"},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"||"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"otherSlice":3837783939365562731},"usedName":{"valueName":{"identifier":"unsafeHead"}},"qualification":null},{"reference":{"otherSlice":2291042143385708565},"usedName":{"valueName":{"identifier":"unsafeTail"}},"qualification":"B"},{"reference":{"otherSlice":8642306666063513779},"usedName":{"typeName":{"identifier":"ByteString"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Char"}},"qualification":null}],"fragment":["zip :: ByteString -> ByteString -> [(Char, Char)]","zip ps qs\n  | B.null ps || B.null qs = []\n  | otherwise =\n    (unsafeHead ps, unsafeHead qs) :\n      zip (B.unsafeTail ps) (B.unsafeTail qs)"],"instances":[],"language":{"extensions":["MagicHash","UnboxedTuples","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}