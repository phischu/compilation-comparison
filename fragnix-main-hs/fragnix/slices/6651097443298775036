{"sliceID":6651097443298775036,"uses":[{"reference":{"otherSlice":847687915866770813},"usedName":{"typeName":{"identifier":"ToJSON"}},"qualification":null},{"reference":{"otherSlice":847687915866770813},"usedName":{"valueName":{"identifier":"toJSON"}},"qualification":null},{"reference":{"otherSlice":1669319695546572556},"usedName":{"constructorName":{"identifier":"Array"},"constructorTypeName":{"identifier":"Value"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":6212199489683928166},"usedName":{"valueName":{"identifier":"create"}},"qualification":"V"},{"reference":{"otherSlice":2508811511449264432},"usedName":{"valueName":{"identifier":"unsafeNew"}},"qualification":"VM"},{"reference":{"otherSlice":2158331014164558600},"usedName":{"valueName":{"identifier":"unsafeWrite"}},"qualification":"VM"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null}],"fragment":["instance (ToJSON a, ToJSON b, ToJSON c, ToJSON d, ToJSON e,\n          ToJSON f, ToJSON g) =>\n         ToJSON (a, b, c, d, e, f, g) where\n        toJSON (a, b, c, d, e, f, g)\n          = Array $\n              V.create $\n                do mv <- VM.unsafeNew 7\n                   VM.unsafeWrite mv 0 (toJSON a)\n                   VM.unsafeWrite mv 1 (toJSON b)\n                   VM.unsafeWrite mv 2 (toJSON c)\n                   VM.unsafeWrite mv 3 (toJSON d)\n                   VM.unsafeWrite mv 4 (toJSON e)\n                   VM.unsafeWrite mv 5 (toJSON f)\n                   VM.unsafeWrite mv 6 (toJSON g)\n                   return mv\n        \n        {-# INLINE toJSON #-}"],"instances":[],"language":{"extensions":["DeriveDataTypeable","FlexibleContexts","FlexibleInstances","GeneralizedNewtypeDeriving","IncoherentInstances","OverlappingInstances","OverloadedStrings","UndecidableInstances","ViewPatterns","DefaultSignatures","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":true}}