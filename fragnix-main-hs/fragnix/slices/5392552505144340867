{"sliceID":5392552505144340867,"uses":[{"reference":{"otherSlice":194130678090077898},"usedName":{"valueName":{"identifier":"clipValid"}},"qualification":null},{"reference":{"otherSlice":3513222745602344190},"usedName":{"valueName":{"identifier":"toModifiedJulianDay"}},"qualification":null},{"reference":{"otherSlice":4837188226587690670},"usedName":{"valueName":{"identifier":"fromOrdinalDate"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"-"}},"qualification":null},{"reference":{"builtinModule":"GHC.Real"},"usedName":{"valueName":{"identifier":"mod"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"*"}},"qualification":null},{"reference":{"builtinModule":"GHC.Real"},"usedName":{"valueName":{"identifier":"toInteger"}},"qualification":null},{"reference":{"otherSlice":6983660229997417830},"usedName":{"valueName":{"identifier":"isLeapYear"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"otherSlice":3513222745602344190},"usedName":{"constructorName":{"identifier":"ModifiedJulianDay"},"constructorTypeName":{"identifier":"Day"}},"qualification":null},{"reference":{"builtinModule":"GHC.Integer"},"usedName":{"typeName":{"identifier":"Integer"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null},{"reference":{"builtinModule":"Data.Maybe"},"usedName":{"typeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":3513222745602344190},"usedName":{"typeName":{"identifier":"Day"}},"qualification":null}],"fragment":["fromMondayStartWeekValid :: Integer -> Int -> Int -> Maybe Day","fromMondayStartWeekValid year w d\n  = do d' <- clipValid 1 7 d\n       let firstDay = toModifiedJulianDay (fromOrdinalDate year 1)\n       let firstMonday = (5 - firstDay) `mod` 7\n       let yd = firstMonday + 7 * toInteger (w - 1) + toInteger d'\n       yd' <- clipValid 1 (if isLeapYear year then 366 else 365) yd\n       return (ModifiedJulianDay (firstDay - 1 + yd'))"],"instances":[],"language":{"extensions":["Rank2Types","DeriveDataTypeable","StandaloneDeriving","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}