{"sliceID":1314135573699729367,"uses":[{"reference":{"otherSlice":4826645999871818821},"usedName":{"valueName":{"identifier":"foldl'"}},"qualification":"B8"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"fmap"}},"qualification":null},{"reference":{"otherSlice":6766200785044374997},"usedName":{"valueName":{"identifier":"takeWhile1"}},"qualification":"I"},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":">="}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"&&"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"<="}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"||"}},"qualification":null},{"reference":{"builtinModule":"Data.Bits"},"usedName":{"valueName":{"identifier":"shiftL"}},"qualification":null},{"reference":{"builtinModule":"Data.Bits"},"usedName":{"valueName":{"operator":".|."}},"qualification":null},{"reference":{"builtinModule":"GHC.Real"},"usedName":{"valueName":{"identifier":"fromIntegral"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"-"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"builtinModule":"GHC.Real"},"usedName":{"typeName":{"identifier":"Integral"}},"qualification":null},{"reference":{"builtinModule":"Data.Bits"},"usedName":{"typeName":{"identifier":"Bits"}},"qualification":null},{"reference":{"otherSlice":2385146024156182908},"usedName":{"typeName":{"identifier":"Parser"}},"qualification":null}],"fragment":["hexadecimal :: (Integral a, Bits a) => Parser a","hexadecimal = B8.foldl' step 0 `fmap` I.takeWhile1 isHexDigit\n  where isHexDigit w\n          = (w >= 48 && w <= 57) ||\n              (w >= 97 && w <= 102) || (w >= 65 && w <= 70)\n        step a w\n          | w >= 48 && w <= 57 = (a `shiftL` 4) .|. fromIntegral (w - 48)\n          | w >= 97 = (a `shiftL` 4) .|. fromIntegral (w - 87)\n          | otherwise = (a `shiftL` 4) .|. fromIntegral (w - 55)"],"instances":[],"language":{"extensions":["BangPatterns","FlexibleInstances","TypeFamilies","TypeSynonymInstances","GADTs","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}