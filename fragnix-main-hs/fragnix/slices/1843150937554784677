{"sliceID":1843150937554784677,"uses":[{"reference":{"builtinModule":"GHC.IO.Buffer"},"usedName":{"valueName":{"identifier":"charSize"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"/="}},"qualification":null},{"reference":{"otherSlice":220846507750611382},"usedName":{"valueName":{"identifier":"sizeError"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":">="}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"otherSlice":4524776170727728111},"usedName":{"valueName":{"identifier":"empty"}},"qualification":"T"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO.Buffer"},"usedName":{"valueName":{"identifier":"withRawBuffer"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":463669466912070098},"usedName":{"valueName":{"identifier":"unstream"}},"qualification":null},{"reference":{"otherSlice":2186011155846212713},"usedName":{"constructorName":{"identifier":"Stream"},"constructorTypeName":{"identifier":"Stream"}},"qualification":null},{"reference":{"otherSlice":8403370513594069187},"usedName":{"valueName":{"identifier":"maxSize"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"-"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"otherSlice":899429663293461015},"usedName":{"constructorName":{"identifier":"Done"},"constructorTypeName":{"identifier":"Step"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"<"}},"qualification":null},{"reference":{"otherSlice":899429663293461015},"usedName":{"constructorName":{"identifier":"Yield"},"constructorTypeName":{"identifier":"Step"}},"qualification":null},{"reference":{"otherSlice":7470158227640650967},"usedName":{"valueName":{"identifier":"inlinePerformIO"}},"qualification":null},{"reference":{"builtinModule":"Foreign.Storable"},"usedName":{"valueName":{"identifier":"peekElemOff"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO.Buffer"},"usedName":{"typeName":{"identifier":"RawCharBuffer"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null},{"reference":{"otherSlice":2241541392207318616},"usedName":{"typeName":{"identifier":"Text"}},"qualification":null}],"fragment":["unpack_nl :: RawCharBuffer -> Int -> Int -> IO (Text, Int)","unpack_nl !buf !r !w\n  | charSize /= 4 = sizeError \"unpack_nl\"\n  | r >= w = return (T.empty, 0)\n  | otherwise = withRawBuffer buf $ go\n  where go pbuf\n          = do let !t = unstream (Stream next r (maxSize (w - r)))\n                   w' = w - 1\n               return $ if ix w' == '\\r' then (t, w') else (t, w)\n          where next !i\n                  | i >= w = Done\n                  | c == '\\r' =\n                    let i' = i + 1 in\n                      if i' < w then\n                        if ix i' == '\\n' then Yield '\\n' (i + 2) else Yield '\\n' i' else\n                        Done\n                  | otherwise = Yield c (i + 1)\n                  where c = ix i\n                ix i = inlinePerformIO $ peekElemOff pbuf i"],"instances":[],"language":{"extensions":["BangPatterns","RecordWildCards","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}