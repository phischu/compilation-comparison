{"sliceID":467118036477441689,"uses":[{"reference":{"otherSlice":4701952552831585186},"usedName":{"valueName":{"identifier":"getSocketFamilyGen"}},"qualification":null},{"reference":{"otherSlice":3163448590057951563},"usedName":{"constructorName":{"identifier":"Stream"},"constructorTypeName":{"identifier":"SocketType"}},"qualification":"NS"},{"reference":{"otherSlice":1940791894936628658},"usedName":{"valueName":{"identifier":"unpack"}},"qualification":"S8"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":960499235437478350},"usedName":{"valueName":{"identifier":"connect"}},"qualification":"NS"},{"reference":{"otherSlice":8548432960023453856},"usedName":{"valueName":{"identifier":"addrAddress"}},"qualification":"NS"},{"reference":{"builtinModule":"Data.Either"},"usedName":{"constructorName":{"identifier":"Left"},"constructorTypeName":{"identifier":"Either"}},"qualification":null},{"reference":{"otherSlice":1736940889399081958},"usedName":{"valueName":{"identifier":"sClose"}},"qualification":"NS"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":">>"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO"},"usedName":{"valueName":{"identifier":"throwIO"}},"qualification":null},{"reference":{"builtinModule":"Data.Either"},"usedName":{"constructorName":{"identifier":"Right"},"constructorTypeName":{"identifier":"Either"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null},{"reference":{"builtinModule":"Data.Either"},"usedName":{"typeName":{"identifier":"Either"}},"qualification":null},{"reference":{"builtinModule":"GHC.Exception"},"usedName":{"typeName":{"identifier":"SomeException"}},"qualification":null},{"reference":{"builtinModule":"Control.Exception.Base"},"usedName":{"valueName":{"identifier":"try"}},"qualification":null},{"reference":{"otherSlice":8642306666063513779},"usedName":{"typeName":{"identifier":"ByteString"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null},{"reference":{"otherSlice":4486329222352366024},"usedName":{"typeName":{"identifier":"Family"}},"qualification":"NS"},{"reference":{"otherSlice":3934872489478287384},"usedName":{"typeName":{"identifier":"Socket"}},"qualification":"NS"},{"reference":{"otherSlice":5051683172608853772},"usedName":{"typeName":{"identifier":"SockAddr"}},"qualification":"NS"}],"fragment":["getSocketFamilyTCP ::\n                   ByteString -> Int -> NS.Family -> IO (NS.Socket, NS.SockAddr)","getSocketFamilyTCP host' port' addrFamily\n  = do (sock, addr) <- getSocketFamilyGen NS.Stream (S8.unpack host')\n                         port'\n                         addrFamily\n       ee <- try' $ NS.connect sock (NS.addrAddress addr)\n       case ee of\n           Left e -> NS.sClose sock >> throwIO e\n           Right () -> return (sock, NS.addrAddress addr)\n  where try' :: IO a -> IO (Either SomeException a)\n        try' = try"],"instances":[],"language":{"extensions":["ScopedTypeVariables","BangPatterns","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}