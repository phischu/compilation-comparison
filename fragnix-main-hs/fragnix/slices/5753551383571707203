{"sliceID":5753551383571707203,"uses":[{"reference":{"otherSlice":2224578989112367209},"usedName":{"constructorName":{"identifier":"Put"},"constructorTypeName":{"identifier":"Put"}},"qualification":null},{"reference":{"otherSlice":2931540031717686030},"usedName":{"valueName":{"identifier":"buildStep"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":2921932848836490295},"usedName":{"constructorName":{"identifier":"BufRange"},"constructorTypeName":{"identifier":"BufRange"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"otherSlice":3030113937244366044},"usedName":{"constructorName":{"identifier":"Done"},"constructorTypeName":{"identifier":"BuildSignal"}},"qualification":null},{"reference":{"otherSlice":3188991959169423568},"usedName":{"constructorName":{"identifier":"Buffer"},"constructorTypeName":{"identifier":"Buffer"}},"qualification":null},{"reference":{"otherSlice":3030113937244366044},"usedName":{"valueName":{"identifier":"runBuildStep"}},"qualification":null},{"reference":{"otherSlice":3030113937244366044},"usedName":{"constructorName":{"identifier":"BufferFull"},"constructorTypeName":{"identifier":"BuildSignal"}},"qualification":null},{"reference":{"otherSlice":3030113937244366044},"usedName":{"constructorName":{"identifier":"InsertByteString"},"constructorTypeName":{"identifier":"BuildSignal"}},"qualification":null},{"reference":{"otherSlice":675696118971413715},"usedName":{"valueName":{"identifier":"null"}},"qualification":"S"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":">>="}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Monad"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null},{"reference":{"otherSlice":3030113937244366044},"usedName":{"typeName":{"identifier":"BuildSignal"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null},{"reference":{"otherSlice":3188991959169423568},"usedName":{"typeName":{"identifier":"Buffer"}},"qualification":null},{"reference":{"otherSlice":8642306666063513779},"usedName":{"typeName":{"identifier":"ByteString"}},"qualification":"S"},{"reference":{"otherSlice":2224578989112367209},"usedName":{"typeName":{"identifier":"Put"}},"qualification":null}],"fragment":["runPut ::\n         Monad m =>\n         (IO (BuildSignal a) -> m (BuildSignal a)) ->\n           (Int -> Buffer -> m Buffer) ->\n             (S.ByteString -> m ()) -> Put a -> Buffer -> m (a, Buffer)","runPut liftIO outputBuf outputBS (Put put)\n  = runStep (put (finalStep))\n  where finalStep x\n          = buildStep $ \\ (BufRange op _) -> return $ Done op x\n        runStep step buf@(Buffer fpbuf p0 op ope)\n          = do let !br = BufRange op ope\n               signal <- liftIO $ runBuildStep step br\n               case signal of\n                   Done op' x -> return (x, Buffer fpbuf p0 op' ope)\n                   BufferFull minSize op' nextStep -> do buf' <- outputBuf minSize\n                                                                   (Buffer fpbuf p0 op' ope)\n                                                         runStep nextStep buf'\n                   InsertByteString op' bs nextStep | S.null bs ->\n                                                      outputBuf 1 (Buffer fpbuf p0 op' ope) >>=\n                                                        runStep nextStep\n                                                    | p0 == op' ->\n                                                      do outputBS bs\n                                                         runStep nextStep buf\n                                                    | otherwise ->\n                                                      do buf' <- outputBuf 1\n                                                                   (Buffer fpbuf p0 op' ope)\n                                                         outputBS bs\n                                                         runStep nextStep buf'"],"instances":[],"language":{"extensions":["BangPatterns","Rank2Types","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}