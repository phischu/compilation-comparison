{"sliceID":1642409994275259471,"uses":[{"reference":{"builtinModule":"Control.Exception.Base"},"usedName":{"valueName":{"identifier":"bracket"}},"qualification":null},{"reference":{"builtinModule":"GHC.MVar"},"usedName":{"valueName":{"identifier":"tryTakeMVar"}},"qualification":null},{"reference":{"builtinModule":"Data.Maybe"},"usedName":{"constructorName":{"identifier":"Nothing"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"GHC.MVar"},"usedName":{"valueName":{"identifier":"putMVar"}},"qualification":null},{"reference":{"builtinModule":"GHC.IORef"},"usedName":{"valueName":{"identifier":"writeIORef"}},"qualification":null},{"reference":{"builtinModule":"Data.Maybe"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":">"}},"qualification":null},{"reference":{"otherSlice":1408743875280310254},"usedName":{"valueName":{"identifier":"rotate"}},"qualification":null},{"reference":{"otherSlice":4757712668263389941},"usedName":{"valueName":{"identifier":"renewLoggerSet"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"-"}},"qualification":null},{"reference":{"otherSlice":4643942544947081026},"usedName":{"valueName":{"identifier":"log_file"}},"qualification":null},{"reference":{"otherSlice":4643942544947081026},"usedName":{"valueName":{"identifier":"log_file_size"}},"qualification":null},{"reference":{"builtinModule":"Control.Exception.Base"},"usedName":{"valueName":{"identifier":"handle"}},"qualification":null},{"reference":{"builtinModule":"GHC.Exception"},"usedName":{"constructorName":{"identifier":"SomeException"},"constructorTypeName":{"identifier":"SomeException"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null},{"reference":{"builtinModule":"GHC.Real"},"usedName":{"valueName":{"identifier":"fromIntegral"}},"qualification":null},{"reference":{"builtinModule":"Data.Functor"},"usedName":{"valueName":{"operator":"<$>"}},"qualification":null},{"reference":{"otherSlice":960398752531672367},"usedName":{"valueName":{"identifier":"getFileSize"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"identifier":"fromInteger"}},"qualification":null},{"reference":{"builtinModule":"GHC.Real"},"usedName":{"valueName":{"identifier":"div"}},"qualification":null},{"reference":{"otherSlice":8154511139228787414},"usedName":{"typeName":{"identifier":"LoggerSet"}},"qualification":null},{"reference":{"otherSlice":4643942544947081026},"usedName":{"typeName":{"identifier":"FileLogSpec"}},"qualification":null},{"reference":{"builtinModule":"GHC.IORef"},"usedName":{"typeName":{"identifier":"IORef"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null},{"reference":{"builtinModule":"GHC.MVar"},"usedName":{"typeName":{"identifier":"MVar"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null}],"fragment":["tryRotate ::\n          LoggerSet -> FileLogSpec -> IORef Int -> MVar () -> IO ()","tryRotate lgrset spec ref mvar = bracket lock unlock rotateFiles\n  where lock = tryTakeMVar mvar\n        unlock Nothing = return ()\n        unlock _ = putMVar mvar ()\n        rotateFiles Nothing = return ()\n        rotateFiles _\n          = do msiz <- getSize\n               case msiz of\n                   Nothing -> writeIORef ref 1000000\n                   Just siz | siz > limit ->\n                              do rotate spec\n                                 renewLoggerSet lgrset\n                                 writeIORef ref $ estimate limit\n                            | otherwise -> do writeIORef ref $ estimate (limit - siz)\n        file = log_file spec\n        limit = log_file_size spec\n        getSize\n          = handle (\\ (SomeException _) -> return Nothing) $\n              do Just . fromIntegral <$> getFileSize file\n        estimate x = fromInteger (x `div` 200)"],"instances":[],"language":{"extensions":["MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}