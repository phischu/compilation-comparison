{"sliceID":7680486597250258513,"uses":[{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null},{"reference":{"builtinModule":"Control.Exception.Base"},"usedName":{"valueName":{"identifier":"catch"}},"qualification":"E"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"liftM"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO.Exception"},"usedName":{"typeName":{"identifier":"IOException"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Nothing"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":">>="}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":">>"}},"qualification":null}],"fragment":["getEntries :: IO a -> IO () -> IO [a]","getEntries getOne atEnd = loop\n  where loop\n          = do vv <- E.catch (liftM Just getOne)\n                       (\\ e -> let _types = e :: IOException in return Nothing)\n               case vv of\n                   Nothing -> return []\n                   Just v -> loop >>= \\ vs -> atEnd >> return (v : vs)"],"instances":[],"language":{"extensions":["DeriveDataTypeable","ForeignFunctionInterface","TypeSynonymInstances","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}