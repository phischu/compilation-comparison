{"sliceID":910673741647367843,"uses":[{"reference":{"otherSlice":4406277257444163371},"usedName":{"constructorName":{"identifier":"Tip"},"constructorTypeName":{"identifier":"Map"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Nothing"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":4406277257444163371},"usedName":{"constructorName":{"identifier":"Bin"},"constructorTypeName":{"identifier":"Map"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"identifier":"compare"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"LT"},"constructorTypeName":{"identifier":"Ordering"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"EQ"},"constructorTypeName":{"identifier":"Ordering"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"GT"},"constructorTypeName":{"identifier":"Ordering"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"typeName":{"identifier":"Ord"}},"qualification":null},{"reference":{"otherSlice":4406277257444163371},"usedName":{"typeName":{"identifier":"Map"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Maybe"}},"qualification":null}],"fragment":["lookupGE :: Ord k => k -> Map k v -> Maybe (k, v)","lookupGE = goNothing\n  where goNothing !_ Tip = Nothing\n        goNothing k (Bin _ kx x l r)\n          = case compare k kx of\n                LT -> goJust k kx x l\n                EQ -> Just (kx, x)\n                GT -> goNothing k r\n        goJust !_ kx' x' Tip = Just (kx', x')\n        goJust k kx' x' (Bin _ kx x l r)\n          = case compare k kx of\n                LT -> goJust k kx x l\n                EQ -> Just (kx, x)\n                GT -> goJust k kx' x' r"],"instances":[],"language":{"extensions":["BangPatterns","PatternGuards","DeriveDataTypeable","StandaloneDeriving","RoleAnnotations","TypeFamilies","MagicHash","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll"],"isInstance":false}}