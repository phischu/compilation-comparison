{"sliceID":3901763073803427925,"uses":[{"reference":{"otherSlice":8956807621460794744},"usedName":{"typeName":{"identifier":"MonadThrow"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Monoid"}},"qualification":null},{"reference":{"otherSlice":7478435946319127512},"usedName":{"typeName":{"identifier":"RWST"}},"qualification":"StrictRWS"},{"reference":{"otherSlice":8956807621460794744},"usedName":{"valueName":{"identifier":"throwM"}},"qualification":null},{"reference":{"otherSlice":3258704534657931563},"usedName":{"valueName":{"identifier":"lift"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null}],"fragment":["instance (MonadThrow m, Monoid w) =>\n         MonadThrow (StrictRWS.RWST r w s m)\n         where\n        throwM e = lift $ throwM e"],"instances":[],"language":{"extensions":["ExistentialQuantification","GeneralizedNewtypeDeriving","RankNTypes","FlexibleInstances","MultiParamTypeClasses","UndecidableInstances","TypeFamilies","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":true}}