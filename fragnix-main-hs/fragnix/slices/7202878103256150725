{"sliceID":7202878103256150725,"uses":[{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Nothing"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"otherSlice":4719170801006655827},"usedName":{"constructorName":{"identifier":"ORspn"},"constructorTypeName":{"identifier":"OutputType"}},"qualification":null},{"reference":{"otherSlice":4041040564016882290},"usedName":{"constructorName":{"identifier":"Context"},"constructorTypeName":{"identifier":"Context"}},"qualification":null},{"reference":{"otherSlice":4041040564016882290},"usedName":{"valueName":{"identifier":"http2settings"}},"qualification":null},{"reference":{"otherSlice":4041040564016882290},"usedName":{"valueName":{"identifier":"outputQ"}},"qualification":null},{"reference":{"otherSlice":4041040564016882290},"usedName":{"valueName":{"identifier":"streamTable"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"otherSlice":6400076285833186274},"usedName":{"valueName":{"identifier":"enablePush"}},"qualification":null},{"reference":{"builtinModule":"Data.Functor"},"usedName":{"valueName":{"operator":"<$>"}},"qualification":null},{"reference":{"builtinModule":"GHC.IORef"},"usedName":{"valueName":{"identifier":"readIORef"}},"qualification":null},{"reference":{"builtinModule":"GHC.Conc.Sync"},"usedName":{"valueName":{"identifier":"newTVarIO"}},"qualification":null},{"reference":{"otherSlice":4719170801006655827},"usedName":{"constructorName":{"identifier":"OWait"},"constructorTypeName":{"identifier":"OutputType"}},"qualification":null},{"reference":{"otherSlice":1125335483618056843},"usedName":{"valueName":{"identifier":"http2dataPushPromise"}},"qualification":null},{"reference":{"builtinModule":"Data.Foldable"},"usedName":{"valueName":{"identifier":"length"}},"qualification":null},{"reference":{"otherSlice":135941937043906956},"usedName":{"valueName":{"identifier":"settingsServerPushLogger"}},"qualification":"S"},{"reference":{"builtinModule":"GHC.Conc.Sync"},"usedName":{"valueName":{"identifier":"atomically"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":4506410967786313778},"usedName":{"valueName":{"identifier":"modifyTVar'"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"builtinModule":"GHC.Conc.Sync"},"usedName":{"valueName":{"identifier":"readTVar"}},"qualification":null},{"reference":{"otherSlice":3328126793074092201},"usedName":{"valueName":{"identifier":"check"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":">="}},"qualification":null},{"reference":{"otherSlice":7887511317965777600},"usedName":{"valueName":{"identifier":"getHTTP2Data"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null},{"reference":{"otherSlice":390113313627528457},"usedName":{"valueName":{"identifier":"promisedFile"}},"qualification":null},{"reference":{"builtinModule":"Control.Exception.Base"},"usedName":{"valueName":{"identifier":"try"}},"qualification":"E"},{"reference":{"otherSlice":8144835655087874660},"usedName":{"valueName":{"identifier":"getFileInfo"}},"qualification":null},{"reference":{"builtinModule":"Data.Either"},"usedName":{"constructorName":{"identifier":"Left"},"constructorTypeName":{"identifier":"Either"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO.Exception"},"usedName":{"typeName":{"identifier":"IOException"}},"qualification":"E"},{"reference":{"builtinModule":"Data.Either"},"usedName":{"constructorName":{"identifier":"Right"},"constructorTypeName":{"identifier":"Either"}},"qualification":null},{"reference":{"otherSlice":6031488408124747280},"usedName":{"constructorName":{"identifier":"FileInfo"},"constructorTypeName":{"identifier":"FileInfo"}},"qualification":null},{"reference":{"otherSlice":6400076285833186274},"usedName":{"valueName":{"identifier":"initialWindowSize"}},"qualification":null},{"reference":{"otherSlice":390113313627528457},"usedName":{"valueName":{"identifier":"promisedWeight"}},"qualification":null},{"reference":{"otherSlice":1072009818166860275},"usedName":{"valueName":{"identifier":"defaultPriority"}},"qualification":null},{"reference":{"otherSlice":6159534039212393727},"usedName":{"valueName":{"identifier":"weight"}},"qualification":null},{"reference":{"otherSlice":7166906186427769224},"usedName":{"valueName":{"identifier":"toPrecedence"}},"qualification":null},{"reference":{"otherSlice":4929917043873071822},"usedName":{"valueName":{"identifier":"newPushStream"}},"qualification":null},{"reference":{"otherSlice":2801635089134887690},"usedName":{"valueName":{"identifier":"streamNumber"}},"qualification":null},{"reference":{"otherSlice":3945725472456966921},"usedName":{"valueName":{"identifier":"insert"}},"qualification":null},{"reference":{"otherSlice":1149201892968836616},"usedName":{"valueName":{"identifier":"toHeaderTable"}},"qualification":null},{"reference":{"otherSlice":390113313627528457},"usedName":{"valueName":{"identifier":"promisedResponseHeaders"}},"qualification":null},{"reference":{"builtinModule":"Data.Maybe"},"usedName":{"valueName":{"identifier":"fromJust"}},"qualification":null},{"reference":{"otherSlice":6900724541411838377},"usedName":{"valueName":{"identifier":"getHeaderValue"}},"qualification":null},{"reference":{"otherSlice":2607348377045935225},"usedName":{"valueName":{"identifier":"tokenScheme"}},"qualification":null},{"reference":{"otherSlice":1430370324296942678},"usedName":{"valueName":{"identifier":"tokenHost"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"<|>"}},"qualification":null},{"reference":{"otherSlice":5688761408741024914},"usedName":{"valueName":{"identifier":"tokenAuthority"}},"qualification":null},{"reference":{"otherSlice":390113313627528457},"usedName":{"valueName":{"identifier":"promisedPath"}},"qualification":null},{"reference":{"otherSlice":5726805446657057537},"usedName":{"valueName":{"identifier":"tokenMethod"}},"qualification":null},{"reference":{"otherSlice":5113666361284457320},"usedName":{"valueName":{"identifier":"methodGet"}},"qualification":"H"},{"reference":{"otherSlice":5316150572408627765},"usedName":{"valueName":{"identifier":"tokenPath"}},"qualification":null},{"reference":{"otherSlice":8174925800893531719},"usedName":{"constructorName":{"identifier":"FilePart"},"constructorTypeName":{"identifier":"FilePart"}},"qualification":null},{"reference":{"otherSlice":2350851251923448425},"usedName":{"constructorName":{"identifier":"RspnFile"},"constructorTypeName":{"identifier":"Rspn"}},"qualification":null},{"reference":{"otherSlice":2153270926537072427},"usedName":{"valueName":{"identifier":"ok200"}},"qualification":"H"},{"reference":{"otherSlice":6313969076042486523},"usedName":{"valueName":{"identifier":"tokenLastModified"}},"qualification":null},{"reference":{"otherSlice":3777849094374698407},"usedName":{"valueName":{"identifier":"addContentHeadersForFilePart"}},"qualification":null},{"reference":{"otherSlice":4719170801006655827},"usedName":{"constructorName":{"identifier":"OPush"},"constructorTypeName":{"identifier":"OutputType"}},"qualification":null},{"reference":{"otherSlice":5282735146373457799},"usedName":{"constructorName":{"identifier":"Output"},"constructorTypeName":{"identifier":"Output"}},"qualification":null},{"reference":{"otherSlice":2445850687209195321},"usedName":{"valueName":{"identifier":"enqueueOutput"}},"qualification":null},{"reference":{"otherSlice":4041040564016882290},"usedName":{"typeName":{"identifier":"Context"}},"qualification":null},{"reference":{"otherSlice":135941937043906956},"usedName":{"typeName":{"identifier":"Settings"}},"qualification":"S"},{"reference":{"otherSlice":3763678114540243998},"usedName":{"typeName":{"identifier":"StreamId"}},"qualification":null},{"reference":{"otherSlice":749801687180271456},"usedName":{"typeName":{"identifier":"ValueTable"}},"qualification":null},{"reference":{"otherSlice":9025559142516147699},"usedName":{"typeName":{"identifier":"Request"}},"qualification":null},{"reference":{"otherSlice":8144835655087874660},"usedName":{"typeName":{"identifier":"InternalInfo"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":1125335483618056843},"usedName":{"typeName":{"identifier":"HTTP2Data"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null},{"reference":{"otherSlice":4719170801006655827},"usedName":{"typeName":{"identifier":"OutputType"}},"qualification":null}],"fragment":["pushStream ::\n           Context ->\n             S.Settings ->\n               StreamId ->\n                 ValueTable ->\n                   Request ->\n                     InternalInfo -> Maybe HTTP2Data -> IO (OutputType, IO ())","pushStream _ _ _ _ _ _ Nothing = return (ORspn, return ())\npushStream ctx@Context{http2settings, outputQ, streamTable}\n  settings pid reqvt req ii (Just h2d)\n  | len == 0 = return (ORspn, return ())\n  | otherwise =\n    do pushable <- enablePush <$> readIORef http2settings\n       if pushable then\n         do tvar <- newTVarIO 0\n            lim <- push tvar pps0 0\n            if lim == 0 then return (ORspn, return ()) else\n              return (OWait, waiter lim tvar)\n         else return (ORspn, return ())\n  where !pps0 = http2dataPushPromise h2d\n        !len = length pps0\n        !pushLogger = S.settingsServerPushLogger settings\n        increment tvar = atomically $ modifyTVar' tvar (+ 1)\n        waiter lim tvar\n          = atomically $\n              do n <- readTVar tvar\n                 check (n >= lim)\n        !h2data = getHTTP2Data req\n        push _ [] !n = return (n :: Int)\n        push tvar (pp : pps) !n\n          = do let !file = promisedFile pp\n               efinfo <- E.try $ getFileInfo ii file\n               case efinfo of\n                   Left (_ex :: E.IOException) -> push tvar pps n\n                   Right (FileInfo _ size _ date) -> do ws <- initialWindowSize <$>\n                                                                readIORef http2settings\n                                                        let !w = promisedWeight pp\n                                                            !pri = defaultPriority{weight = w}\n                                                            !pre = toPrecedence pri\n                                                        strm <- newPushStream ctx ws pre\n                                                        let !sid = streamNumber strm\n                                                        insert streamTable sid strm\n                                                        (ths0, vt) <- toHeaderTable\n                                                                        (promisedResponseHeaders pp)\n                                                        let !scheme\n                                                              = fromJust $\n                                                                  getHeaderValue tokenScheme reqvt\n                                                            !auth\n                                                              = fromJust\n                                                                  (getHeaderValue tokenHost reqvt\n                                                                     <|>\n                                                                     getHeaderValue tokenAuthority\n                                                                       reqvt)\n                                                            !path = promisedPath pp\n                                                            !promisedRequest\n                                                              = [(tokenMethod, H.methodGet),\n                                                                 (tokenScheme, scheme),\n                                                                 (tokenAuthority, auth),\n                                                                 (tokenPath, path)]\n                                                            !part = FilePart 0 size size\n                                                            !rsp\n                                                              = RspnFile H.ok200 (ths, vt) file\n                                                                  (Just part)\n                                                            !ths\n                                                              = (tokenLastModified, date) :\n                                                                  addContentHeadersForFilePart ths0\n                                                                    part\n                                                        pushLogger req path size\n                                                        let !ot = OPush promisedRequest pid\n                                                            !out\n                                                              = Output strm rsp ii (increment tvar)\n                                                                  h2data\n                                                                  ot\n                                                        enqueueOutput outputQ out\n                                                        push tvar pps (n + 1)"],"instances":[],"language":{"extensions":["NamedFieldPuns","PatternGuards","ScopedTypeVariables","OverloadedStrings","BangPatterns","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll"],"isInstance":false}}