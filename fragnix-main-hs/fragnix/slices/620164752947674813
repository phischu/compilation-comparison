{"sliceID":620164752947674813,"uses":[{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"map"}},"qualification":"L"},{"reference":{"otherSlice":3835980439088584228},"usedName":{"constructorName":{"identifier":"Chunk"},"constructorTypeName":{"identifier":"Text"}},"qualification":null},{"reference":{"otherSlice":400033489728798890},"usedName":{"valueName":{"identifier":"pack"}},"qualification":"T"},{"reference":{"otherSlice":3835980439088584228},"usedName":{"constructorName":{"identifier":"Empty"},"constructorTypeName":{"identifier":"Text"}},"qualification":null},{"reference":{"builtinModule":"Data.List"},"usedName":{"valueName":{"identifier":"transpose"}},"qualification":"L"},{"reference":{"otherSlice":7310166704595832661},"usedName":{"valueName":{"identifier":"unpack"}},"qualification":null},{"reference":{"otherSlice":3835980439088584228},"usedName":{"typeName":{"identifier":"Text"}},"qualification":null}],"fragment":["transpose :: [Text] -> [Text]","transpose ts\n  = L.map (\\ ss -> Chunk (T.pack ss) Empty)\n      (L.transpose (L.map unpack ts))"],"instances":[],"language":{"extensions":["BangPatterns","MagicHash","TypeFamilies","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}