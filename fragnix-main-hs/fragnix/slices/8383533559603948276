{"sliceID":8383533559603948276,"uses":[{"reference":{"otherSlice":5593256030588294071},"usedName":{"typeName":{"identifier":"IsRecord"}},"qualification":null},{"reference":{"otherSlice":6439415760726994023},"usedName":{"typeName":{"identifier":"ConsFromJSON'"}},"qualification":null},{"reference":{"otherSlice":2770175426886320111},"usedName":{"typeName":{"identifier":"ConsFromJSON"}},"qualification":null},{"reference":{"otherSlice":2770175426886320111},"usedName":{"valueName":{"identifier":"consParseJSON"}},"qualification":null},{"reference":{"otherSlice":4512247588159674237},"usedName":{"valueName":{"identifier":"unwrapUnaryRecords"}},"qualification":null},{"reference":{"otherSlice":5593256030588294071},"usedName":{"valueName":{"identifier":"isUnary"}},"qualification":null},{"reference":{"builtinModule":"GHC.Err"},"usedName":{"valueName":{"identifier":"undefined"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"True"},"constructorTypeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"otherSlice":684351644151123126},"usedName":{"valueName":{"identifier":"object"}},"qualification":null},{"reference":{"otherSlice":5420555374589246121},"usedName":{"valueName":{"identifier":"pack"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Nothing"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":3072094497983792896},"usedName":{"valueName":{"identifier":"unTagged"}},"qualification":null},{"reference":{"otherSlice":3072094497983792896},"usedName":{"typeName":{"identifier":"Tagged"}},"qualification":null},{"reference":{"otherSlice":7695297180430348214},"usedName":{"typeName":{"identifier":"Parser"}},"qualification":null},{"reference":{"otherSlice":6439415760726994023},"usedName":{"valueName":{"identifier":"consParseJSON'"}},"qualification":null}],"fragment":["instance (IsRecord f isRecord, ConsFromJSON' arity f isRecord) =>\n         ConsFromJSON arity f\n         where\n        consParseJSON opts fargs v\n          = let (v2, lab)\n                  = case (unwrapUnaryRecords opts, isUnary (undefined :: f a)) of\n                        (True, True) -> (object [(pack \"dummy\", v)], Just $ pack \"dummy\")\n                        _ -> (v, Nothing)\n              in\n              (unTagged :: Tagged isRecord (Parser (f a)) -> Parser (f a)) $\n                consParseJSON' opts fargs lab v2"],"instances":[],"language":{"extensions":["DataKinds","DefaultSignatures","FlexibleContexts","FlexibleInstances","GADTs","MultiParamTypeClasses","NamedFieldPuns","OverloadedStrings","RecordWildCards","ScopedTypeVariables","TypeOperators","TypeSynonymInstances","UndecidableInstances","ViewPatterns","PolyKinds","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":true}}