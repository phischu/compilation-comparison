{"sliceID":933454832092199050,"uses":[{"reference":{"builtinModule":"GHC.IORef"},"usedName":{"valueName":{"identifier":"newIORef"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":5776853422894622234},"usedName":{"constructorName":{"identifier":"WTBWorking"},"constructorTypeName":{"identifier":"WTB"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"id"}},"qualification":null},{"reference":{"builtinModule":"GHC.Int"},"usedName":{"typeName":{"identifier":"Int64"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"GHC.IORef"},"usedName":{"valueName":{"identifier":"readIORef"}},"qualification":null},{"reference":{"builtinModule":"GHC.Err"},"usedName":{"valueName":{"identifier":"error"}},"qualification":null},{"reference":{"otherSlice":5776853422894622234},"usedName":{"constructorName":{"identifier":"WTBDone"},"constructorTypeName":{"identifier":"WTB"}},"qualification":null},{"reference":{"otherSlice":7459617743278403755},"usedName":{"valueName":{"identifier":"empty"}},"qualification":"S"},{"reference":{"otherSlice":8590052843083372983},"usedName":{"valueName":{"identifier":"readSource"}},"qualification":null},{"reference":{"builtinModule":"Data.IORef"},"usedName":{"valueName":{"identifier":"atomicModifyIORef'"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"builtinModule":"GHC.Real"},"usedName":{"valueName":{"identifier":"fromIntegral"}},"qualification":null},{"reference":{"otherSlice":7235567377809295464},"usedName":{"valueName":{"identifier":"length"}},"qualification":"S"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":">"}},"qualification":null},{"reference":{"otherSlice":7202692338078551997},"usedName":{"valueName":{"identifier":"null"}},"qualification":"S"},{"reference":{"builtinModule":"GHC.IORef"},"usedName":{"valueName":{"identifier":"writeIORef"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"False"},"constructorTypeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"otherSlice":8941628391343359574},"usedName":{"valueName":{"identifier":"findBound"}},"qualification":null},{"reference":{"otherSlice":500040784367800656},"usedName":{"constructorName":{"identifier":"FoundBound"},"constructorTypeName":{"identifier":"Bound"}},"qualification":null},{"reference":{"otherSlice":5028729795332138192},"usedName":{"valueName":{"identifier":"killCRLF"}},"qualification":null},{"reference":{"otherSlice":1516653961371021261},"usedName":{"valueName":{"identifier":"leftover"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"True"},"constructorTypeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"otherSlice":500040784367800656},"usedName":{"constructorName":{"identifier":"NoBound"},"constructorTypeName":{"identifier":"Bound"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"identifier":"not"}},"qualification":null},{"reference":{"otherSlice":7202692338078551997},"usedName":{"valueName":{"identifier":"null"}},"qualification":"S8"},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"&&"}},"qualification":null},{"reference":{"otherSlice":8292580923705814180},"usedName":{"valueName":{"identifier":"last"}},"qualification":"S8"},{"reference":{"builtinModule":"Data.Foldable"},"usedName":{"valueName":{"identifier":"elem"}},"qualification":null},{"reference":{"otherSlice":3681333600918143498},"usedName":{"valueName":{"identifier":"splitAt"}},"qualification":"S"},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"-"}},"qualification":null},{"reference":{"otherSlice":6987230544343436129},"usedName":{"valueName":{"identifier":"append"}},"qualification":"S"},{"reference":{"otherSlice":500040784367800656},"usedName":{"constructorName":{"identifier":"PartialBound"},"constructorTypeName":{"identifier":"Bound"}},"qualification":null},{"reference":{"otherSlice":4010822550476529195},"usedName":{"typeName":{"identifier":"ByteString"}},"qualification":"S"},{"reference":{"otherSlice":1799715785845657478},"usedName":{"typeName":{"identifier":"Source"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Bool"}},"qualification":null}],"fragment":["wrapTillBound ::\n              S.ByteString ->\n                Source -> Maybe Int64 -> IO (IO S.ByteString, IO (Bool, Int64))","wrapTillBound bound src max'\n  = do ref <- newIORef $ WTBWorking id\n       sref <- newIORef (0 :: Int64)\n       return (go ref sref, final ref sref)\n  where final ref sref\n          = do x <- readIORef ref\n               case x of\n                   WTBWorking _ -> error \"wrapTillBound did not finish\"\n                   WTBDone y -> do siz <- readIORef sref\n                                   return (y, siz)\n        go ref sref\n          = do state <- readIORef ref\n               case state of\n                   WTBDone _ -> return S.empty\n                   WTBWorking front -> do bs <- readSource src\n                                          cur <- atomicModifyIORef' sref $\n                                                   \\ cur ->\n                                                     let new = cur + fromIntegral (S.length bs) in\n                                                       (new, new)\n                                          case max' of\n                                              Just max'' | cur > max'' ->\n                                                           error \"Maximum size exceeded\"\n                                              _ -> return ()\n                                          if S.null bs then\n                                            do writeIORef ref $ WTBDone False\n                                               return $ front bs\n                                            else push $ front bs\n          where push bs\n                  = do case findBound bound bs of\n                           FoundBound before after -> do let before' = killCRLF before\n                                                         leftover src after\n                                                         writeIORef ref $ WTBDone True\n                                                         return before'\n                           NoBound -> do let (toEmit, front')\n                                               = if\n                                                   not (S8.null bs) &&\n                                                     S8.last bs `elem` ['\\r', '\\n']\n                                                   then\n                                                   let (x, y) = S.splitAt (S.length bs - 2) bs in\n                                                     (x, S.append y)\n                                                   else (bs, id)\n                                         writeIORef ref $ WTBWorking front'\n                                         if S.null toEmit then go ref sref else return toEmit\n                           PartialBound -> do writeIORef ref $ WTBWorking $ S.append bs\n                                              go ref sref"],"instances":[],"language":{"extensions":["OverloadedStrings","ExistentialQuantification","PatternGuards","TypeFamilies","RankNTypes","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll"],"isInstance":false}}