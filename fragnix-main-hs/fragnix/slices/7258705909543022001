{"sliceID":7258705909543022001,"uses":[{"reference":{"builtinModule":"GHC.Generics"},"usedName":{"typeName":{"identifier":"Selector"}},"qualification":null},{"reference":{"otherSlice":8771569589911656856},"usedName":{"typeName":{"identifier":"GFromJSON"}},"qualification":null},{"reference":{"otherSlice":4766892469956528125},"usedName":{"typeName":{"identifier":"FromRecord"}},"qualification":null},{"reference":{"builtinModule":"GHC.Generics"},"usedName":{"typeName":{"identifier":"S1"}},"qualification":null},{"reference":{"otherSlice":4766892469956528125},"usedName":{"valueName":{"identifier":"parseRecord"}},"qualification":null},{"reference":{"builtinModule":"Data.Maybe"},"usedName":{"valueName":{"identifier":"maybe"}},"qualification":null},{"reference":{"otherSlice":2242867164640825511},"usedName":{"valueName":{"identifier":"notFound"}},"qualification":null},{"reference":{"otherSlice":8771569589911656856},"usedName":{"valueName":{"identifier":"gParseJSON"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null},{"reference":{"otherSlice":4884679441121001069},"usedName":{"valueName":{"identifier":"lookup"}},"qualification":"H"},{"reference":{"otherSlice":400033489728798890},"usedName":{"valueName":{"identifier":"pack"}},"qualification":null},{"reference":{"otherSlice":5961014460351920517},"usedName":{"valueName":{"identifier":"fieldLabelModifier"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"GHC.Generics"},"usedName":{"valueName":{"identifier":"selName"}},"qualification":null},{"reference":{"builtinModule":"GHC.Err"},"usedName":{"valueName":{"identifier":"undefined"}},"qualification":null}],"fragment":["instance (Selector s, GFromJSON a) => FromRecord (S1 s a) where\n        parseRecord opts\n          = maybe (notFound label) (gParseJSON opts) . H.lookup (pack label)\n          where label\n                  = fieldLabelModifier opts $ selName (undefined :: t s a p)\n        \n        {-# INLINE parseRecord #-}"],"instances":[],"language":{"extensions":["DefaultSignatures","EmptyDataDecls","FlexibleInstances","FunctionalDependencies","KindSignatures","OverlappingInstances","ScopedTypeVariables","TypeOperators","UndecidableInstances","ViewPatterns","NamedFieldPuns","FlexibleContexts","PatternGuards","RecordWildCards","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll"],"isInstance":true}}