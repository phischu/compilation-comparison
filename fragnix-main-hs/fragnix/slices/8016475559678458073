{"sliceID":8016475559678458073,"uses":[{"reference":{"otherSlice":2395809604474213102},"usedName":{"constructorName":{"identifier":"C"},"constructorTypeName":{"identifier":"Get"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":8017170790354418478},"usedName":{"valueName":{"identifier":"concat"}},"qualification":"B"},{"reference":{"otherSlice":8642306666063513779},"usedName":{"typeName":{"identifier":"ByteString"}},"qualification":"B"},{"reference":{"otherSlice":2395809604474213102},"usedName":{"typeName":{"identifier":"Get"}},"qualification":null}],"fragment":["pushBack :: [B.ByteString] -> Get ()","pushBack [] = C $ \\ inp ks -> ks inp ()\npushBack bs = C $ \\ inp ks -> ks (B.concat (inp : bs)) ()"],"instances":[],"language":{"extensions":["RankNTypes","MagicHash","BangPatterns","TypeFamilies","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}