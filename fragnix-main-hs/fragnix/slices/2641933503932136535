{"sliceID":2641933503932136535,"uses":[{"reference":{"otherSlice":3496720045863107214},"usedName":{"valueName":{"identifier":"streamingProcess"}},"qualification":null},{"reference":{"builtinModule":"Control.Monad.IO.Class"},"usedName":{"valueName":{"identifier":"liftIO"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":3913745454477490870},"usedName":{"valueName":{"identifier":"waitForStreamingProcess"}},"qualification":null},{"reference":{"builtinModule":"Control.Exception.Base"},"usedName":{"valueName":{"identifier":"finally"}},"qualification":null},{"reference":{"otherSlice":2460552995185196665},"usedName":{"valueName":{"identifier":"closeStreamingProcessHandle"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"builtinModule":"GHC.IO.Exception"},"usedName":{"constructorName":{"identifier":"ExitSuccess"},"constructorTypeName":{"identifier":"ExitCode"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO"},"usedName":{"valueName":{"identifier":"throwIO"}},"qualification":null},{"reference":{"otherSlice":5593059449417261420},"usedName":{"constructorName":{"identifier":"ProcessExitedUnsuccessfully"},"constructorTypeName":{"identifier":"ProcessExitedUnsuccessfully"}},"qualification":null},{"reference":{"otherSlice":7140860429684256485},"usedName":{"typeName":{"identifier":"InputSource"}},"qualification":null},{"reference":{"otherSlice":8736707139686016472},"usedName":{"typeName":{"identifier":"OutputSink"}},"qualification":null},{"reference":{"builtinModule":"Control.Monad.IO.Class"},"usedName":{"typeName":{"identifier":"MonadIO"}},"qualification":null},{"reference":{"otherSlice":8672789154543806589},"usedName":{"typeName":{"identifier":"CreateProcess"}},"qualification":null}],"fragment":["withCheckedProcess ::\n                     (InputSource stdin, OutputSink stderr, OutputSink stdout,\n                      MonadIO m) =>\n                     CreateProcess -> (stdin -> stdout -> stderr -> m b) -> m b","withCheckedProcess cp f\n  = do (x, y, z, sph) <- streamingProcess cp\n       res <- f x y z\n       liftIO $\n         do ec <- waitForStreamingProcess sph `finally`\n                    closeStreamingProcessHandle sph\n            if ec == ExitSuccess then return res else\n              throwIO $ ProcessExitedUnsuccessfully cp ec"],"instances":[],"language":{"extensions":["DeriveDataTypeable","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}