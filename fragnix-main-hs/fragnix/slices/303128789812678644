{"sliceID":303128789812678644,"uses":[{"reference":{"otherSlice":956119367104656861},"usedName":{"constructorName":{"identifier":"AccumT"},"constructorTypeName":{"identifier":"AccumT"}},"qualification":null},{"reference":{"otherSlice":994315449851869449},"usedName":{"constructorName":{"identifier":"StateT"},"constructorTypeName":{"identifier":"StateT"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"fmap"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"mappend"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Functor"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Monoid"}},"qualification":null},{"reference":{"otherSlice":956119367104656861},"usedName":{"typeName":{"identifier":"AccumT"}},"qualification":null},{"reference":{"otherSlice":994315449851869449},"usedName":{"typeName":{"identifier":"StateT"}},"qualification":null}],"fragment":["accumToStateT ::\n                (Functor m, Monoid s) => AccumT s m a -> StateT s m a","accumToStateT (AccumT f)\n  = StateT $ \\ w -> fmap (\\ ~(a, w') -> (a, w `mappend` w')) (f w)"],"instances":[],"language":{"extensions":["AutoDeriveTypeable","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}