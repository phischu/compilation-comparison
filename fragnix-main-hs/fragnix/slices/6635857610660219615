{"sliceID":6635857610660219615,"uses":[{"reference":{"otherSlice":5841983516172584459},"usedName":{"constructorName":{"identifier":"Bundle"},"constructorTypeName":{"identifier":"Bundle"}},"qualification":null},{"reference":{"otherSlice":5841983516172584459},"usedName":{"valueName":{"identifier":"sElems"}},"qualification":null},{"reference":{"otherSlice":1254073128444822395},"usedName":{"constructorName":{"identifier":"Stream"},"constructorTypeName":{"identifier":"Stream"}},"qualification":null},{"reference":{"builtinModule":"Data.Either"},"usedName":{"constructorName":{"identifier":"Left"},"constructorTypeName":{"identifier":"Either"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Nothing"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":8855860816860663679},"usedName":{"constructorName":{"identifier":"Unknown"},"constructorTypeName":{"identifier":"Size"}},"qualification":null},{"reference":{"otherSlice":2120320550836080743},"usedName":{"constructorName":{"identifier":"Yield"},"constructorTypeName":{"identifier":"Step"}},"qualification":null},{"reference":{"otherSlice":8572689894313737623},"usedName":{"valueName":{"identifier":"basicLength"}},"qualification":null},{"reference":{"builtinModule":"GHC.Prim"},"usedName":{"valueName":{"identifier":"seq"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"otherSlice":2120320550836080743},"usedName":{"constructorName":{"identifier":"Skip"},"constructorTypeName":{"identifier":"Step"}},"qualification":null},{"reference":{"builtinModule":"Data.Either"},"usedName":{"constructorName":{"identifier":"Right"},"constructorTypeName":{"identifier":"Either"}},"qualification":null},{"reference":{"otherSlice":2120320550836080743},"usedName":{"constructorName":{"identifier":"Done"},"constructorTypeName":{"identifier":"Step"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":">="}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"otherSlice":8572689894313737623},"usedName":{"valueName":{"identifier":"basicUnsafeIndexM"}},"qualification":null},{"reference":{"otherSlice":7018641490882664076},"usedName":{"constructorName":{"identifier":"Box"},"constructorTypeName":{"identifier":"Box"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"otherSlice":6147061234059741725},"usedName":{"constructorName":{"identifier":"Chunk"},"constructorTypeName":{"identifier":"Chunk"}},"qualification":null},{"reference":{"otherSlice":5390831090808384141},"usedName":{"valueName":{"identifier":"check"}},"qualification":"Ck"},{"reference":{"otherSlice":4956884951746098628},"usedName":{"constructorName":{"identifier":"Internal"},"constructorTypeName":{"identifier":"Checks"}},"qualification":"Ck"},{"reference":{"otherSlice":4641953017354057066},"usedName":{"valueName":{"identifier":"basicLength"}},"qualification":"M"},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":8572689894313737623},"usedName":{"valueName":{"identifier":"basicUnsafeCopy"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Monad"}},"qualification":null},{"reference":{"otherSlice":8572689894313737623},"usedName":{"typeName":{"identifier":"Vector"}},"qualification":null},{"reference":{"otherSlice":5841983516172584459},"usedName":{"typeName":{"identifier":"Bundle"}},"qualification":null}],"fragment":["concatVectors ::\n                (Monad m, Vector v a) => Bundle m u (v a) -> Bundle m v a","concatVectors Bundle{sElems = Stream step t}\n  = Bundle (Stream pstep (Left t)) (Stream vstep t) Nothing Unknown\n  where pstep (Left s)\n          = do r <- step s\n               case r of\n                   Yield v s' -> basicLength v `seq` return (Skip (Right (v, 0, s')))\n                   Skip s' -> return (Skip (Left s'))\n                   Done -> return Done\n        pstep (Right (v, i, s))\n          | i >= basicLength v = return (Skip (Left s))\n          | otherwise =\n            case basicUnsafeIndexM v i of\n                Box x -> return (Yield x (Right (v, i + 1, s)))\n        vstep s\n          = do r <- step s\n               case r of\n                   Yield v s' -> return\n                                   (Yield\n                                      (Chunk (basicLength v)\n                                         (\\ mv ->\n                                            ((Ck.check \"Data/Vector/Fusion/Bundle/Monadic.hs\" 1087)\n                                               Ck.Internal)\n                                              \"concatVectors\"\n                                              \"length mismatch\"\n                                              (M.basicLength mv == basicLength v)\n                                              $ basicUnsafeCopy mv v))\n                                      s')\n                   Skip s' -> return (Skip s')\n                   Done -> return Done"],"instances":[],"language":{"extensions":["ExistentialQuantification","MultiParamTypeClasses","FlexibleInstances","Rank2Types","BangPatterns","KindSignatures","GADTs","ScopedTypeVariables","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}