{"sliceID":8006474727197343629,"uses":[{"reference":{"builtinModule":"Data.Either"},"usedName":{"typeName":{"identifier":"Either"}},"qualification":null},{"reference":{"otherSlice":201949249242916638},"usedName":{"typeName":{"identifier":"Except"}},"qualification":null},{"reference":{"otherSlice":1241761596975731733},"usedName":{"constructorName":{"identifier":"ExceptT"},"constructorTypeName":{"identifier":"ExceptT"}},"qualification":null},{"reference":{"builtinModule":"Data.Functor.Identity"},"usedName":{"constructorName":{"identifier":"Identity"},"constructorTypeName":{"identifier":"Identity"}},"qualification":null}],"fragment":["except :: Either e a -> Except e a","except m = ExceptT (Identity m)"],"instances":[],"language":{"extensions":["AutoDeriveTypeable","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}