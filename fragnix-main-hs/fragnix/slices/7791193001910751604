{"sliceID":7791193001910751604,"uses":[{"reference":{"otherSlice":6258463563638113276},"usedName":{"valueName":{"identifier":"length"}},"qualification":"S"},{"reference":{"otherSlice":3110453240036143100},"usedName":{"valueName":{"identifier":"lazyBreak"}},"qualification":null},{"reference":{"otherSlice":1601910010673324444},"usedName":{"valueName":{"identifier":"ldrop"}},"qualification":null},{"reference":{"otherSlice":8642306666063513779},"usedName":{"typeName":{"identifier":"ByteString"}},"qualification":"S"}],"fragment":["lazySplitDrop :: S.ByteString -> [S.ByteString] -> [[S.ByteString]]","lazySplitDrop pat = splitter\n  where !patLen = S.length pat\n        breaker = lazyBreak pat\n        splitter [] = []\n        splitter strs = splitter' strs\n        splitter' [] = [[]]\n        splitter' strs\n          = case breaker strs of\n                (pre, mtch) -> pre :\n                                 case mtch of\n                                     [] -> []\n                                     _ -> splitter' (ldrop patLen mtch)"],"instances":[],"language":{"extensions":["BangPatterns","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}