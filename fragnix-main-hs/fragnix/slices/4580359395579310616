{"sliceID":4580359395579310616,"uses":[{"reference":{"otherSlice":1643766202226175849},"usedName":{"constructorName":{"identifier":"RWST"},"constructorTypeName":{"identifier":"RWST"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":1643766202226175849},"usedName":{"valueName":{"identifier":"runRWST"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"Data.Monoid"},"usedName":{"typeName":{"identifier":"Monoid"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Monad"}},"qualification":null},{"reference":{"otherSlice":1643766202226175849},"usedName":{"typeName":{"identifier":"RWST"}},"qualification":null}],"fragment":["pass ::\n       (Monoid w, Monad m) => RWST r w s m (a, w -> w) -> RWST r w s m a","pass m\n  = RWST $\n      \\ r s ->\n        do ~((a, f), s', w) <- runRWST m r s\n           return (a, s', f w)"],"instances":[],"language":{"extensions":["MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}