{"sliceID":7691665640014514822,"uses":[{"reference":{"builtinModule":"Data.String"},"usedName":{"valueName":{"identifier":"fromString"}},"qualification":"String"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"GHC.Unicode"},"usedName":{"valueName":{"identifier":"toLower"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"String"}},"qualification":null},{"reference":{"otherSlice":814488433478767140},"usedName":{"typeName":{"identifier":"CI"}},"qualification":"CI"},{"reference":{"otherSlice":8642306666063513779},"usedName":{"typeName":{"identifier":"ByteString"}},"qualification":"B"}],"fragment":["cleanupVarName :: String -> CI.CI B.ByteString","cleanupVarName \"CONTENT_TYPE\" = \"Content-Type\"\ncleanupVarName \"CONTENT_LENGTH\" = \"Content-Length\"\ncleanupVarName \"SCRIPT_NAME\" = \"CGI-Script-Name\"\ncleanupVarName s\n  = case s of\n        'H' : ('T' : ('T' : ('P' : ('_' : (a : as))))) -> String.fromString\n                                                            $ a : helper' as\n        _ -> String.fromString s\n  where helper' ('_' : (x : rest)) = '-' : x : helper' rest\n        helper' (x : rest) = toLower x : helper' rest\n        helper' [] = []"],"instances":[],"language":{"extensions":["OverloadedStrings","RankNTypes","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}