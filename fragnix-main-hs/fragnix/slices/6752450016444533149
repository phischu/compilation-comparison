{"sliceID":6752450016444533149,"uses":[{"reference":{"otherSlice":3313074552973285735},"usedName":{"typeName":{"identifier":"UnzipWith"}},"qualification":null},{"reference":{"otherSlice":2103754850612341338},"usedName":{"typeName":{"identifier":"FingerTree"}},"qualification":null},{"reference":{"otherSlice":3313074552973285735},"usedName":{"valueName":{"identifier":"unzipWith"}},"qualification":null},{"reference":{"otherSlice":2103754850612341338},"usedName":{"constructorName":{"identifier":"EmptyT"},"constructorTypeName":{"identifier":"FingerTree"}},"qualification":null},{"reference":{"otherSlice":2103754850612341338},"usedName":{"constructorName":{"identifier":"Single"},"constructorTypeName":{"identifier":"FingerTree"}},"qualification":null},{"reference":{"otherSlice":2103754850612341338},"usedName":{"constructorName":{"identifier":"Deep"},"constructorTypeName":{"identifier":"FingerTree"}},"qualification":null}],"fragment":["instance UnzipWith FingerTree where\n        unzipWith _ EmptyT = (EmptyT, EmptyT)\n        unzipWith f (Single x)\n          = case f x of\n                (x1, x2) -> (Single x1, Single x2)\n        unzipWith f (Deep s pr m sf)\n          = case unzipWith f pr of\n                (pr1, pr2) -> case unzipWith f sf of\n                                  (sf1, sf2) -> case unzipWith (unzipWith f) m of\n                                                    ~(m1, m2) -> (Deep s pr1 m1 sf1,\n                                                                  Deep s pr2 m2 sf2)"],"instances":[],"language":{"extensions":["BangPatterns","DeriveDataTypeable","StandaloneDeriving","FlexibleInstances","ScopedTypeVariables","DeriveGeneric","TypeFamilies","PatternSynonyms","ViewPatterns","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":true}}