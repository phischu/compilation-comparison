{"sliceID":3810190760330731973,"uses":[{"reference":{"otherSlice":8434830524291201891},"usedName":{"valueName":{"identifier":"control"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"Control.Exception.Base"},"usedName":{"valueName":{"identifier":"bracket"}},"qualification":"E"},{"reference":{"otherSlice":2946060544503603071},"usedName":{"valueName":{"identifier":"restoreM"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":">>="}},"qualification":null},{"reference":{"otherSlice":2946060544503603071},"usedName":{"typeName":{"identifier":"MonadBaseControl"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null}],"fragment":["bracket ::\n          MonadBaseControl IO m => m a -> (a -> m b) -> (a -> m c) -> m c","bracket before after thing\n  = control $\n      \\ runInIO ->\n        E.bracket (runInIO before)\n          (\\ st -> runInIO $ restoreM st >>= after)\n          (\\ st -> runInIO $ restoreM st >>= thing)"],"instances":[],"language":{"extensions":["NoImplicitPrelude","ExistentialQuantification","FlexibleContexts","RankNTypes","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}