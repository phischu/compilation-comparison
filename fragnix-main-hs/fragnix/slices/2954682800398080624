{"sliceID":2954682800398080624,"uses":[{"reference":{"builtinModule":"Data.Maybe"},"usedName":{"constructorName":{"identifier":"Nothing"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"Data.Maybe"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"++"}},"qualification":null},{"reference":{"builtinModule":"GHC.List"},"usedName":{"valueName":{"identifier":"head"}},"qualification":null},{"reference":{"builtinModule":"GHC.List"},"usedName":{"valueName":{"identifier":"reverse"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"otherSlice":2125255218898206104},"usedName":{"valueName":{"identifier":"moduleOpen"}},"qualification":null},{"reference":{"otherSlice":1122256014095058987},"usedName":{"valueName":{"identifier":"moduleClose"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"Data.Maybe"},"usedName":{"typeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"String"}},"qualification":null},{"reference":{"otherSlice":4140518647441012974},"usedName":{"typeName":{"identifier":"RTLDFlags"}},"qualification":null},{"reference":{"otherSlice":4740102147680207342},"usedName":{"typeName":{"identifier":"Module"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null}],"fragment":["withModule ::\n           Maybe String -> String -> [RTLDFlags] -> (Module -> IO a) -> IO a","withModule mdir file flags p\n  = do let modPath\n             = case mdir of\n                   Nothing -> file\n                   Just dir -> dir ++\n                                 if ((head (reverse dir)) == '/') then file else ('/' : file)\n       modu <- moduleOpen modPath flags\n       result <- p modu\n       moduleClose modu\n       return result"],"instances":[],"language":{"extensions":["MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}