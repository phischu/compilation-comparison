{"sliceID":6128398835684094357,"uses":[{"reference":{"builtinModule":"Data.Either"},"usedName":{"valueName":{"identifier":"either"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"id"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null},{"reference":{"otherSlice":8933489625380502371},"usedName":{"valueName":{"identifier":"toBoundedRealFloat"}},"qualification":null},{"reference":{"builtinModule":"GHC.Float"},"usedName":{"typeName":{"identifier":"RealFloat"}},"qualification":null},{"reference":{"otherSlice":655943511058533134},"usedName":{"typeName":{"identifier":"Scientific"}},"qualification":null}],"fragment":["toRealFloat :: (RealFloat a) => Scientific -> a","toRealFloat = either id id . toBoundedRealFloat"],"instances":[],"language":{"extensions":["DeriveDataTypeable","BangPatterns","ScopedTypeVariables","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}