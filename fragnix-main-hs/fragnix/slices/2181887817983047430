{"sliceID":2181887817983047430,"uses":[{"reference":{"otherSlice":7770701470064099414},"usedName":{"valueName":{"identifier":"withCStringIf"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":1888368554605747765},"usedName":{"valueName":{"identifier":"withSockAddr"}},"qualification":null},{"reference":{"otherSlice":7924847860528087793},"usedName":{"valueName":{"identifier":"c_getnameinfo"}},"qualification":null},{"reference":{"builtinModule":"GHC.Real"},"usedName":{"valueName":{"identifier":"fromIntegral"}},"qualification":null},{"reference":{"otherSlice":3652658590897541874},"usedName":{"valueName":{"identifier":"packBits"}},"qualification":null},{"reference":{"otherSlice":8452893431757198283},"usedName":{"valueName":{"identifier":"niFlagMapping"}},"qualification":null},{"reference":{"builtinModule":"Control.Monad"},"usedName":{"valueName":{"identifier":"liftM"}},"qualification":null},{"reference":{"builtinModule":"Data.Maybe"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"Foreign.C.String"},"usedName":{"valueName":{"identifier":"peekCString"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"Data.Maybe"},"usedName":{"constructorName":{"identifier":"Nothing"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":8063662184868772878},"usedName":{"valueName":{"identifier":"gai_strerror"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO.Exception"},"usedName":{"valueName":{"identifier":"ioError"}},"qualification":null},{"reference":{"builtinModule":"System.IO.Error"},"usedName":{"valueName":{"identifier":"ioeSetErrorString"}},"qualification":null},{"reference":{"builtinModule":"System.IO.Error"},"usedName":{"valueName":{"identifier":"mkIOError"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO.Exception"},"usedName":{"constructorName":{"identifier":"NoSuchThing"},"constructorTypeName":{"identifier":"IOErrorType"}},"qualification":null},{"reference":{"otherSlice":4499104733799293895},"usedName":{"typeName":{"identifier":"NameInfoFlag"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"otherSlice":5051683172608853772},"usedName":{"typeName":{"identifier":"SockAddr"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null},{"reference":{"builtinModule":"Data.Maybe"},"usedName":{"typeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":4885558096967783438},"usedName":{"typeName":{"identifier":"HostName"}},"qualification":null},{"reference":{"otherSlice":7119013459298210253},"usedName":{"typeName":{"identifier":"ServiceName"}},"qualification":null}],"fragment":["getNameInfo ::\n            [NameInfoFlag] ->\n              Bool -> Bool -> SockAddr -> IO (Maybe HostName, Maybe ServiceName)","getNameInfo flags doHost doService addr\n  = withCStringIf doHost (1025) $\n      \\ c_hostlen c_host ->\n        withCStringIf doService (32) $\n          \\ c_servlen c_serv ->\n            do withSockAddr addr $\n                 \\ ptr_addr sz ->\n                   do ret <- c_getnameinfo ptr_addr (fromIntegral sz) c_host c_hostlen\n                               c_serv\n                               c_servlen\n                               (packBits niFlagMapping flags)\n                      case ret of\n                          0 -> do let peekIf doIf c_val\n                                        = if doIf then liftM Just $ peekCString c_val else\n                                            return Nothing\n                                  host <- peekIf doHost c_host\n                                  serv <- peekIf doService c_serv\n                                  return (host, serv)\n                          _ -> do err <- gai_strerror ret\n                                  ioError\n                                    (ioeSetErrorString\n                                       (mkIOError NoSuchThing \"getNameInfo\" Nothing Nothing)\n                                       err)"],"instances":[],"language":{"extensions":["DeriveDataTypeable","ForeignFunctionInterface","TypeSynonymInstances","ScopedTypeVariables","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}