{"sliceID":6553153591992534473,"uses":[{"reference":{"otherSlice":1546470151414195006},"usedName":{"constructorName":{"identifier":"MkSocket"},"constructorTypeName":{"identifier":"Socket"}},"qualification":null},{"reference":{"otherSlice":6366556555504853542},"usedName":{"constructorName":{"identifier":"AF_INET"},"constructorTypeName":{"identifier":"Family"}},"qualification":null},{"reference":{"otherSlice":3812070640366845611},"usedName":{"constructorName":{"identifier":"SockAddrInet"},"constructorTypeName":{"identifier":"SockAddr"}},"qualification":null},{"reference":{"otherSlice":4010172434535953718},"usedName":{"valueName":{"identifier":"accept"}},"qualification":"Socket"},{"reference":{"otherSlice":5615481903305914068},"usedName":{"valueName":{"identifier":"catchIO"}},"qualification":null},{"reference":{"otherSlice":4762044758681717321},"usedName":{"constructorName":{"identifier":"HostEntry"},"constructorTypeName":{"identifier":"HostEntry"}},"qualification":null},{"reference":{"otherSlice":5848994184167923961},"usedName":{"valueName":{"identifier":"getHostByAddr"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"otherSlice":3724129929339548785},"usedName":{"valueName":{"identifier":"inet_ntoa"}},"qualification":null},{"reference":{"otherSlice":2210167494878030646},"usedName":{"valueName":{"identifier":"socketToHandle"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO.IOMode"},"usedName":{"constructorName":{"identifier":"ReadWriteMode"},"constructorTypeName":{"identifier":"IOMode"}},"qualification":null},{"reference":{"otherSlice":6366556555504853542},"usedName":{"constructorName":{"identifier":"AF_INET6"},"constructorTypeName":{"identifier":"Family"}},"qualification":null},{"reference":{"builtinModule":"Data.Maybe"},"usedName":{"valueName":{"identifier":"fromJust"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null},{"reference":{"builtinModule":"Data.Tuple"},"usedName":{"valueName":{"identifier":"fst"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"liftM"}},"qualification":null},{"reference":{"otherSlice":8615221141385225182},"usedName":{"valueName":{"identifier":"getNameInfo"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"True"},"constructorTypeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"False"},"constructorTypeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":3812070640366845611},"usedName":{"constructorName":{"identifier":"SockAddrInet6"},"constructorTypeName":{"identifier":"SockAddr"}},"qualification":null},{"reference":{"builtinModule":"GHC.Show"},"usedName":{"valueName":{"identifier":"show"}},"qualification":null},{"reference":{"otherSlice":3812070640366845611},"usedName":{"constructorName":{"identifier":"SockAddrUnix"},"constructorTypeName":{"identifier":"SockAddr"}},"qualification":null},{"reference":{"otherSlice":3812070640366845611},"usedName":{"constructorName":{"identifier":"SockAddrCan"},"constructorTypeName":{"identifier":"SockAddr"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO.Exception"},"usedName":{"valueName":{"identifier":"ioError"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO.Exception"},"usedName":{"valueName":{"identifier":"userError"}},"qualification":null},{"reference":{"otherSlice":6366556555504853542},"usedName":{"constructorName":{"identifier":"AF_UNIX"},"constructorTypeName":{"identifier":"Family"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"++"}},"qualification":null},{"reference":{"otherSlice":1546470151414195006},"usedName":{"typeName":{"identifier":"Socket"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO.Handle.Types"},"usedName":{"typeName":{"identifier":"Handle"}},"qualification":null},{"reference":{"otherSlice":2265647500502576818},"usedName":{"typeName":{"identifier":"HostName"}},"qualification":null},{"reference":{"otherSlice":1699637328325809020},"usedName":{"typeName":{"identifier":"PortNumber"}},"qualification":null}],"fragment":["accept :: Socket -> IO (Handle, HostName, PortNumber)","accept sock@(MkSocket _ AF_INET _ _ _)\n  = do ~(sock', (SockAddrInet port haddr)) <- Socket.accept sock\n       peer <- catchIO\n                 (do (HostEntry peer _ _ _) <- getHostByAddr AF_INET haddr\n                     return peer)\n                 (\\ _e -> inet_ntoa haddr)\n       handle <- socketToHandle sock' ReadWriteMode\n       return (handle, peer, port)\naccept sock@(MkSocket _ AF_INET6 _ _ _)\n  = do (sock', addr) <- Socket.accept sock\n       peer <- catchIO\n                 ((fromJust . fst) `liftM` getNameInfo [] True False addr)\n                 $\n                 \\ _ ->\n                   case addr of\n                       SockAddrInet _ a -> inet_ntoa a\n                       SockAddrInet6 _ _ a _ -> return (show a)\n                       SockAddrUnix a -> return a\n                       SockAddrCan{} -> ioError $\n                                          userError\n                                            \"Network.accept: peer socket address 'SockAddrCan' not supported on this platform.\"\n       handle <- socketToHandle sock' ReadWriteMode\n       let port\n             = case addr of\n                   SockAddrInet p _ -> p\n                   SockAddrInet6 p _ _ _ -> p\n                   _ -> -1\n       return (handle, peer, port)\naccept sock@(MkSocket _ AF_UNIX _ _ _)\n  = do ~(sock', (SockAddrUnix path)) <- Socket.accept sock\n       handle <- socketToHandle sock' ReadWriteMode\n       return (handle, path, -1)\naccept (MkSocket _ family _ _ _)\n  = ioError $\n      userError $\n        \"Network.accept: address family '\" ++\n          show family ++ \"' not supported.\""],"instances":[],"language":{"extensions":["DeriveDataTypeable","ForeignFunctionInterface","TypeSynonymInstances","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}