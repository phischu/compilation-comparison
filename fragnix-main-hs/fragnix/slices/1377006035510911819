{"sliceID":1377006035510911819,"uses":[{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"when"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":7122437825883484004},"usedName":{"valueName":{"identifier":"newContext"}},"qualification":null},{"reference":{"otherSlice":2658090676192341942},"usedName":{"valueName":{"identifier":"start"}},"qualification":null},{"reference":{"otherSlice":4064907877462642730},"usedName":{"valueName":{"identifier":"response"}},"qualification":null},{"reference":{"otherSlice":7196752457094380315},"usedName":{"valueName":{"identifier":"worker"}},"qualification":null},{"reference":{"otherSlice":3195155696978901976},"usedName":{"valueName":{"identifier":"setAction"}},"qualification":null},{"reference":{"builtinModule":"Control.Monad"},"usedName":{"valueName":{"identifier":"replicateM_"}},"qualification":null},{"reference":{"otherSlice":1809740332040773144},"usedName":{"valueName":{"identifier":"spawnAction"}},"qualification":null},{"reference":{"otherSlice":4883102695110219227},"usedName":{"valueName":{"identifier":"mkRequest"}},"qualification":null},{"reference":{"builtinModule":"GHC.Conc.Sync"},"usedName":{"valueName":{"identifier":"forkIO"}},"qualification":null},{"reference":{"otherSlice":4745196057881657269},"usedName":{"valueName":{"identifier":"frameReceiver"}},"qualification":null},{"reference":{"otherSlice":5657305476543125467},"usedName":{"valueName":{"identifier":"frameSender"}},"qualification":null},{"reference":{"builtinModule":"Control.Exception.Base"},"usedName":{"valueName":{"identifier":"finally"}},"qualification":"E"},{"reference":{"otherSlice":1543627901730551587},"usedName":{"valueName":{"identifier":"clearContext"}},"qualification":null},{"reference":{"otherSlice":4629048850642870916},"usedName":{"valueName":{"identifier":"stop"}},"qualification":null},{"reference":{"builtinModule":"GHC.Conc.Sync"},"usedName":{"valueName":{"identifier":"killThread"}},"qualification":null},{"reference":{"otherSlice":583013321701679463},"usedName":{"constructorName":{"identifier":"TCP"},"constructorTypeName":{"identifier":"Transport"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"Control.Monad"},"usedName":{"valueName":{"identifier":"unless"}},"qualification":null},{"reference":{"otherSlice":7805026188176744179},"usedName":{"valueName":{"identifier":"goaway"}},"qualification":null},{"reference":{"otherSlice":5005511013097534442},"usedName":{"constructorName":{"identifier":"InadequateSecurity"},"constructorTypeName":{"identifier":"ErrorCodeId"}},"qualification":null},{"reference":{"otherSlice":583013321701679463},"usedName":{"valueName":{"identifier":"tlsMajorVersion"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"&&"}},"qualification":null},{"reference":{"otherSlice":583013321701679463},"usedName":{"valueName":{"identifier":"tlsMinorVersion"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":">="}},"qualification":null},{"reference":{"otherSlice":7028334547528704942},"usedName":{"valueName":{"identifier":"connectionPrefaceLength"}},"qualification":null},{"reference":{"otherSlice":2308861505750618357},"usedName":{"valueName":{"identifier":"connectionPreface"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"/="}},"qualification":null},{"reference":{"otherSlice":5005511013097534442},"usedName":{"constructorName":{"identifier":"ProtocolError"},"constructorTypeName":{"identifier":"ErrorCodeId"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"False"},"constructorTypeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"True"},"constructorTypeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"otherSlice":3086651893912105973},"usedName":{"typeName":{"identifier":"Connection"}},"qualification":null},{"reference":{"otherSlice":1842857625022371370},"usedName":{"typeName":{"identifier":"InternalInfo1"}},"qualification":null},{"reference":{"otherSlice":3812070640366845611},"usedName":{"typeName":{"identifier":"SockAddr"}},"qualification":null},{"reference":{"otherSlice":583013321701679463},"usedName":{"typeName":{"identifier":"Transport"}},"qualification":null},{"reference":{"otherSlice":135941937043906956},"usedName":{"typeName":{"identifier":"Settings"}},"qualification":"S"},{"reference":{"otherSlice":2439198389408872677},"usedName":{"typeName":{"identifier":"BufSize"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null},{"reference":{"otherSlice":4010822550476529195},"usedName":{"typeName":{"identifier":"ByteString"}},"qualification":null},{"reference":{"otherSlice":2503338423706628106},"usedName":{"typeName":{"identifier":"Application"}},"qualification":null}],"fragment":["http2 ::\n      Connection ->\n        InternalInfo1 ->\n          SockAddr ->\n            Transport ->\n              S.Settings -> (BufSize -> IO ByteString) -> Application -> IO ()","http2 conn ii1 addr transport settings readN app\n  = do checkTLS\n       ok <- checkPreface\n       when ok $\n         do ctx <- newContext\n            mgr <- start settings\n            let responder = response settings ctx mgr\n                action = worker ctx settings app responder\n            setAction mgr action\n            replicateM_ 3 $ spawnAction mgr\n            let mkreq = mkRequest ii1 settings addr\n            tid <- forkIO $ frameReceiver ctx mkreq readN\n            frameSender ctx conn settings mgr `E.finally`\n              do clearContext ctx\n                 stop mgr\n                 killThread tid\n  where checkTLS\n          = case transport of\n                TCP -> return ()\n                tls -> unless (tls12orLater tls) $\n                         goaway conn InadequateSecurity \"Weak TLS\"\n        tls12orLater tls\n          = tlsMajorVersion tls == 3 && tlsMinorVersion tls >= 3\n        checkPreface\n          = do preface <- readN connectionPrefaceLength\n               if connectionPreface /= preface then\n                 do goaway conn ProtocolError \"Preface mismatch\"\n                    return False\n                 else return True"],"instances":[],"language":{"extensions":["OverloadedStrings","RecordWildCards","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}