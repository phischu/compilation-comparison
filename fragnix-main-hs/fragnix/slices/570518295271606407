{"sliceID":570518295271606407,"uses":[{"reference":{"otherSlice":4132404936174356097},"usedName":{"constructorName":{"identifier":"Stream"},"constructorTypeName":{"identifier":"Stream"}},"qualification":null},{"reference":{"otherSlice":8659244751201234315},"usedName":{"valueName":{"identifier":"runText"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":371753114757304304},"usedName":{"valueName":{"identifier":"upperBound"}},"qualification":null},{"reference":{"otherSlice":303218261714130477},"usedName":{"valueName":{"identifier":"new"}},"qualification":"A"},{"reference":{"otherSlice":2339004113504757537},"usedName":{"constructorName":{"identifier":"Done"},"constructorTypeName":{"identifier":"Step"}},"qualification":null},{"reference":{"otherSlice":2339004113504757537},"usedName":{"constructorName":{"identifier":"Skip"},"constructorTypeName":{"identifier":"Step"}},"qualification":null},{"reference":{"otherSlice":2339004113504757537},"usedName":{"constructorName":{"identifier":"Yield"},"constructorTypeName":{"identifier":"Step"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":">="}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"otherSlice":4463961207685254290},"usedName":{"valueName":{"identifier":"shiftL"}},"qualification":null},{"reference":{"otherSlice":7984510095534010158},"usedName":{"valueName":{"identifier":"copyM"}},"qualification":"A"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"otherSlice":4464944826426021000},"usedName":{"valueName":{"identifier":"unsafeWrite"}},"qualification":null},{"reference":{"otherSlice":1071295638341592846},"usedName":{"valueName":{"identifier":"ord"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"<"}},"qualification":null},{"reference":{"otherSlice":4132404936174356097},"usedName":{"typeName":{"identifier":"Stream"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Char"}},"qualification":null},{"reference":{"otherSlice":6742866475076404776},"usedName":{"typeName":{"identifier":"Text"}},"qualification":null}],"fragment":["unstream :: Stream Char -> Text","unstream (Stream next0 s0 len)\n  = runText $\n      \\ done ->\n        do let mlen = upperBound 4 len\n           arr0 <- A.new mlen\n           let outer arr top = loop\n                 where loop !s !i\n                         = case next0 s of\n                               Done -> done arr i\n                               Skip s' -> loop s' i\n                               Yield x s' | j >= top ->\n                                            {-# SCC \"unstream/resize\" #-}\n                                              do let top' = (top + 1) `shiftL` 1\n                                                 arr' <- A.new top'\n                                                 A.copyM arr' 0 arr 0 top\n                                                 outer arr' top' s i\n                                          | otherwise ->\n                                            do d <- unsafeWrite arr i x\n                                               loop s' (i + d)\n                                 where j | ord x < 65536 = i\n                                         | otherwise = i + 1\n           outer arr0 mlen s0 0"],"instances":[],"language":{"extensions":["BangPatterns","MagicHash","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}