{"sliceID":677393623609357431,"uses":[{"reference":{"otherSlice":7954954090554769191},"usedName":{"typeName":{"identifier":"Hashable"}},"qualification":null},{"reference":{"builtinModule":"GHC.Integer"},"usedName":{"typeName":{"identifier":"Integer"}},"qualification":null},{"reference":{"otherSlice":7954954090554769191},"usedName":{"valueName":{"identifier":"hash"}},"qualification":null},{"reference":{"builtinModule":"GHC.Integer.GMP.Internals"},"usedName":{"constructorName":{"identifier":"S#"},"constructorTypeName":{"identifier":"Integer"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"I#"},"constructorTypeName":{"identifier":"Int"}},"qualification":null},{"reference":{"builtinModule":"GHC.Integer.GMP.Internals"},"usedName":{"constructorName":{"identifier":"J#"},"constructorTypeName":{"identifier":"Integer"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":">="}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"&&"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"<="}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"identifier":"fromInteger"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"*"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"identifier":"abs"}},"qualification":null},{"reference":{"otherSlice":784250644599292553},"usedName":{"valueName":{"identifier":"hashByteArrayWithSalt"}},"qualification":null},{"reference":{"otherSlice":6551684367660017638},"usedName":{"valueName":{"identifier":"defaultSalt"}},"qualification":null},{"reference":{"otherSlice":7954954090554769191},"usedName":{"valueName":{"identifier":"hashWithSalt"}},"qualification":null},{"reference":{"builtinModule":"GHC.Real"},"usedName":{"valueName":{"identifier":"fromIntegral"}},"qualification":null},{"reference":{"builtinModule":"GHC.Enum"},"usedName":{"valueName":{"identifier":"minBound"}},"qualification":null},{"reference":{"builtinModule":"GHC.Enum"},"usedName":{"valueName":{"identifier":"maxBound"}},"qualification":null}],"fragment":["instance Hashable Integer where\n        hash (S# int) = I# int\n        hash n@(J# size# byteArray)\n          | n >= minInt && n <= maxInt = fromInteger n :: Int\n          | otherwise =\n            let size = I# size#\n                numBytes = 8 * abs size\n              in\n              hashByteArrayWithSalt byteArray 0 numBytes defaultSalt\n                `hashWithSalt` size\n          where minInt = fromIntegral (minBound :: Int)\n                maxInt = fromIntegral (maxBound :: Int)\n        hashWithSalt salt (S# n) = hashWithSalt salt (I# n)\n        hashWithSalt salt n@(J# size# byteArray)\n          | n >= minInt && n <= maxInt =\n            hashWithSalt salt (fromInteger n :: Int)\n          | otherwise =\n            let size = I# size#\n                numBytes = 8 * abs size\n              in\n              hashByteArrayWithSalt byteArray 0 numBytes salt `hashWithSalt` size\n          where minInt = fromIntegral (minBound :: Int)\n                maxInt = fromIntegral (maxBound :: Int)"],"instances":[],"language":{"extensions":["BangPatterns","ForeignFunctionInterface","MagicHash","ScopedTypeVariables","UnliftedFFITypes","DefaultSignatures","FlexibleContexts","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":true}}