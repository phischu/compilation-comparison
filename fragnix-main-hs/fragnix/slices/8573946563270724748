{"sliceID":8573946563270724748,"uses":[{"reference":{"builtinModule":"Data.Maybe"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":5473192748579496556},"usedName":{"valueName":{"identifier":"readInteger"}},"qualification":"B"},{"reference":{"otherSlice":313602939879272581},"usedName":{"constructorName":{"identifier":"ByteRangeSuffix"},"constructorTypeName":{"identifier":"ByteRange"}},"qualification":"HH"},{"reference":{"builtinModule":"Data.Maybe"},"usedName":{"constructorName":{"identifier":"Nothing"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":313602939879272581},"usedName":{"constructorName":{"identifier":"ByteRangeFrom"},"constructorTypeName":{"identifier":"ByteRange"}},"qualification":"HH"},{"reference":{"otherSlice":313602939879272581},"usedName":{"constructorName":{"identifier":"ByteRangeFromTo"},"constructorTypeName":{"identifier":"ByteRange"}},"qualification":"HH"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null},{"reference":{"otherSlice":7097082463823892789},"usedName":{"valueName":{"identifier":"isPrefixOf"}},"qualification":"S"},{"reference":{"otherSlice":6985366053944096403},"usedName":{"valueName":{"identifier":"drop"}},"qualification":"S"},{"reference":{"otherSlice":6258463563638113276},"usedName":{"valueName":{"identifier":"length"}},"qualification":"S"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"otherSlice":8642306666063513779},"usedName":{"typeName":{"identifier":"ByteString"}},"qualification":"S"},{"reference":{"builtinModule":"Data.Maybe"},"usedName":{"typeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":6871744515850123263},"usedName":{"typeName":{"identifier":"ByteRanges"}},"qualification":"HH"}],"fragment":["parseByteRanges :: S.ByteString -> Maybe HH.ByteRanges","parseByteRanges bs1\n  = do bs2 <- stripPrefix \"bytes=\" bs1\n       (r, bs3) <- range bs2\n       ranges (r :) bs3\n  where range bs2\n          = case stripPrefix \"-\" bs2 of\n                Just bs3 -> do (i, bs4) <- B.readInteger bs3\n                               Just (HH.ByteRangeSuffix i, bs4)\n                Nothing -> do (i, bs3) <- B.readInteger bs2\n                              bs4 <- stripPrefix \"-\" bs3\n                              case B.readInteger bs4 of\n                                  Nothing -> Just (HH.ByteRangeFrom i, bs4)\n                                  Just (j, bs5) -> Just (HH.ByteRangeFromTo i j, bs5)\n        ranges front bs3\n          = case stripPrefix \",\" bs3 of\n                Nothing -> Just (front [])\n                Just bs4 -> do (r, bs5) <- range bs4\n                               ranges (front . (r :)) bs5\n        stripPrefix x y\n          | x `S.isPrefixOf` y = Just (S.drop (S.length x) y)\n          | otherwise = Nothing"],"instances":[],"language":{"extensions":["OverloadedStrings","BangPatterns","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}