{"sliceID":6896448667555633973,"uses":[{"reference":{"otherSlice":3636465675150407710},"usedName":{"valueName":{"identifier":"safeRangeSize"}},"qualification":null},{"reference":{"otherSlice":3191844957948247487},"usedName":{"valueName":{"identifier":"unsafeArray"}},"qualification":null},{"reference":{"otherSlice":1309197156297967750},"usedName":{"valueName":{"identifier":"safeIndex"}},"qualification":null},{"reference":{"otherSlice":3191844957948247487},"usedName":{"typeName":{"identifier":"IArray"}},"qualification":null},{"reference":{"builtinModule":"GHC.Arr"},"usedName":{"typeName":{"identifier":"Ix"}},"qualification":null}],"fragment":["array :: (IArray a e, Ix i) => (i, i) -> [(i, e)] -> a i e","array (l, u) ies\n  = let n = safeRangeSize (l, u) in\n      unsafeArray (l, u) [(safeIndex (l, u) n i, e) | (i, e) <- ies]"],"instances":[],"language":{"extensions":["BangPatterns","RankNTypes","MagicHash","UnboxedTuples","MultiParamTypeClasses","FlexibleInstances","FlexibleContexts","DeriveDataTypeable","UnliftedFFITypes","RoleAnnotations","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}