{"sliceID":8518907952946968037,"uses":[{"reference":{"builtinModule":"Data.Monoid"},"usedName":{"valueName":{"identifier":"mempty"}},"qualification":null},{"reference":{"otherSlice":4506736979529205858},"usedName":{"valueName":{"identifier":"copyByteString"}},"qualification":"Blaze"},{"reference":{"builtinModule":"Data.Monoid"},"usedName":{"valueName":{"identifier":"mappend"}},"qualification":null},{"reference":{"otherSlice":4334813005741135784},"usedName":{"valueName":{"identifier":"encodePathSegment"}},"qualification":null},{"reference":{"otherSlice":6742866475076404776},"usedName":{"typeName":{"identifier":"Text"}},"qualification":null},{"reference":{"otherSlice":6766449275992946084},"usedName":{"typeName":{"identifier":"Builder"}},"qualification":"Blaze"}],"fragment":["encodePathSegments :: [Text] -> Blaze.Builder","encodePathSegments [] = mempty\nencodePathSegments (x : xs)\n  = Blaze.copyByteString \"/\" `mappend` encodePathSegment x `mappend`\n      encodePathSegments xs"],"instances":[],"language":{"extensions":["OverloadedStrings","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}