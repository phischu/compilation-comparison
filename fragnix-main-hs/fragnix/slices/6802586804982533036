{"sliceID":6802586804982533036,"uses":[{"reference":{"otherSlice":2497553050502348575},"usedName":{"constructorName":{"identifier":"Empty"},"constructorTypeName":{"identifier":"FingerTree"}},"qualification":null},{"reference":{"otherSlice":2497553050502348575},"usedName":{"constructorName":{"identifier":"Single"},"constructorTypeName":{"identifier":"FingerTree"}},"qualification":null},{"reference":{"otherSlice":2497553050502348575},"usedName":{"constructorName":{"identifier":"Deep"},"constructorTypeName":{"identifier":"FingerTree"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"fmap"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null},{"reference":{"otherSlice":967665031512543017},"usedName":{"valueName":{"identifier":"digitToTree"}},"qualification":null},{"reference":{"otherSlice":3188394095008055777},"usedName":{"valueName":{"identifier":"initsDigit"}},"qualification":null},{"reference":{"otherSlice":7857519559657207043},"usedName":{"valueName":{"identifier":"deep"}},"qualification":null},{"reference":{"otherSlice":1455843312851584907},"usedName":{"constructorName":{"identifier":"Just2"},"constructorTypeName":{"identifier":"Maybe2"}},"qualification":null},{"reference":{"otherSlice":6224433810839268361},"usedName":{"valueName":{"identifier":"viewRTree"}},"qualification":null},{"reference":{"otherSlice":740349461787986526},"usedName":{"valueName":{"identifier":"initsNode"}},"qualification":null},{"reference":{"otherSlice":3097725820661431075},"usedName":{"typeName":{"identifier":"Sized"}},"qualification":null},{"reference":{"otherSlice":2497553050502348575},"usedName":{"typeName":{"identifier":"FingerTree"}},"qualification":null}],"fragment":["initsTree ::\n            Sized a => (FingerTree a -> b) -> FingerTree a -> FingerTree b","initsTree _ Empty = Empty\ninitsTree f (Single x) = Single (f (Single x))\ninitsTree f (Deep n pr m sf)\n  = Deep n (fmap (f . digitToTree) (initsDigit pr)) (initsTree f' m)\n      (fmap (f . deep pr m) (initsDigit sf))\n  where f' ms\n          = let Just2 m' node = viewRTree ms in\n              fmap (\\ sf' -> f (deep pr m' sf')) (initsNode node)"],"instances":[],"language":{"extensions":["DeriveDataTypeable","StandaloneDeriving","TypeFamilies","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}