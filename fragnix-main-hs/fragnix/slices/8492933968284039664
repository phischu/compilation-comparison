{"sliceID":8492933968284039664,"uses":[{"reference":{"otherSlice":7949339268674780491},"usedName":{"constructorName":{"identifier":"C"},"constructorTypeName":{"identifier":"Get"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":8502544738463299527},"usedName":{"valueName":{"identifier":"concat"}},"qualification":"B"},{"reference":{"otherSlice":4010822550476529195},"usedName":{"typeName":{"identifier":"ByteString"}},"qualification":"B"},{"reference":{"otherSlice":7949339268674780491},"usedName":{"typeName":{"identifier":"Get"}},"qualification":null}],"fragment":["pushBack :: [B.ByteString] -> Get ()","pushBack [] = C $ \\ inp ks -> ks inp ()\npushBack bs = C $ \\ inp ks -> ks (B.concat (inp : bs)) ()"],"instances":[],"language":{"extensions":["RankNTypes","MagicHash","BangPatterns","TypeFamilies","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}