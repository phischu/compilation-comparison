{"sliceID":8257894710247024373,"uses":[{"reference":{"otherSlice":722674047690492996},"usedName":{"valueName":{"identifier":"checkLength"}},"qualification":"Ck"},{"reference":{"otherSlice":4579156144394400265},"usedName":{"constructorName":{"identifier":"Unsafe"},"constructorTypeName":{"identifier":"Checks"}},"qualification":"Ck"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":3867849288792351978},"usedName":{"valueName":{"identifier":"length"}},"qualification":null},{"reference":{"otherSlice":3867849288792351978},"usedName":{"valueName":{"identifier":"basicUnsafeNew"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"otherSlice":3867849288792351978},"usedName":{"valueName":{"identifier":"basicUnsafeCopy"}},"qualification":null},{"reference":{"otherSlice":3867849288792351978},"usedName":{"valueName":{"identifier":"basicUnsafeSlice"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"otherSlice":3377634759521931512},"usedName":{"typeName":{"identifier":"PrimMonad"}},"qualification":null},{"reference":{"otherSlice":3867849288792351978},"usedName":{"typeName":{"identifier":"MVector"}},"qualification":null},{"reference":{"otherSlice":3377634759521931512},"usedName":{"typeName":{"identifier":"PrimState"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null}],"fragment":["unsafeGrowFront ::\n                  (PrimMonad m, MVector v a) =>\n                  v (PrimState m) a -> Int -> m (v (PrimState m) a)","unsafeGrowFront v by\n  = ((Ck.checkLength \"Data/Vector/Generic/Mutable.hs\" 569) Ck.Unsafe)\n      \"unsafeGrowFront\"\n      by\n      $\n      do let n = length v\n         v' <- basicUnsafeNew (by + n)\n         basicUnsafeCopy (basicUnsafeSlice by n v') v\n         return v'"],"instances":[],"language":{"extensions":["DeriveDataTypeable","MultiParamTypeClasses","BangPatterns","ScopedTypeVariables","TypeFamilies","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}