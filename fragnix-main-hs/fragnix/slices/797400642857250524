{"sliceID":797400642857250524,"uses":[{"reference":{"otherSlice":6608281436314181672},"usedName":{"constructorName":{"identifier":"Bin"},"constructorTypeName":{"identifier":"IntSet"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"<"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":">="}},"qualification":null},{"reference":{"otherSlice":4609286002637564688},"usedName":{"constructorName":{"operator":":*:"},"constructorTypeName":{"identifier":"StrictPair"}},"qualification":null},{"reference":{"otherSlice":9043610197497683074},"usedName":{"valueName":{"identifier":"union"}},"qualification":null},{"reference":{"otherSlice":3375575442947869067},"usedName":{"valueName":{"identifier":"match"}},"qualification":null},{"reference":{"otherSlice":6195802978181697411},"usedName":{"valueName":{"identifier":"zero"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"otherSlice":6608281436314181672},"usedName":{"constructorName":{"identifier":"Nil"},"constructorTypeName":{"identifier":"IntSet"}},"qualification":null},{"reference":{"otherSlice":6608281436314181672},"usedName":{"constructorName":{"identifier":"Tip"},"constructorTypeName":{"identifier":"IntSet"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":">"}},"qualification":null},{"reference":{"otherSlice":629250103569612987},"usedName":{"valueName":{"identifier":"prefixOf"}},"qualification":null},{"reference":{"otherSlice":540480389388521391},"usedName":{"valueName":{"identifier":"tip"}},"qualification":null},{"reference":{"builtinModule":"Data.Bits"},"usedName":{"valueName":{"operator":".&."}},"qualification":null},{"reference":{"otherSlice":1484799806282288272},"usedName":{"valueName":{"identifier":"bitmapOf"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"-"}},"qualification":null},{"reference":{"builtinModule":"Data.Bits"},"usedName":{"valueName":{"identifier":"complement"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"otherSlice":879198285250991989},"usedName":{"typeName":{"identifier":"Key"}},"qualification":null},{"reference":{"otherSlice":6608281436314181672},"usedName":{"typeName":{"identifier":"IntSet"}},"qualification":null}],"fragment":["split :: Key -> IntSet -> (IntSet, IntSet)","split x t\n  = case t of\n        Bin _ m l r | m < 0 ->\n                      if x >= 0 then\n                        case go x l of\n                            (lt :*: gt) -> let !lt' = union lt r in (lt', gt)\n                        else\n                        case go x r of\n                            (lt :*: gt) -> let !gt' = union gt l in (lt, gt')\n        _ -> case go x t of\n                 (lt :*: gt) -> (lt, gt)\n  where go !x' t'@(Bin p m l r)\n          | match x' p m =\n            if zero x' m then\n              case go x' l of\n                  (lt :*: gt) -> lt :*: union gt r\n              else\n              case go x' r of\n                  (lt :*: gt) -> union lt l :*: gt\n          | otherwise = if x' < p then (Nil :*: t') else (t' :*: Nil)\n        go x' t'@(Tip kx' bm)\n          | kx' > x' = (Nil :*: t')\n          | kx' < prefixOf x' = (t' :*: Nil)\n          | otherwise =\n            tip kx' (bm .&. lowerBitmap) :*: tip kx' (bm .&. higherBitmap)\n          where lowerBitmap = bitmapOf x' - 1\n                higherBitmap = complement (lowerBitmap + bitmapOf x')\n        go _ Nil = (Nil :*: Nil)"],"instances":[],"language":{"extensions":["BangPatterns","MagicHash","DeriveDataTypeable","StandaloneDeriving","TypeFamilies","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}