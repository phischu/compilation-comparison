{"sliceID":8130475306931645715,"uses":[{"reference":{"builtinModule":"Data.Maybe"},"usedName":{"constructorName":{"identifier":"Nothing"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"-"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"True"},"constructorTypeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"builtinModule":"Data.Maybe"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":8573946563270724748},"usedName":{"valueName":{"identifier":"parseByteRanges"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":">>="}},"qualification":null},{"reference":{"builtinModule":"Data.Maybe"},"usedName":{"valueName":{"identifier":"listToMaybe"}},"qualification":null},{"reference":{"otherSlice":6996604809212615647},"usedName":{"valueName":{"identifier":"filePartOffset"}},"qualification":null},{"reference":{"otherSlice":6996604809212615647},"usedName":{"valueName":{"identifier":"filePartByteCount"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"&&"}},"qualification":null},{"reference":{"otherSlice":313602939879272581},"usedName":{"constructorName":{"identifier":"ByteRangeFrom"},"constructorTypeName":{"identifier":"ByteRange"}},"qualification":"H"},{"reference":{"otherSlice":313602939879272581},"usedName":{"constructorName":{"identifier":"ByteRangeFromTo"},"constructorTypeName":{"identifier":"ByteRange"}},"qualification":"H"},{"reference":{"otherSlice":313602939879272581},"usedName":{"constructorName":{"identifier":"ByteRangeSuffix"},"constructorTypeName":{"identifier":"ByteRange"}},"qualification":"H"},{"reference":{"builtinModule":"GHC.Integer"},"usedName":{"typeName":{"identifier":"Integer"}},"qualification":null},{"reference":{"builtinModule":"Data.Maybe"},"usedName":{"typeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":6996604809212615647},"usedName":{"typeName":{"identifier":"FilePart"}},"qualification":null},{"reference":{"otherSlice":5287166898059260208},"usedName":{"typeName":{"identifier":"HeaderValue"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Bool"}},"qualification":null}],"fragment":["checkPartRange ::\n               Integer ->\n                 Maybe FilePart ->\n                   Maybe HeaderValue -> (Integer, Integer, Integer, Bool)","checkPartRange fileSize = checkPart\n  where checkPart Nothing Nothing = (0, fileSize - 1, fileSize, True)\n        checkPart Nothing (Just range)\n          = case parseByteRanges range >>= listToMaybe of\n                Nothing -> (0, fileSize - 1, fileSize, True)\n                Just hrange -> checkRange hrange\n        checkPart (Just part) _ = (beg, end, len, isEntire)\n          where beg = filePartOffset part\n                len = filePartByteCount part\n                end = beg + len - 1\n                isEntire = beg == 0 && len == fileSize\n        checkRange (H.ByteRangeFrom beg) = fromRange beg (fileSize - 1)\n        checkRange (H.ByteRangeFromTo beg end) = fromRange beg end\n        checkRange (H.ByteRangeSuffix count)\n          = fromRange (fileSize - count) (fileSize - 1)\n        fromRange beg end = (beg, end, len, isEntire)\n          where len = end - beg + 1\n                isEntire = beg == 0 && len == fileSize"],"instances":[],"language":{"extensions":["OverloadedStrings","ScopedTypeVariables","TupleSections","RankNTypes","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}