{"sliceID":7649282573724380722,"uses":[{"reference":{"otherSlice":3170071850099014306},"usedName":{"valueName":{"identifier":"unfoldrM"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Monad"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":5841983516172584459},"usedName":{"typeName":{"identifier":"Bundle"}},"qualification":null}],"fragment":["unfoldr :: Monad m => (s -> Maybe (a, s)) -> s -> Bundle m u a","unfoldr f = unfoldrM (return . f)"],"instances":[],"language":{"extensions":["ExistentialQuantification","MultiParamTypeClasses","FlexibleInstances","Rank2Types","BangPatterns","KindSignatures","GADTs","ScopedTypeVariables","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}