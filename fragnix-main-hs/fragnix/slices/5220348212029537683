{"sliceID":5220348212029537683,"uses":[{"reference":{"otherSlice":235800544958910598},"usedName":{"valueName":{"identifier":"zipWith4M"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Monad"}},"qualification":null},{"reference":{"otherSlice":9209112058599157037},"usedName":{"typeName":{"identifier":"Stream"}},"qualification":null}],"fragment":["zipWith4 ::\n           Monad m =>\n           (a -> b -> c -> d -> e) ->\n             Stream m a -> Stream m b -> Stream m c -> Stream m d -> Stream m e","zipWith4 f = zipWith4M (\\ a b c d -> return (f a b c d))"],"instances":[],"language":{"extensions":["DeriveDataTypeable","ExistentialQuantification","Rank2Types","BangPatterns","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}