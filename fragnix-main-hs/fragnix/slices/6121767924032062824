{"sliceID":6121767924032062824,"uses":[{"reference":{"otherSlice":880202317694872316},"usedName":{"valueName":{"identifier":"toList'"}},"qualification":null},{"reference":{"otherSlice":1013433531415570027},"usedName":{"constructorName":{"identifier":"Leaf"},"constructorTypeName":{"identifier":"HashMap"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"&&"}},"qualification":null},{"reference":{"otherSlice":1013433531415570027},"usedName":{"constructorName":{"identifier":"Collision"},"constructorTypeName":{"identifier":"HashMap"}},"qualification":null},{"reference":{"otherSlice":209150371396664684},"usedName":{"valueName":{"identifier":"length"}},"qualification":"A"},{"reference":{"otherSlice":8103878062900422797},"usedName":{"valueName":{"identifier":"isPermutationBy"}},"qualification":null},{"reference":{"otherSlice":6699099996820754610},"usedName":{"valueName":{"identifier":"toList"}},"qualification":"A"},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"True"},"constructorTypeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"False"},"constructorTypeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"otherSlice":9205917895425065335},"usedName":{"constructorName":{"identifier":"L"},"constructorTypeName":{"identifier":"Leaf"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"otherSlice":1013433531415570027},"usedName":{"typeName":{"identifier":"HashMap"}},"qualification":null}],"fragment":["equal ::\n      (k -> k' -> Bool) ->\n        (v -> v' -> Bool) -> HashMap k v -> HashMap k' v' -> Bool","equal eqk eqv t1 t2 = go (toList' t1 []) (toList' t2 [])\n  where go (Leaf k1 l1 : tl1) (Leaf k2 l2 : tl2)\n          | k1 == k2 && leafEq l1 l2 = go tl1 tl2\n        go (Collision k1 ary1 : tl1) (Collision k2 ary2 : tl2)\n          | k1 == k2 &&\n              A.length ary1 == A.length ary2 &&\n                isPermutationBy leafEq (A.toList ary1) (A.toList ary2)\n            = go tl1 tl2\n        go [] [] = True\n        go _ _ = False\n        leafEq (L k v) (L k' v') = eqk k k' && eqv v v'"],"instances":[],"language":{"extensions":["BangPatterns","DeriveDataTypeable","MagicHash","ScopedTypeVariables","PatternGuards","RoleAnnotations","TypeFamilies","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll"],"isInstance":false}}