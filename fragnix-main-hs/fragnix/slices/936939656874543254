{"sliceID":936939656874543254,"uses":[{"reference":{"otherSlice":4333102838199653287},"usedName":{"valueName":{"identifier":"zipWith'"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"Data.List"},"usedName":{"valueName":{"identifier":"minimum"}},"qualification":null},{"reference":{"otherSlice":6742606937213304270},"usedName":{"valueName":{"identifier":"length"}},"qualification":null},{"reference":{"otherSlice":5107544596642727227},"usedName":{"valueName":{"identifier":"take"}},"qualification":null},{"reference":{"otherSlice":8468946667989408909},"usedName":{"typeName":{"identifier":"Seq"}},"qualification":null}],"fragment":["zipWith3 :: (a -> b -> c -> d) -> Seq a -> Seq b -> Seq c -> Seq d","zipWith3 f s1 s2 s3 = zipWith' ($) (zipWith' f s1' s2') s3'\n  where minLen = minimum [length s1, length s2, length s3]\n        s1' = take minLen s1\n        s2' = take minLen s2\n        s3' = take minLen s3"],"instances":[],"language":{"extensions":["DeriveDataTypeable","StandaloneDeriving","TypeFamilies","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}