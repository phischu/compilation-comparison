{"sliceID":5919710124379499891,"uses":[{"reference":{"otherSlice":4010822550476529195},"usedName":{"typeName":{"identifier":"ByteString"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":7375684867847713962},"usedName":{"valueName":{"identifier":"break"}},"qualification":"S"},{"reference":{"otherSlice":7422468344224083282},"usedName":{"valueName":{"identifier":"isSpace"}},"qualification":null},{"reference":{"otherSlice":7636465670018728026},"usedName":{"valueName":{"identifier":"map"}},"qualification":"S"},{"reference":{"otherSlice":917942214217815671},"usedName":{"valueName":{"identifier":"toLower"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":7334742665858401074},"usedName":{"valueName":{"identifier":"dropWhile"}},"qualification":"S"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Nothing"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null}],"fragment":["extractBearerAuth :: ByteString -> Maybe ByteString","extractBearerAuth bs\n  = let (x, y) = S.break isSpace bs in\n      if S.map toLower x == \"bearer\" then Just $ S.dropWhile isSpace y\n        else Nothing"],"instances":[],"language":{"extensions":["OverloadedStrings","RecordWildCards","TupleSections","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}