{"sliceID":2763250986601531949,"uses":[{"reference":{"otherSlice":6330763764213190359},"usedName":{"constructorName":{"identifier":"Rigid"},"constructorTypeName":{"identifier":"Rigid"}},"qualification":null},{"reference":{"otherSlice":3432119687286972000},"usedName":{"constructorName":{"identifier":"DeepTh"},"constructorTypeName":{"identifier":"Thin"}},"qualification":null},{"reference":{"otherSlice":2103754850612341338},"usedName":{"constructorName":{"identifier":"Deep"},"constructorTypeName":{"identifier":"FingerTree"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"*"}},"qualification":null},{"reference":{"otherSlice":2658389187921074114},"usedName":{"valueName":{"identifier":"size"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"fmap"}},"qualification":null},{"reference":{"otherSlice":3528317801391865059},"usedName":{"valueName":{"identifier":"digit12ToDigit"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null},{"reference":{"otherSlice":1348526264301144068},"usedName":{"valueName":{"identifier":"squashL"}},"qualification":null},{"reference":{"otherSlice":8367654937553799926},"usedName":{"valueName":{"identifier":"squashR"}},"qualification":null},{"reference":{"otherSlice":3432119687286972000},"usedName":{"constructorName":{"identifier":"EmptyTh"},"constructorTypeName":{"identifier":"Thin"}},"qualification":null},{"reference":{"otherSlice":8624209003781892825},"usedName":{"valueName":{"identifier":"deep"}},"qualification":null},{"reference":{"otherSlice":6856618864151171204},"usedName":{"constructorName":{"identifier":"One"},"constructorTypeName":{"identifier":"Digit"}},"qualification":null},{"reference":{"otherSlice":5383474548869591997},"usedName":{"valueName":{"identifier":"mapMulFT"}},"qualification":null},{"reference":{"otherSlice":3555949835188142327},"usedName":{"constructorName":{"identifier":"Elem"},"constructorTypeName":{"identifier":"Elem"}},"qualification":null},{"reference":{"otherSlice":4520913892942188981},"usedName":{"valueName":{"identifier":"node2"}},"qualification":null},{"reference":{"otherSlice":3432119687286972000},"usedName":{"constructorName":{"identifier":"SingleTh"},"constructorTypeName":{"identifier":"Thin"}},"qualification":null},{"reference":{"otherSlice":6856618864151171204},"usedName":{"constructorName":{"identifier":"Two"},"constructorTypeName":{"identifier":"Digit"}},"qualification":null},{"reference":{"otherSlice":6843874425638804520},"usedName":{"valueName":{"identifier":"node3"}},"qualification":null},{"reference":{"otherSlice":2103754850612341338},"usedName":{"typeName":{"identifier":"FingerTree"}},"qualification":null},{"reference":{"otherSlice":3555949835188142327},"usedName":{"typeName":{"identifier":"Elem"}},"qualification":null},{"reference":{"otherSlice":6330763764213190359},"usedName":{"typeName":{"identifier":"Rigid"}},"qualification":null},{"reference":{"otherSlice":1673753023314990609},"usedName":{"typeName":{"identifier":"Node"}},"qualification":null}],"fragment":["aptyMiddle ::\n           (b -> c) ->\n             (b -> c) ->\n               (a -> b -> c) ->\n                 FingerTree (Elem a) -> Rigid b -> FingerTree (Node c)","aptyMiddle firstf lastf map23 fs\n  (Rigid s pr (DeepTh sm prm mm sfm) sf)\n  = Deep (sm + s * (size fs + 1))\n      (fmap (fmap firstf) (digit12ToDigit prm))\n      (aptyMiddle (fmap firstf) (fmap lastf) (fmap . map23) fs\n         (Rigid s (squashL pr prm) mm (squashR sfm sf)))\n      (fmap (fmap lastf) (digit12ToDigit sfm))\naptyMiddle firstf lastf map23 fs (Rigid s pr EmptyTh sf)\n  = deep (One (fmap firstf sf))\n      (mapMulFT s (\\ (Elem f) -> fmap (fmap (map23 f)) converted) fs)\n      (One (fmap lastf pr))\n  where converted = node2 pr sf\naptyMiddle firstf lastf map23 fs (Rigid s pr (SingleTh q) sf)\n  = deep (Two (fmap firstf q) (fmap firstf sf))\n      (mapMulFT s (\\ (Elem f) -> fmap (fmap (map23 f)) converted) fs)\n      (Two (fmap lastf pr) (fmap lastf q))\n  where converted = node3 pr q sf"],"instances":[],"language":{"extensions":["BangPatterns","DeriveDataTypeable","StandaloneDeriving","FlexibleInstances","ScopedTypeVariables","DeriveGeneric","TypeFamilies","PatternSynonyms","ViewPatterns","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}