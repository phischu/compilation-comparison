{"sliceID":9102890110967478205,"uses":[{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Functor"}},"qualification":null},{"reference":{"otherSlice":6951942191127587656},"usedName":{"typeName":{"identifier":"ExceptT"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"fmap"}},"qualification":null},{"reference":{"otherSlice":6951942191127587656},"usedName":{"constructorName":{"identifier":"ExceptT"},"constructorTypeName":{"identifier":"ExceptT"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null},{"reference":{"otherSlice":2845853430767535025},"usedName":{"valueName":{"identifier":"runExceptT"}},"qualification":null}],"fragment":["instance (Functor m) => Functor (ExceptT e m) where\n        fmap f = ExceptT . fmap (fmap f) . runExceptT"],"instances":[],"language":{"extensions":["MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":true}}