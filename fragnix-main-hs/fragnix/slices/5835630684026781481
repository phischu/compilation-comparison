{"sliceID":5835630684026781481,"uses":[{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"typeName":{"identifier":"Eq"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null}],"fragment":["combineEq :: Eq a => [a] -> [a]","combineEq [] = []\ncombineEq (x : xs) = combineEq' x xs\n  where combineEq' z [] = [z]\n        combineEq' z (y : ys)\n          | z == y = combineEq' z ys\n          | otherwise = z : combineEq' y ys"],"instances":[],"language":{"extensions":["BangPatterns","PatternGuards","DeriveDataTypeable","StandaloneDeriving","RoleAnnotations","TypeFamilies","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll"],"isInstance":false}}