{"sliceID":7705975765929357576,"uses":[{"reference":{"builtinModule":"Foreign.Storable"},"usedName":{"valueName":{"identifier":"peekByteOff"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null},{"reference":{"builtinModule":"Foreign.C.Types"},"usedName":{"typeName":{"identifier":"CInt"}},"qualification":null},{"reference":{"otherSlice":3119541200816691195},"usedName":{"valueName":{"identifier":"zone"}},"qualification":null},{"reference":{"otherSlice":4287772626385999106},"usedName":{"valueName":{"identifier":"gmtoff"}},"qualification":null},{"reference":{"builtinModule":"Foreign.C.String"},"usedName":{"valueName":{"identifier":"peekCString"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":">="}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"&&"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"<="}},"qualification":null},{"reference":{"builtinModule":"GHC.Enum"},"usedName":{"valueName":{"identifier":"toEnum"}},"qualification":null},{"reference":{"builtinModule":"GHC.Real"},"usedName":{"valueName":{"identifier":"fromIntegral"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"builtinModule":"GHC.Err"},"usedName":{"valueName":{"identifier":"error"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"++"}},"qualification":null},{"reference":{"builtinModule":"GHC.Show"},"usedName":{"valueName":{"identifier":"show"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"otherSlice":8466299853594740722},"usedName":{"constructorName":{"identifier":"CalendarTime"},"constructorTypeName":{"identifier":"CalendarTime"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"False"},"constructorTypeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"/="}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"builtinModule":"GHC.Ptr"},"usedName":{"typeName":{"identifier":"Ptr"}},"qualification":null},{"reference":{"otherSlice":8335521526243194718},"usedName":{"typeName":{"identifier":"CTm"}},"qualification":null},{"reference":{"builtinModule":"GHC.Integer.GMP.Internals"},"usedName":{"typeName":{"identifier":"Integer"}},"qualification":null},{"reference":{"otherSlice":8466299853594740722},"usedName":{"typeName":{"identifier":"CalendarTime"}},"qualification":null}],"fragment":["clockToCalendarTime_aux ::\n                        Bool -> Ptr CTm -> Integer -> IO CalendarTime","clockToCalendarTime_aux is_utc p_tm psec\n  = do sec <- ((\\ hsc_ptr -> peekByteOff hsc_ptr 0)) p_tm :: IO CInt\n       minute <- ((\\ hsc_ptr -> peekByteOff hsc_ptr 4)) p_tm :: IO CInt\n       hour <- ((\\ hsc_ptr -> peekByteOff hsc_ptr 8)) p_tm :: IO CInt\n       mday <- ((\\ hsc_ptr -> peekByteOff hsc_ptr 12)) p_tm :: IO CInt\n       mon <- ((\\ hsc_ptr -> peekByteOff hsc_ptr 16)) p_tm :: IO CInt\n       year <- ((\\ hsc_ptr -> peekByteOff hsc_ptr 20)) p_tm :: IO CInt\n       wday <- ((\\ hsc_ptr -> peekByteOff hsc_ptr 24)) p_tm :: IO CInt\n       yday <- ((\\ hsc_ptr -> peekByteOff hsc_ptr 28)) p_tm :: IO CInt\n       isdst <- ((\\ hsc_ptr -> peekByteOff hsc_ptr 32)) p_tm :: IO CInt\n       zone' <- zone p_tm\n       tz <- gmtoff p_tm\n       tzname' <- peekCString zone'\n       let month\n             | mon >= 0 && mon <= 11 = toEnum (fromIntegral mon)\n             | otherwise =\n               error (\"toCalendarTime: illegal month value: \" ++ show mon)\n       return\n         (CalendarTime (1900 + fromIntegral year) month (fromIntegral mday)\n            (fromIntegral hour)\n            (fromIntegral minute)\n            (fromIntegral sec)\n            psec\n            (toEnum (fromIntegral wday))\n            (fromIntegral yday)\n            (if is_utc then \"UTC\" else tzname')\n            (if is_utc then 0 else fromIntegral tz)\n            (if is_utc then False else isdst /= 0))"],"instances":[],"language":{"extensions":["MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}