{"sliceID":6892046346264725898,"uses":[{"reference":{"otherSlice":2152284110564700777},"usedName":{"typeName":{"identifier":"GenericQ"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"builtinModule":"Data.Data"},"usedName":{"valueName":{"identifier":"toConstr"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"&&"}},"qualification":null},{"reference":{"builtinModule":"GHC.List"},"usedName":{"valueName":{"identifier":"and"}},"qualification":null},{"reference":{"otherSlice":6844161323747983323},"usedName":{"valueName":{"identifier":"gzipWithQ"}},"qualification":null},{"reference":{"builtinModule":"Data.Data"},"usedName":{"typeName":{"identifier":"Data"}},"qualification":null}],"fragment":["geq :: Data a => a -> a -> Bool","geq x0 y0 = geq' x0 y0\n  where geq' :: GenericQ (GenericQ Bool)\n        geq' x y = (toConstr x == toConstr y) && and (gzipWithQ geq' x y)"],"instances":[],"language":{"extensions":["RankNTypes","ScopedTypeVariables","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}