{"sliceID":8828737438358082166,"uses":[{"reference":{"builtinModule":"GHC.Prim"},"usedName":{"valueName":{"identifier":"seq"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"False"},"constructorTypeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"builtinModule":"GHC.Err"},"usedName":{"valueName":{"identifier":"undefined"}},"qualification":null},{"reference":{"otherSlice":4136673170685477501},"usedName":{"constructorName":{"identifier":"Tip"},"constructorTypeName":{"identifier":"Map"}},"qualification":null},{"reference":{"builtinModule":"GHC.Err"},"usedName":{"valueName":{"identifier":"error"}},"qualification":null},{"reference":{"otherSlice":4136673170685477501},"usedName":{"constructorName":{"identifier":"Bin"},"constructorTypeName":{"identifier":"Map"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"identifier":"compare"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"LT"},"constructorTypeName":{"identifier":"Ordering"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"GT"},"constructorTypeName":{"identifier":"Ordering"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"-"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"EQ"},"constructorTypeName":{"identifier":"Ordering"}},"qualification":null},{"reference":{"otherSlice":7731230939223376313},"usedName":{"valueName":{"identifier":"size"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null},{"reference":{"otherSlice":4136673170685477501},"usedName":{"typeName":{"identifier":"Map"}},"qualification":null}],"fragment":["elemAt :: Int -> Map k a -> (k, a)","elemAt arg _ | arg `seq` False = undefined\nelemAt _ Tip = error \"Map.elemAt: index out of range\"\nelemAt i (Bin _ kx x l r)\n  = case compare i sizeL of\n        LT -> elemAt i l\n        GT -> elemAt (i - sizeL - 1) r\n        EQ -> (kx, x)\n  where sizeL = size l"],"instances":[],"language":{"extensions":["DeriveDataTypeable","StandaloneDeriving","RoleAnnotations","TypeFamilies","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}