{"sliceID":2101366213121832912,"uses":[{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Alternative"}},"qualification":null},{"reference":{"otherSlice":7949339268674780491},"usedName":{"typeName":{"identifier":"Get"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"empty"}},"qualification":null},{"reference":{"otherSlice":7949339268674780491},"usedName":{"constructorName":{"identifier":"C"},"constructorTypeName":{"identifier":"Get"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":4921503095993748944},"usedName":{"constructorName":{"identifier":"Fail"},"constructorTypeName":{"identifier":"Decoder"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"<|>"}},"qualification":null},{"reference":{"otherSlice":431775112842993490},"usedName":{"valueName":{"identifier":"runAndKeepTrack"}},"qualification":null},{"reference":{"otherSlice":4921503095993748944},"usedName":{"constructorName":{"identifier":"Done"},"constructorTypeName":{"identifier":"Decoder"}},"qualification":null},{"reference":{"otherSlice":8492933968284039664},"usedName":{"valueName":{"identifier":"pushBack"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":">>"}},"qualification":null},{"reference":{"builtinModule":"GHC.Err"},"usedName":{"valueName":{"identifier":"error"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"some"}},"qualification":null},{"reference":{"builtinModule":"Data.Functor"},"usedName":{"valueName":{"operator":"<$>"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"<*>"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"many"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"pure"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Nothing"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null}],"fragment":["instance Alternative Get where\n        empty\n          = C $ \\ inp _ks -> Fail inp \"Data.Binary.Get(Alternative).empty\"\n        \n        {-# INLINE empty #-}\n        (<|>) f g\n          = do (decoder, bs) <- runAndKeepTrack f\n               case decoder of\n                   Done inp x -> C $ \\ _ ks -> ks inp x\n                   Fail _ _ -> pushBack bs >> g\n                   _ -> error \"Binary: impossible\"\n        \n        {-# INLINE (<|>) #-}\n        some p = (:) <$> p <*> many p\n        \n        {-# INLINE some #-}\n        many p\n          = do v <- (Just <$> p) <|> pure Nothing\n               case v of\n                   Nothing -> pure []\n                   Just x -> (:) x <$> many p\n        \n        {-# INLINE many #-}"],"instances":[],"language":{"extensions":["RankNTypes","MagicHash","BangPatterns","TypeFamilies","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":true}}