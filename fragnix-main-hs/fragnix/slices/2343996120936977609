{"sliceID":2343996120936977609,"uses":[{"reference":{"otherSlice":1673753023314990609},"usedName":{"constructorName":{"identifier":"Node2"},"constructorTypeName":{"identifier":"Node"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"<"}},"qualification":null},{"reference":{"otherSlice":2368152319216379417},"usedName":{"constructorName":{"identifier":"InsOne"},"constructorTypeName":{"identifier":"Ins"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"otherSlice":2368152319216379417},"usedName":{"constructorName":{"identifier":"InsTwo"},"constructorTypeName":{"identifier":"Ins"}},"qualification":null},{"reference":{"otherSlice":1673753023314990609},"usedName":{"constructorName":{"identifier":"Node3"},"constructorTypeName":{"identifier":"Node"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"-"}},"qualification":null},{"reference":{"otherSlice":2658389187921074114},"usedName":{"valueName":{"identifier":"size"}},"qualification":null},{"reference":{"otherSlice":4520913892942188981},"usedName":{"valueName":{"identifier":"node2"}},"qualification":null},{"reference":{"otherSlice":2658389187921074114},"usedName":{"typeName":{"identifier":"Sized"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null},{"reference":{"otherSlice":2368152319216379417},"usedName":{"typeName":{"identifier":"Ins"}},"qualification":null},{"reference":{"otherSlice":1673753023314990609},"usedName":{"typeName":{"identifier":"Node"}},"qualification":null}],"fragment":["insNode ::\n          Sized a => (Int -> a -> Ins a) -> Int -> Node a -> Ins (Node a)","insNode f i (Node2 s a b)\n  | i < sa =\n    case f i a of\n        InsOne n -> InsOne $ Node2 (s + 1) n b\n        InsTwo m n -> InsOne $ Node3 (s + 1) m n b\n  | otherwise =\n    case f (i - sa) b of\n        InsOne n -> InsOne $ Node2 (s + 1) a n\n        InsTwo m n -> InsOne $ Node3 (s + 1) a m n\n  where sa = size a\ninsNode f i (Node3 s a b c)\n  | i < sa =\n    case f i a of\n        InsOne n -> InsOne $ Node3 (s + 1) n b c\n        InsTwo m n -> InsTwo (Node2 (sa + 1) m n) (Node2 (s - sa) b c)\n  | i < sab =\n    case f (i - sa) b of\n        InsOne n -> InsOne $ Node3 (s + 1) a n c\n        InsTwo m n -> InsTwo am nc\n          where !am = node2 a m\n                !nc = node2 n c\n  | otherwise =\n    case f (i - sab) c of\n        InsOne n -> InsOne $ Node3 (s + 1) a b n\n        InsTwo m n -> InsTwo (Node2 sab a b) (Node2 (s - sab + 1) m n)\n  where sa = size a\n        sab = sa + size b"],"instances":[],"language":{"extensions":["BangPatterns","DeriveDataTypeable","StandaloneDeriving","FlexibleInstances","ScopedTypeVariables","DeriveGeneric","TypeFamilies","PatternSynonyms","ViewPatterns","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}