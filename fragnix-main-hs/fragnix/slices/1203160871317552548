{"sliceID":1203160871317552548,"uses":[{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Applicative"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Monad"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Functor"}},"qualification":null},{"reference":{"otherSlice":7341538116301593995},"usedName":{"typeName":{"identifier":"WhenMissing"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"fmap"}},"qualification":null},{"reference":{"otherSlice":2828559908132936784},"usedName":{"valueName":{"identifier":"mapWhenMissing"}},"qualification":null}],"fragment":["instance (Applicative f, Monad f) => Functor (WhenMissing f x)\n         where\n        fmap = mapWhenMissing\n        \n        {-# INLINE fmap #-}"],"instances":[],"language":{"extensions":["BangPatterns","MagicHash","DeriveDataTypeable","StandaloneDeriving","ScopedTypeVariables","TypeFamilies","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":true}}