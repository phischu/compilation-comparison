{"sliceID":5837283424237555309,"uses":[{"reference":{"builtinModule":"GHC.Arr"},"usedName":{"valueName":{"identifier":"index"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"<="}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"&&"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"<"}},"qualification":null},{"reference":{"builtinModule":"GHC.Err"},"usedName":{"valueName":{"identifier":"error"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"++"}},"qualification":null},{"reference":{"builtinModule":"GHC.Show"},"usedName":{"valueName":{"identifier":"show"}},"qualification":null},{"reference":{"builtinModule":"GHC.Arr"},"usedName":{"typeName":{"identifier":"Ix"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null}],"fragment":["safeIndex :: Ix i => (i, i) -> Int -> i -> Int","safeIndex (l, u) n i\n  = let i' = index (l, u) i in\n      if (0 <= i') && (i' < n) then i' else\n        error\n          (\"Error in array index; \" ++\n             show i' ++ \" not in range [0..\" ++ show n ++ \")\")"],"instances":[],"language":{"extensions":["BangPatterns","RankNTypes","MagicHash","UnboxedTuples","MultiParamTypeClasses","FlexibleInstances","FlexibleContexts","DeriveDataTypeable","UnliftedFFITypes","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}