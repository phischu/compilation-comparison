{"sliceID":7212622241587829201,"uses":[{"reference":{"builtinModule":"Foreign.Storable"},"usedName":{"typeName":{"identifier":"Storable"}},"qualification":null},{"reference":{"otherSlice":8572689894313737623},"usedName":{"typeName":{"identifier":"Vector"}},"qualification":"G"},{"reference":{"otherSlice":2265400262385971575},"usedName":{"typeName":{"identifier":"Vector"}},"qualification":null},{"reference":{"otherSlice":8572689894313737623},"usedName":{"valueName":{"identifier":"basicUnsafeFreeze"}},"qualification":"G"},{"reference":{"otherSlice":9042026691638763239},"usedName":{"constructorName":{"identifier":"MVector"},"constructorTypeName":{"identifier":"MVector"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":2265400262385971575},"usedName":{"constructorName":{"identifier":"Vector"},"constructorTypeName":{"identifier":"Vector"}},"qualification":null},{"reference":{"otherSlice":8572689894313737623},"usedName":{"valueName":{"identifier":"basicUnsafeThaw"}},"qualification":"G"},{"reference":{"otherSlice":8572689894313737623},"usedName":{"valueName":{"identifier":"basicLength"}},"qualification":"G"},{"reference":{"otherSlice":8572689894313737623},"usedName":{"valueName":{"identifier":"basicUnsafeSlice"}},"qualification":"G"},{"reference":{"otherSlice":6341044847400351482},"usedName":{"valueName":{"identifier":"updPtr"}},"qualification":null},{"reference":{"builtinModule":"Foreign.Marshal.Array"},"usedName":{"valueName":{"identifier":"advancePtr"}},"qualification":null},{"reference":{"otherSlice":8572689894313737623},"usedName":{"valueName":{"identifier":"basicUnsafeIndexM"}},"qualification":"G"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null},{"reference":{"otherSlice":6159833730631848215},"usedName":{"valueName":{"identifier":"unsafeInlineIO"}},"qualification":null},{"reference":{"builtinModule":"Foreign.ForeignPtr"},"usedName":{"valueName":{"identifier":"withForeignPtr"}},"qualification":null},{"reference":{"builtinModule":"Foreign.Storable"},"usedName":{"valueName":{"identifier":"peekElemOff"}},"qualification":null},{"reference":{"otherSlice":8572689894313737623},"usedName":{"valueName":{"identifier":"basicUnsafeCopy"}},"qualification":"G"},{"reference":{"otherSlice":422491936881079880},"usedName":{"valueName":{"identifier":"unsafePrimToPrim"}},"qualification":null},{"reference":{"builtinModule":"Foreign.Marshal.Array"},"usedName":{"valueName":{"identifier":"copyArray"}},"qualification":null},{"reference":{"otherSlice":8572689894313737623},"usedName":{"valueName":{"identifier":"elemseq"}},"qualification":"G"},{"reference":{"builtinModule":"GHC.Prim"},"usedName":{"valueName":{"identifier":"seq"}},"qualification":null}],"fragment":["instance Storable a => G.Vector Vector a where\n        {-# INLINE basicUnsafeFreeze #-}\n        basicUnsafeFreeze (MVector n fp) = return $ Vector n fp\n        \n        {-# INLINE basicUnsafeThaw #-}\n        basicUnsafeThaw (Vector n fp) = return $ MVector n fp\n        \n        {-# INLINE basicLength #-}\n        basicLength (Vector n _) = n\n        \n        {-# INLINE basicUnsafeSlice #-}\n        basicUnsafeSlice i n (Vector _ fp)\n          = Vector n (updPtr (`advancePtr` i) fp)\n        \n        {-# INLINE basicUnsafeIndexM #-}\n        basicUnsafeIndexM (Vector _ fp) i\n          = return . unsafeInlineIO $\n              withForeignPtr fp $ \\ p -> peekElemOff p i\n        \n        {-# INLINE basicUnsafeCopy #-}\n        basicUnsafeCopy (MVector n fp) (Vector _ fq)\n          = unsafePrimToPrim $\n              withForeignPtr fp $\n                \\ p -> withForeignPtr fq $ \\ q -> copyArray p q n\n        \n        {-# INLINE elemseq #-}\n        elemseq _ = seq"],"instances":[],"language":{"extensions":["DeriveDataTypeable","MultiParamTypeClasses","FlexibleInstances","TypeFamilies","Rank2Types","ScopedTypeVariables","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":true}}