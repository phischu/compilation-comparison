{"sliceID":7226646211747264862,"uses":[{"reference":{"otherSlice":7128616736445371295},"usedName":{"typeName":{"identifier":"Substitution"}},"qualification":null},{"reference":{"otherSlice":4010822550476529195},"usedName":{"typeName":{"identifier":"ByteString"}},"qualification":"S"},{"reference":{"otherSlice":7128616736445371295},"usedName":{"valueName":{"identifier":"substitution"}},"qualification":null},{"reference":{"otherSlice":7202692338078551997},"usedName":{"valueName":{"identifier":"null"}},"qualification":"S"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"id"}},"qualification":null},{"reference":{"otherSlice":7128616736445371295},"usedName":{"valueName":{"identifier":"prependCycle"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"otherSlice":7233619382983855062},"usedName":{"constructorName":{"identifier":"Chunk"},"constructorTypeName":{"identifier":"ByteString"}},"qualification":"LI"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"const"}},"qualification":null}],"fragment":["instance Substitution S.ByteString where\n        {-# INLINE substitution #-}\n        substitution sub = if S.null sub then id else (sub :)\n        \n        {-# INLINE prependCycle #-}\n        prependCycle sub\n          | S.null sub = id\n          | otherwise = let c = LI.Chunk sub c in const c"],"instances":[],"language":{"extensions":["BangPatterns","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":true}}