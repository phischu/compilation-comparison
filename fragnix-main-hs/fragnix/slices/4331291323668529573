{"sliceID":4331291323668529573,"uses":[{"reference":{"otherSlice":570518295271606407},"usedName":{"valueName":{"identifier":"unstream"}},"qualification":null},{"reference":{"otherSlice":7234158208436886135},"usedName":{"valueName":{"identifier":"zipWith"}},"qualification":"S"},{"reference":{"otherSlice":1520869350613608534},"usedName":{"valueName":{"identifier":"stream"}},"qualification":null},{"reference":{"otherSlice":8373764884202541830},"usedName":{"valueName":{"identifier":"safe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Char"}},"qualification":null},{"reference":{"otherSlice":6742866475076404776},"usedName":{"typeName":{"identifier":"Text"}},"qualification":null}],"fragment":["zipWith :: (Char -> Char -> Char) -> Text -> Text -> Text","zipWith f t1 t2 = unstream (S.zipWith g (stream t1) (stream t2))\n  where g a b = safe (f a b)"],"instances":[],"language":{"extensions":["BangPatterns","MagicHash","Rank2Types","UnboxedTuples","TypeFamilies","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}