{"sliceID":2014807878880407586,"uses":[{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"map"}},"qualification":"L"},{"reference":{"otherSlice":1699226608098321587},"usedName":{"constructorName":{"identifier":"Chunk"},"constructorTypeName":{"identifier":"ByteString"}},"qualification":null},{"reference":{"otherSlice":8780647325398108823},"usedName":{"valueName":{"identifier":"pack"}},"qualification":"S"},{"reference":{"otherSlice":1699226608098321587},"usedName":{"constructorName":{"identifier":"Empty"},"constructorTypeName":{"identifier":"ByteString"}},"qualification":null},{"reference":{"builtinModule":"Data.List"},"usedName":{"valueName":{"identifier":"transpose"}},"qualification":"L"},{"reference":{"otherSlice":3338660878802002431},"usedName":{"valueName":{"identifier":"unpack"}},"qualification":null},{"reference":{"otherSlice":1699226608098321587},"usedName":{"typeName":{"identifier":"ByteString"}},"qualification":null}],"fragment":["transpose :: [ByteString] -> [ByteString]","transpose css\n  = L.map (\\ ss -> Chunk (S.pack ss) Empty)\n      (L.transpose (L.map unpack css))"],"instances":[],"language":{"extensions":["BangPatterns","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}