{"sliceID":4287528290092028173,"uses":[{"reference":{"otherSlice":5700351957984311116},"usedName":{"constructorName":{"identifier":"Empty"},"constructorTypeName":{"identifier":"Text"}},"qualification":null},{"reference":{"otherSlice":474174981983019733},"usedName":{"valueName":{"identifier":"break"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"otherSlice":1387446761652390923},"usedName":{"valueName":{"identifier":"null"}},"qualification":null},{"reference":{"otherSlice":8959239926898704682},"usedName":{"valueName":{"identifier":"tail"}},"qualification":null},{"reference":{"otherSlice":5700351957984311116},"usedName":{"typeName":{"identifier":"Text"}},"qualification":null}],"fragment":["lines :: Text -> [Text]","lines Empty = []\nlines t\n  = let (l, t') = break ((==) '\\n') t in\n      l : if null t' then [] else lines (tail t')"],"instances":[],"language":{"extensions":["BangPatterns","MagicHash","TypeFamilies","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}