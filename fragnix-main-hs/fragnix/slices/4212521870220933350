{"sliceID":4212521870220933350,"uses":[{"reference":{"builtinModule":"GHC.Prim"},"usedName":{"valueName":{"identifier":"seq"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":3289594752393879501},"usedName":{"valueName":{"identifier":"unstream"}},"qualification":null},{"reference":{"otherSlice":8357284942571642768},"usedName":{"valueName":{"identifier":"unbox"}},"qualification":"Stream"},{"reference":{"otherSlice":5547148833897725503},"usedName":{"valueName":{"identifier":"map"}},"qualification":"Stream"},{"reference":{"otherSlice":2700673456966481432},"usedName":{"valueName":{"identifier":"stream"}},"qualification":null},{"reference":{"otherSlice":7763721027765810954},"usedName":{"valueName":{"identifier":"length"}},"qualification":null},{"reference":{"otherSlice":7169136477039637979},"usedName":{"valueName":{"identifier":"checkIndex"}},"qualification":"Ck"},{"reference":{"otherSlice":4579156144394400265},"usedName":{"constructorName":{"identifier":"Bounds"},"constructorTypeName":{"identifier":"Checks"}},"qualification":"Ck"},{"reference":{"otherSlice":8934491602005769172},"usedName":{"valueName":{"identifier":"basicUnsafeIndexM"}},"qualification":null},{"reference":{"otherSlice":8934491602005769172},"usedName":{"typeName":{"identifier":"Vector"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null}],"fragment":["backpermute :: (Vector v a, Vector v Int) => v a -> v Int -> v a","backpermute v is\n  = seq v $\n      seq n $ unstream $ Stream.unbox $ Stream.map index $ stream is\n  where n = length v\n        \n        {-# INLINE index #-}\n        index i\n          = ((Ck.checkIndex \"Data/Vector/Generic.hs\" 924) Ck.Bounds)\n              \"backpermute\"\n              i\n              n\n              $ basicUnsafeIndexM v i"],"instances":[],"language":{"extensions":["DeriveDataTypeable","Rank2Types","MultiParamTypeClasses","FlexibleContexts","TypeFamilies","ScopedTypeVariables","BangPatterns","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}