{"sliceID":1996462680666778825,"uses":[{"reference":{"otherSlice":9209112058599157037},"usedName":{"constructorName":{"identifier":"Stream"},"constructorTypeName":{"identifier":"Stream"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"<"}},"qualification":null},{"reference":{"otherSlice":5324811590526126075},"usedName":{"valueName":{"identifier":"error"}},"qualification":"Ck"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"otherSlice":4403806992152239558},"usedName":{"constructorName":{"identifier":"SPEC"},"constructorTypeName":{"identifier":"SPEC"}},"qualification":null},{"reference":{"builtinModule":"GHC.Prim"},"usedName":{"valueName":{"identifier":"seq"}},"qualification":null},{"reference":{"otherSlice":6240008831363963322},"usedName":{"constructorName":{"identifier":"Yield"},"constructorTypeName":{"identifier":"Step"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"-"}},"qualification":null},{"reference":{"otherSlice":6240008831363963322},"usedName":{"constructorName":{"identifier":"Skip"},"constructorTypeName":{"identifier":"Step"}},"qualification":null},{"reference":{"otherSlice":6240008831363963322},"usedName":{"constructorName":{"identifier":"Done"},"constructorTypeName":{"identifier":"Step"}},"qualification":null},{"reference":{"otherSlice":8034283368639521573},"usedName":{"valueName":{"identifier":"emptyStream"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Monad"}},"qualification":null},{"reference":{"otherSlice":9209112058599157037},"usedName":{"typeName":{"identifier":"Stream"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null}],"fragment":["(!!) :: Monad m => Stream m a -> Int -> m a","Stream step s _ !! i\n  | i < 0 =\n    (Ck.error \"Data/Vector/Fusion/Stream/Monadic.hs\" 267) \"!!\"\n      \"negative index\"\n  | otherwise = index_loop SPEC s i\n  where index_loop !sPEC s i\n          = i `seq`\n              do r <- step s\n                 case r of\n                     Yield x s' | i == 0 -> return x\n                                | otherwise -> index_loop SPEC s' (i - 1)\n                     Skip s' -> index_loop SPEC s' i\n                     Done -> (\\ s ->\n                                (Ck.error \"Data/Vector/Fusion/Stream/Monadic.hs\" 278) s\n                                  emptyStream)\n                               \"!!\"","infixl 9 !!"],"instances":[],"language":{"extensions":["DeriveDataTypeable","ExistentialQuantification","Rank2Types","BangPatterns","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}