{"sliceID":2165518422164716679,"uses":[{"reference":{"otherSlice":8740394870002865249},"usedName":{"constructorName":{"identifier":"TimeDiff"},"constructorTypeName":{"identifier":"TimeDiff"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"++"}},"qualification":null},{"reference":{"builtinModule":"Data.Tuple"},"usedName":{"valueName":{"identifier":"fst"}},"qualification":null},{"reference":{"otherSlice":5299312495187524346},"usedName":{"valueName":{"identifier":"months"}},"qualification":null},{"reference":{"builtinModule":"GHC.List"},"usedName":{"valueName":{"operator":"!!"}},"qualification":null},{"reference":{"builtinModule":"GHC.Enum"},"usedName":{"valueName":{"identifier":"fromEnum"}},"qualification":null},{"reference":{"builtinModule":"Data.Tuple"},"usedName":{"valueName":{"identifier":"snd"}},"qualification":null},{"reference":{"otherSlice":1560967912060044509},"usedName":{"valueName":{"identifier":"show2"}},"qualification":null},{"reference":{"builtinModule":"GHC.Real"},"usedName":{"valueName":{"identifier":"quot"}},"qualification":null},{"reference":{"otherSlice":1560967912060044509},"usedName":{"valueName":{"identifier":"show2'"}},"qualification":null},{"reference":{"otherSlice":6879257369189080626},"usedName":{"valueName":{"identifier":"to12"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"<"}},"qualification":null},{"reference":{"otherSlice":5299312495187524346},"usedName":{"valueName":{"identifier":"amPm"}},"qualification":null},{"reference":{"otherSlice":5299312495187524346},"usedName":{"valueName":{"identifier":"time12Fmt"}},"qualification":null},{"reference":{"otherSlice":5299312495187524346},"usedName":{"valueName":{"identifier":"timeFmt"}},"qualification":null},{"reference":{"otherSlice":5299312495187524346},"usedName":{"valueName":{"identifier":"dateFmt"}},"qualification":null},{"reference":{"builtinModule":"GHC.Show"},"usedName":{"valueName":{"identifier":"show"}},"qualification":null},{"reference":{"builtinModule":"GHC.Real"},"usedName":{"valueName":{"identifier":"rem"}},"qualification":null},{"reference":{"builtinModule":"Data.Foldable"},"usedName":{"valueName":{"identifier":"foldr"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"/="}},"qualification":null},{"reference":{"builtinModule":"Data.Foldable"},"usedName":{"valueName":{"identifier":"null"}},"qualification":null},{"reference":{"builtinModule":"GHC.List"},"usedName":{"valueName":{"identifier":"zip"}},"qualification":null},{"reference":{"otherSlice":5299312495187524346},"usedName":{"valueName":{"identifier":"intervals"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"identifier":"abs"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"otherSlice":5299312495187524346},"usedName":{"typeName":{"identifier":"TimeLocale"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"String"}},"qualification":null},{"reference":{"otherSlice":8740394870002865249},"usedName":{"typeName":{"identifier":"TimeDiff"}},"qualification":null}],"fragment":["formatTimeDiff :: TimeLocale -> String -> TimeDiff -> String","formatTimeDiff l fmt (TimeDiff year month day hour minute sec _)\n  = doFmt fmt\n  where doFmt \"\" = \"\"\n        doFmt ('%' : ('-' : cs)) = doFmt ('%' : cs)\n        doFmt ('%' : ('_' : cs)) = doFmt ('%' : cs)\n        doFmt ('%' : (c : cs)) = decode c ++ doFmt cs\n        doFmt (c : cs) = c : doFmt cs\n        decode spec\n          = case spec of\n                'B' -> fst (months l !! fromEnum month)\n                'b' -> snd (months l !! fromEnum month)\n                'h' -> snd (months l !! fromEnum month)\n                'c' -> defaultTimeDiffFmt\n                'C' -> show2 (year `quot` 100)\n                'D' -> doFmt \"%m/%d/%y\"\n                'd' -> show2 day\n                'e' -> show2' day\n                'H' -> show2 hour\n                'I' -> show2 (to12 hour)\n                'k' -> show2' hour\n                'l' -> show2' (to12 hour)\n                'M' -> show2 minute\n                'm' -> show2 (fromEnum month + 1)\n                'n' -> \"\\n\"\n                'p' -> (if hour < 12 then fst else snd) (amPm l)\n                'R' -> doFmt \"%H:%M\"\n                'r' -> doFmt (time12Fmt l)\n                'T' -> doFmt \"%H:%M:%S\"\n                't' -> \"\\t\"\n                'S' -> show2 sec\n                's' -> show2 sec\n                'X' -> doFmt (timeFmt l)\n                'x' -> doFmt (dateFmt l)\n                'Y' -> show year\n                'y' -> show2 (year `rem` 100)\n                '%' -> \"%\"\n                c -> [c]\n        defaultTimeDiffFmt\n          = foldr\n              (\\ (v, s) rest ->\n                 (if v /= 0 then\n                    show v ++ ' ' : (addS v s) ++ if null rest then \"\" else \", \" else\n                    \"\")\n                   ++ rest)\n              \"\"\n              (zip [year, month, day, hour, minute, sec] (intervals l))\n        addS v s = if abs v == 1 then fst s else snd s"],"instances":[],"language":{"extensions":["MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}