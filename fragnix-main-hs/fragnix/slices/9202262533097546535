{"sliceID":9202262533097546535,"uses":[{"reference":{"otherSlice":463669466912070098},"usedName":{"valueName":{"identifier":"unstream"}},"qualification":null},{"reference":{"otherSlice":3458543358991128398},"usedName":{"valueName":{"identifier":"zipWith"}},"qualification":"S"},{"reference":{"otherSlice":3233127925129004502},"usedName":{"valueName":{"identifier":"stream"}},"qualification":null},{"reference":{"otherSlice":8720616505311582446},"usedName":{"valueName":{"identifier":"safe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Char"}},"qualification":null},{"reference":{"otherSlice":2241541392207318616},"usedName":{"typeName":{"identifier":"Text"}},"qualification":null}],"fragment":["zipWith :: (Char -> Char -> Char) -> Text -> Text -> Text","zipWith f t1 t2 = unstream (S.zipWith g (stream t1) (stream t2))\n  where g a b = safe (f a b)"],"instances":[],"language":{"extensions":["BangPatterns","MagicHash","Rank2Types","UnboxedTuples","TypeFamilies","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}