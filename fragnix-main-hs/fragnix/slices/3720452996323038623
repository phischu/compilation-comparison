{"sliceID":3720452996323038623,"uses":[{"reference":{"otherSlice":2051332017860334620},"usedName":{"typeName":{"identifier":"Hashable"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"typeName":{"identifier":"Ord"}},"qualification":null},{"reference":{"otherSlice":3224449322082811614},"usedName":{"typeName":{"identifier":"HashPSQ"}},"qualification":null},{"reference":{"builtinModule":"Data.Foldable"},"usedName":{"valueName":{"identifier":"foldl'"}},"qualification":"List"},{"reference":{"otherSlice":3646349632437383194},"usedName":{"valueName":{"identifier":"insert"}},"qualification":null},{"reference":{"otherSlice":7820456539044770156},"usedName":{"valueName":{"identifier":"empty"}},"qualification":null}],"fragment":["fromList ::\n           (Hashable k, Ord k, Ord p) => [(k, p, v)] -> HashPSQ k p v","fromList = List.foldl' (\\ psq (k, p, x) -> insert k p x psq) empty"],"instances":[],"language":{"extensions":["BangPatterns","DeriveFoldable","DeriveFunctor","DeriveTraversable","GeneralizedNewtypeDeriving","ScopedTypeVariables","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}