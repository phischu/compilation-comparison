{"sliceID":8460516297508797621,"uses":[{"reference":{"otherSlice":6608281436314181672},"usedName":{"constructorName":{"identifier":"Bin"},"constructorTypeName":{"identifier":"IntSet"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"<"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":">="}},"qualification":null},{"reference":{"otherSlice":6608281436314181672},"usedName":{"constructorName":{"identifier":"Nil"},"constructorTypeName":{"identifier":"IntSet"}},"qualification":null},{"reference":{"otherSlice":3375575442947869067},"usedName":{"valueName":{"identifier":"nomatch"}},"qualification":null},{"reference":{"otherSlice":1287772372343768951},"usedName":{"valueName":{"identifier":"unsafeFindMin"}},"qualification":null},{"reference":{"otherSlice":6195802978181697411},"usedName":{"valueName":{"identifier":"zero"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"otherSlice":6608281436314181672},"usedName":{"constructorName":{"identifier":"Tip"},"constructorTypeName":{"identifier":"IntSet"}},"qualification":null},{"reference":{"otherSlice":629250103569612987},"usedName":{"valueName":{"identifier":"prefixOf"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"otherSlice":6018963610253929254},"usedName":{"valueName":{"identifier":"lowestBitSet"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"&&"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"/="}},"qualification":null},{"reference":{"otherSlice":1484799806282288272},"usedName":{"valueName":{"identifier":"bitmapOf"}},"qualification":null},{"reference":{"otherSlice":2863334397208359409},"usedName":{"valueName":{"identifier":"shiftLL"}},"qualification":null},{"reference":{"builtinModule":"Data.Bits"},"usedName":{"valueName":{"operator":".&."}},"qualification":null},{"reference":{"otherSlice":879198285250991989},"usedName":{"typeName":{"identifier":"Key"}},"qualification":null},{"reference":{"otherSlice":6608281436314181672},"usedName":{"typeName":{"identifier":"IntSet"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Maybe"}},"qualification":null}],"fragment":["lookupGT :: Key -> IntSet -> Maybe Key","lookupGT !x t\n  = case t of\n        Bin _ m l r | m < 0 -> if x >= 0 then go Nil l else go l r\n        _ -> go Nil t\n  where go def (Bin p m l r)\n          | nomatch x p m =\n            if x < p then unsafeFindMin l else unsafeFindMin def\n          | zero x m = go r l\n          | otherwise = go def r\n        go def (Tip kx bm)\n          | prefixOf x < kx = Just $ kx + lowestBitSet bm\n          | prefixOf x == kx && maskGT /= 0 = Just $ kx + lowestBitSet maskGT\n          | otherwise = unsafeFindMin def\n          where maskGT = (-((bitmapOf x) `shiftLL` 1)) .&. bm\n        go def Nil = unsafeFindMin def"],"instances":[],"language":{"extensions":["BangPatterns","MagicHash","DeriveDataTypeable","StandaloneDeriving","TypeFamilies","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}