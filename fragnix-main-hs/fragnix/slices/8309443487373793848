{"sliceID":8309443487373793848,"uses":[{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Monad"}},"qualification":null},{"reference":{"otherSlice":388257360811415830},"usedName":{"typeName":{"identifier":"Pass"}},"qualification":null},{"reference":{"otherSlice":994315449851869449},"usedName":{"typeName":{"identifier":"StateT"}},"qualification":null},{"reference":{"otherSlice":994315449851869449},"usedName":{"constructorName":{"identifier":"StateT"},"constructorTypeName":{"identifier":"StateT"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":994315449851869449},"usedName":{"valueName":{"identifier":"runStateT"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null}],"fragment":["liftPass :: (Monad m) => Pass w m (a, s) -> Pass w (StateT s m) a","liftPass pass m\n  = StateT $\n      \\ s ->\n        pass $\n          do ~((a, f), s') <- runStateT m s\n             return ((a, s'), f)"],"instances":[],"language":{"extensions":["AutoDeriveTypeable","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}