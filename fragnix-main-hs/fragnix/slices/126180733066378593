{"sliceID":126180733066378593,"uses":[{"reference":{"otherSlice":2958434577590642154},"usedName":{"valueName":{"identifier":"consume"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null},{"reference":{"otherSlice":7353466714985647728},"usedName":{"valueName":{"identifier":"mapM"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Monad"}},"qualification":null},{"reference":{"otherSlice":9209112058599157037},"usedName":{"typeName":{"identifier":"Stream"}},"qualification":null}],"fragment":["mapM_ :: Monad m => (a -> m b) -> Stream m a -> m ()","mapM_ m = consume . mapM m"],"instances":[],"language":{"extensions":["DeriveDataTypeable","ExistentialQuantification","Rank2Types","BangPatterns","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}