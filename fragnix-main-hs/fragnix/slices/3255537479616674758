{"sliceID":3255537479616674758,"uses":[{"reference":{"otherSlice":5590282854296136934},"usedName":{"typeName":{"identifier":"MonadWriter"}},"qualification":null},{"reference":{"otherSlice":3683352417831430289},"usedName":{"typeName":{"identifier":"CatchT"}},"qualification":null},{"reference":{"otherSlice":5590282854296136934},"usedName":{"valueName":{"identifier":"tell"}},"qualification":null},{"reference":{"otherSlice":1800817309688667062},"usedName":{"valueName":{"identifier":"lift"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null},{"reference":{"otherSlice":5590282854296136934},"usedName":{"valueName":{"identifier":"listen"}},"qualification":null},{"reference":{"otherSlice":8816826867614362110},"usedName":{"valueName":{"identifier":"mapCatchT"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"Prelude"},"usedName":{"valueName":{"operator":"$!"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"fmap"}},"qualification":null},{"reference":{"otherSlice":5590282854296136934},"usedName":{"valueName":{"identifier":"pass"}},"qualification":null},{"reference":{"builtinModule":"Data.Either"},"usedName":{"constructorName":{"identifier":"Left"},"constructorTypeName":{"identifier":"Either"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"id"}},"qualification":null},{"reference":{"builtinModule":"Data.Either"},"usedName":{"constructorName":{"identifier":"Right"},"constructorTypeName":{"identifier":"Either"}},"qualification":null},{"reference":{"otherSlice":5590282854296136934},"usedName":{"valueName":{"identifier":"writer"}},"qualification":null},{"reference":{"otherSlice":3683352417831430289},"usedName":{"constructorName":{"identifier":"CatchT"},"constructorTypeName":{"identifier":"CatchT"}},"qualification":null},{"reference":{"builtinModule":"Control.Monad"},"usedName":{"valueName":{"identifier":"liftM"}},"qualification":null}],"fragment":["instance MonadWriter w m => MonadWriter w (CatchT m) where\n        tell = lift . tell\n        listen\n          = mapCatchT $\n              \\ m ->\n                do (a, w) <- listen m\n                   return $! fmap (\\ r -> (r, w)) a\n        pass\n          = mapCatchT $\n              \\ m ->\n                pass $\n                  do a <- m\n                     return $!\n                       case a of\n                           Left l -> (Left l, id)\n                           Right (r, f) -> (Right r, f)\n        writer aw = CatchT (Right `liftM` writer aw)"],"instances":[],"language":{"extensions":["ExistentialQuantification","GeneralizedNewtypeDeriving","RankNTypes","FlexibleInstances","MultiParamTypeClasses","UndecidableInstances","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":true}}