{"sliceID":1012307484829865991,"uses":[{"reference":{"builtinModule":"Control.Exception.Base"},"usedName":{"valueName":{"identifier":"bracket"}},"qualification":null},{"reference":{"builtinModule":"Foreign.Marshal.Alloc"},"usedName":{"valueName":{"identifier":"mallocBytes"}},"qualification":null},{"reference":{"builtinModule":"Foreign.Marshal.Alloc"},"usedName":{"valueName":{"identifier":"free"}},"qualification":null},{"reference":{"otherSlice":7738683568662549835},"usedName":{"valueName":{"identifier":"encodeTokenHeader"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"True"},"constructorTypeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"otherSlice":4001600191833712380},"usedName":{"valueName":{"identifier":"create"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":7962159238439154152},"usedName":{"valueName":{"identifier":"memcpy"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO"},"usedName":{"valueName":{"identifier":"throwIO"}},"qualification":null},{"reference":{"otherSlice":3210954324554976950},"usedName":{"constructorName":{"identifier":"BufferOverrun"},"constructorTypeName":{"identifier":"BufferOverrun"}},"qualification":null},{"reference":{"otherSlice":3015404642924089020},"usedName":{"typeName":{"identifier":"EncodeStrategy"}},"qualification":null},{"reference":{"otherSlice":5333457547991929488},"usedName":{"typeName":{"identifier":"Size"}},"qualification":null},{"reference":{"otherSlice":6383363541455760455},"usedName":{"typeName":{"identifier":"DynamicTable"}},"qualification":null},{"reference":{"otherSlice":390496612234166211},"usedName":{"typeName":{"identifier":"TokenHeaderList"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null},{"reference":{"otherSlice":4010822550476529195},"usedName":{"typeName":{"identifier":"ByteString"}},"qualification":null}],"fragment":["encodeHeader' ::\n              EncodeStrategy ->\n                Size -> DynamicTable -> TokenHeaderList -> IO ByteString","encodeHeader' stgy siz dyntbl hs\n  = bracket (mallocBytes siz) free enc\n  where enc buf\n          = do (hs', len) <- encodeTokenHeader buf siz stgy True dyntbl hs\n               case hs' of\n                   [] -> create len $ \\ p -> memcpy p buf len\n                   _ -> throwIO BufferOverrun"],"instances":[],"language":{"extensions":["BangPatterns","RecordWildCards","OverloadedStrings","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}