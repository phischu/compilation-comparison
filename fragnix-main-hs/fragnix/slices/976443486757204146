{"sliceID":976443486757204146,"uses":[{"reference":{"builtinModule":"System.Posix.Types"},"usedName":{"constructorName":{"identifier":"Fd"},"constructorTypeName":{"identifier":"Fd"}},"qualification":null},{"reference":{"otherSlice":5674120762292140909},"usedName":{"valueName":{"identifier":"allocaLock"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"Foreign.C.Error"},"usedName":{"valueName":{"identifier":"throwErrnoIfMinus1_"}},"qualification":null},{"reference":{"builtinModule":"System.Posix.Internals"},"usedName":{"valueName":{"identifier":"c_fcntl_lock"}},"qualification":"Base"},{"reference":{"otherSlice":7295563205754627389},"usedName":{"valueName":{"identifier":"bytes2ProcessIDAndLock"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"otherSlice":9091617370991389952},"usedName":{"constructorName":{"identifier":"Unlock"},"constructorTypeName":{"identifier":"LockRequest"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Nothing"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"System.Posix.Types"},"usedName":{"typeName":{"identifier":"Fd"}},"qualification":null},{"reference":{"otherSlice":1379191574832500379},"usedName":{"typeName":{"identifier":"FileLock"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"System.Posix.Types"},"usedName":{"typeName":{"identifier":"ProcessID"}},"qualification":null}],"fragment":["getLock :: Fd -> FileLock -> IO (Maybe (ProcessID, FileLock))","getLock (Fd fd) lock\n  = allocaLock lock $\n      \\ p_flock ->\n        do throwErrnoIfMinus1_ \"getLock\" (Base.c_fcntl_lock fd (5) p_flock)\n           result <- bytes2ProcessIDAndLock p_flock\n           return (maybeResult result)\n  where maybeResult (_, (Unlock, _, _, _)) = Nothing\n        maybeResult x = Just x"],"instances":[],"language":{"extensions":["CApiFFI","NondecreasingIndentation","RecordWildCards","MultiParamTypeClasses","ExplicitForAll","PatternGuards"],"isInstance":false}}