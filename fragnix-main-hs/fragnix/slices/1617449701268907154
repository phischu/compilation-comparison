{"sliceID":1617449701268907154,"uses":[{"reference":{"otherSlice":3289594752393879501},"usedName":{"valueName":{"identifier":"unstream"}},"qualification":null},{"reference":{"otherSlice":8509850504912764963},"usedName":{"valueName":{"identifier":"zipWith3"}},"qualification":"Stream"},{"reference":{"builtinModule":"Data.Tuple"},"usedName":{"valueName":{"identifier":"uncurry"}},"qualification":null},{"reference":{"otherSlice":6886956920821305209},"usedName":{"valueName":{"identifier":"indexed"}},"qualification":"Stream"},{"reference":{"otherSlice":2700673456966481432},"usedName":{"valueName":{"identifier":"stream"}},"qualification":null},{"reference":{"otherSlice":8934491602005769172},"usedName":{"typeName":{"identifier":"Vector"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null}],"fragment":["izipWith3 ::\n            (Vector v a, Vector v b, Vector v c, Vector v d) =>\n            (Int -> a -> b -> c -> d) -> v a -> v b -> v c -> v d","izipWith3 f as bs cs\n  = unstream\n      (Stream.zipWith3 (uncurry f) (Stream.indexed (stream as))\n         (stream bs)\n         (stream cs))"],"instances":[],"language":{"extensions":["DeriveDataTypeable","Rank2Types","MultiParamTypeClasses","FlexibleContexts","TypeFamilies","ScopedTypeVariables","BangPatterns","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}