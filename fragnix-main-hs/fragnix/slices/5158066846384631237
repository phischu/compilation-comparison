{"sliceID":5158066846384631237,"uses":[{"reference":{"otherSlice":7867549863913549413},"usedName":{"constructorName":{"identifier":"MaybeT"},"constructorTypeName":{"identifier":"MaybeT"}},"qualification":null},{"reference":{"otherSlice":1241761596975731733},"usedName":{"constructorName":{"identifier":"ExceptT"},"constructorTypeName":{"identifier":"ExceptT"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"fmap"}},"qualification":null},{"reference":{"builtinModule":"Data.Maybe"},"usedName":{"valueName":{"identifier":"maybe"}},"qualification":null},{"reference":{"builtinModule":"Data.Either"},"usedName":{"constructorName":{"identifier":"Left"},"constructorTypeName":{"identifier":"Either"}},"qualification":null},{"reference":{"builtinModule":"Data.Either"},"usedName":{"constructorName":{"identifier":"Right"},"constructorTypeName":{"identifier":"Either"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Functor"}},"qualification":null},{"reference":{"otherSlice":7867549863913549413},"usedName":{"typeName":{"identifier":"MaybeT"}},"qualification":null},{"reference":{"otherSlice":1241761596975731733},"usedName":{"typeName":{"identifier":"ExceptT"}},"qualification":null}],"fragment":["maybeToExceptT :: (Functor m) => e -> MaybeT m a -> ExceptT e m a","maybeToExceptT e (MaybeT m)\n  = ExceptT $ fmap (maybe (Left e) Right) m"],"instances":[],"language":{"extensions":["AutoDeriveTypeable","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}