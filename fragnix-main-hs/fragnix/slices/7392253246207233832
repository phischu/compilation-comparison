{"sliceID":7392253246207233832,"uses":[{"reference":{"otherSlice":2795855979338359899},"usedName":{"valueName":{"identifier":"viewl"}},"qualification":null},{"reference":{"otherSlice":6408052984828414906},"usedName":{"constructorName":{"identifier":"EmptyL"},"constructorTypeName":{"identifier":"ViewL"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"otherSlice":1530965345057959329},"usedName":{"valueName":{"identifier":"empty"}},"qualification":null},{"reference":{"otherSlice":6408052984828414906},"usedName":{"constructorName":{"operator":":<"},"constructorTypeName":{"identifier":"ViewL"}},"qualification":null},{"reference":{"builtinModule":"GHC.List"},"usedName":{"valueName":{"identifier":"foldl"}},"qualification":"Prelude"},{"reference":{"otherSlice":3678145073151579799},"usedName":{"valueName":{"operator":"|>"}},"qualification":null},{"reference":{"otherSlice":2302287400431637102},"usedName":{"constructorName":{"identifier":"Node"},"constructorTypeName":{"identifier":"Tree"}},"qualification":null},{"reference":{"otherSlice":6408052984828414906},"usedName":{"valueName":{"operator":"<|"}},"qualification":null},{"reference":{"otherSlice":8468946667989408909},"usedName":{"typeName":{"identifier":"Seq"}},"qualification":null},{"reference":{"otherSlice":1403166512456590855},"usedName":{"valueName":{"identifier":"viewr"}},"qualification":null},{"reference":{"otherSlice":3678145073151579799},"usedName":{"constructorName":{"operator":":>"},"constructorTypeName":{"identifier":"ViewR"}},"qualification":null},{"reference":{"otherSlice":3678145073151579799},"usedName":{"constructorName":{"identifier":"EmptyR"},"constructorTypeName":{"identifier":"ViewR"}},"qualification":null},{"reference":{"builtinModule":"GHC.Err"},"usedName":{"valueName":{"identifier":"error"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Monad"}},"qualification":null},{"reference":{"otherSlice":2302287400431637102},"usedName":{"typeName":{"identifier":"Tree"}},"qualification":null}],"fragment":["unfoldForestQ ::\n                Monad m => (b -> m (a, [b])) -> Seq b -> m (Seq (Tree a))","unfoldForestQ f aQ\n  = case viewl aQ of\n        EmptyL -> return empty\n        a :< aQ' -> do (b, as) <- f a\n                       tQ <- unfoldForestQ f (Prelude.foldl (|>) aQ' as)\n                       let (tQ', ts) = splitOnto [] as tQ\n                       return (Node b ts <| tQ')\n  where splitOnto :: [a'] -> [b'] -> Seq a' -> (Seq a', [a'])\n        splitOnto as [] q = (q, as)\n        splitOnto as (_ : bs) q\n          = case viewr q of\n                q' :> a -> splitOnto (a : as) bs q'\n                EmptyR -> error \"unfoldForestQ\""],"instances":[],"language":{"extensions":["DeriveDataTypeable","StandaloneDeriving","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}