{"sliceID":2009395530579577230,"uses":[{"reference":{"otherSlice":7904902319851340863},"usedName":{"valueName":{"identifier":"streamingProcess"}},"qualification":null},{"reference":{"otherSlice":6708236748425787674},"usedName":{"valueName":{"identifier":"waitForStreamingProcess"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"builtinModule":"GHC.IO.Exception"},"usedName":{"constructorName":{"identifier":"ExitSuccess"},"constructorTypeName":{"identifier":"ExitCode"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"otherSlice":2071755692096765236},"usedName":{"valueName":{"identifier":"liftIO"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO"},"usedName":{"valueName":{"identifier":"throwIO"}},"qualification":null},{"reference":{"otherSlice":815915391623955740},"usedName":{"constructorName":{"identifier":"ProcessExitedUnsuccessfully"},"constructorTypeName":{"identifier":"ProcessExitedUnsuccessfully"}},"qualification":null},{"reference":{"otherSlice":5822675882430045973},"usedName":{"typeName":{"identifier":"InputSource"}},"qualification":null},{"reference":{"otherSlice":1376305120464643270},"usedName":{"typeName":{"identifier":"OutputSink"}},"qualification":null},{"reference":{"otherSlice":2071755692096765236},"usedName":{"typeName":{"identifier":"MonadIO"}},"qualification":null},{"reference":{"otherSlice":6581712628843041540},"usedName":{"typeName":{"identifier":"CreateProcess"}},"qualification":null}],"fragment":["withCheckedProcess ::\n                     (InputSource stdin, OutputSink stderr, OutputSink stdout,\n                      MonadIO m) =>\n                     CreateProcess -> (stdin -> stdout -> stderr -> m b) -> m b","withCheckedProcess cp f\n  = do (x, y, z, sph) <- streamingProcess cp\n       res <- f x y z\n       ec <- waitForStreamingProcess sph\n       if ec == ExitSuccess then return res else\n         liftIO $ throwIO $ ProcessExitedUnsuccessfully cp ec"],"instances":[],"language":{"extensions":["DeriveDataTypeable","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}