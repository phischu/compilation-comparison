{"sliceID":6906465692710437217,"uses":[{"reference":{"otherSlice":3267317497263209135},"usedName":{"valueName":{"identifier":"take"}},"qualification":null},{"reference":{"otherSlice":5753229042004659398},"usedName":{"valueName":{"identifier":"drop"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Monad"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null},{"reference":{"otherSlice":1254073128444822395},"usedName":{"typeName":{"identifier":"Stream"}},"qualification":null}],"fragment":["slice :: Monad m => Int -> Int -> Stream m a -> Stream m a","slice i n s = take n (drop i s)"],"instances":[],"language":{"extensions":["ExistentialQuantification","MultiParamTypeClasses","FlexibleInstances","Rank2Types","BangPatterns","KindSignatures","GADTs","ScopedTypeVariables","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}