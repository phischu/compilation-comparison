{"sliceID":3657530117263607528,"uses":[{"reference":{"otherSlice":3786418068262660356},"usedName":{"typeName":{"identifier":"MonadThrow"}},"qualification":null},{"reference":{"otherSlice":2180372455056153309},"usedName":{"typeName":{"identifier":"StateT"}},"qualification":"StrictS"},{"reference":{"otherSlice":3786418068262660356},"usedName":{"valueName":{"identifier":"throwM"}},"qualification":null},{"reference":{"otherSlice":1800817309688667062},"usedName":{"valueName":{"identifier":"lift"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null}],"fragment":["instance MonadThrow m => MonadThrow (StrictS.StateT s m) where\n        throwM e = lift $ throwM e"],"instances":[],"language":{"extensions":["ExistentialQuantification","GeneralizedNewtypeDeriving","RankNTypes","FlexibleInstances","MultiParamTypeClasses","UndecidableInstances","TypeFamilies","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":true}}