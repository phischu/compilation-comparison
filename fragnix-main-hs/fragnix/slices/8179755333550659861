{"sliceID":8179755333550659861,"uses":[{"reference":{"otherSlice":5841983516172584459},"usedName":{"constructorName":{"identifier":"Bundle"},"constructorTypeName":{"identifier":"Bundle"}},"qualification":null},{"reference":{"otherSlice":5841983516172584459},"usedName":{"valueName":{"identifier":"sElems"}},"qualification":null},{"reference":{"otherSlice":5841983516172584459},"usedName":{"valueName":{"identifier":"sChunks"}},"qualification":null},{"reference":{"otherSlice":5841983516172584459},"usedName":{"valueName":{"identifier":"sVector"}},"qualification":null},{"reference":{"otherSlice":5841983516172584459},"usedName":{"valueName":{"identifier":"sSize"}},"qualification":null},{"reference":{"otherSlice":620961646143439431},"usedName":{"valueName":{"identifier":"trans"}},"qualification":"S"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Monad"}},"qualification":null},{"reference":{"otherSlice":5841983516172584459},"usedName":{"typeName":{"identifier":"Bundle"}},"qualification":null}],"fragment":["trans ::\n        (Monad m, Monad m') =>\n        (forall z . m z -> m' z) -> Bundle m v a -> Bundle m' v a","trans f Bundle{sElems = s, sChunks = cs, sVector = v, sSize = n}\n  = Bundle{sElems = S.trans f s, sChunks = S.trans f cs, sVector = v,\n           sSize = n}"],"instances":[],"language":{"extensions":["ExistentialQuantification","MultiParamTypeClasses","FlexibleInstances","Rank2Types","BangPatterns","KindSignatures","GADTs","ScopedTypeVariables","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}