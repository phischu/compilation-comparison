{"sliceID":7517138161809758817,"uses":[{"reference":{"builtinModule":"Data.List"},"usedName":{"valueName":{"identifier":"foldl'"}},"qualification":"L"},{"reference":{"otherSlice":713557818113887187},"usedName":{"valueName":{"identifier":"unsafeInsertWith"}},"qualification":null},{"reference":{"otherSlice":7302492020694721467},"usedName":{"valueName":{"identifier":"empty"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"typeName":{"identifier":"Eq"}},"qualification":null},{"reference":{"otherSlice":7954954090554769191},"usedName":{"typeName":{"identifier":"Hashable"}},"qualification":null},{"reference":{"otherSlice":8924003398132186113},"usedName":{"typeName":{"identifier":"HashMap"}},"qualification":null}],"fragment":["fromListWith ::\n               (Eq k, Hashable k) => (v -> v -> v) -> [(k, v)] -> HashMap k v","fromListWith f\n  = L.foldl' (\\ m (k, v) -> unsafeInsertWith f k v m) empty"],"instances":[],"language":{"extensions":["BangPatterns","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}