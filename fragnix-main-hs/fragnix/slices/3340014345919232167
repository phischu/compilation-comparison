{"sliceID":3340014345919232167,"uses":[{"reference":{"otherSlice":2497553050502348575},"usedName":{"constructorName":{"identifier":"Deep"},"constructorTypeName":{"identifier":"FingerTree"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"*"}},"qualification":null},{"reference":{"otherSlice":3097725820661431075},"usedName":{"valueName":{"identifier":"size"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"fmap"}},"qualification":null},{"reference":{"otherSlice":4994558627574592646},"usedName":{"valueName":{"identifier":"squashL"}},"qualification":null},{"reference":{"otherSlice":6084418500882608444},"usedName":{"valueName":{"identifier":"squashR"}},"qualification":null},{"reference":{"otherSlice":86451487904028922},"usedName":{"valueName":{"identifier":"appendTree0"}},"qualification":null},{"reference":{"otherSlice":4965834656130480586},"usedName":{"valueName":{"identifier":"digitToNode"}},"qualification":null},{"reference":{"otherSlice":6823472599252253901},"usedName":{"valueName":{"identifier":"consTree"}},"qualification":null},{"reference":{"otherSlice":9166462973229140219},"usedName":{"valueName":{"identifier":"snocTree"}},"qualification":null},{"reference":{"otherSlice":8417511774493249737},"usedName":{"valueName":{"identifier":"trimTree"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":15288035080161556},"usedName":{"valueName":{"identifier":"mapMulFT"}},"qualification":null},{"reference":{"otherSlice":6500945367252731749},"usedName":{"constructorName":{"identifier":"Elem"},"constructorTypeName":{"identifier":"Elem"}},"qualification":null},{"reference":{"otherSlice":5458208752028987727},"usedName":{"valueName":{"identifier":"nodeToDigit"}},"qualification":null},{"reference":{"otherSlice":2497553050502348575},"usedName":{"constructorName":{"identifier":"Empty"},"constructorTypeName":{"identifier":"FingerTree"}},"qualification":null},{"reference":{"otherSlice":4603056598885952374},"usedName":{"constructorName":{"identifier":"Node2"},"constructorTypeName":{"identifier":"Node"}},"qualification":null},{"reference":{"otherSlice":2497553050502348575},"usedName":{"constructorName":{"identifier":"Single"},"constructorTypeName":{"identifier":"FingerTree"}},"qualification":null},{"reference":{"otherSlice":4603056598885952374},"usedName":{"constructorName":{"identifier":"Node3"},"constructorTypeName":{"identifier":"Node"}},"qualification":null},{"reference":{"builtinModule":"GHC.Err"},"usedName":{"valueName":{"identifier":"error"}},"qualification":null},{"reference":{"otherSlice":3097725820661431075},"usedName":{"typeName":{"identifier":"Sized"}},"qualification":null},{"reference":{"otherSlice":2497553050502348575},"usedName":{"typeName":{"identifier":"FingerTree"}},"qualification":null},{"reference":{"otherSlice":6500945367252731749},"usedName":{"typeName":{"identifier":"Elem"}},"qualification":null},{"reference":{"otherSlice":4603056598885952374},"usedName":{"typeName":{"identifier":"Node"}},"qualification":null}],"fragment":["aptyMiddle ::\n             Sized c =>\n             (c -> d) ->\n               (c -> d) ->\n                 ((a -> b) -> c -> d) ->\n                   FingerTree (Elem (a -> b)) -> FingerTree c -> FingerTree (Node d)","aptyMiddle firstf lastf map23 fs\n  (Deep s pr (Deep sm prm mm sfm) sf)\n  = Deep (sm + s * (size fs + 1)) (fmap (fmap firstf) prm)\n      (aptyMiddle (fmap firstf) (fmap lastf) (\\ f -> fmap (map23 f)) fs\n         (Deep s (squashL pr prm) mm (squashR sfm sf)))\n      (fmap (fmap lastf) sfm)\naptyMiddle firstf lastf map23 fs (Deep s pr m sf)\n  = fmap (fmap firstf) m `appendTree0`\n      ((fmap firstf (digitToNode sf) `consTree` middle) `snocTree`\n         fmap lastf (digitToNode pr))\n        `appendTree0` fmap (fmap lastf) m\n  where middle\n          = case\n              trimTree $\n                mapMulFT s (\\ (Elem f) -> fmap (fmap (map23 f)) converted) fs\n              of\n                (firstMapped, restMapped, lastMapped) -> Deep\n                                                           (size firstMapped + size restMapped +\n                                                              size lastMapped)\n                                                           (nodeToDigit firstMapped)\n                                                           restMapped\n                                                           (nodeToDigit lastMapped)\n        converted\n          = case m of\n                Empty -> Node2 s lconv rconv\n                Single q -> Node3 s lconv q rconv\n                Deep{} -> error \"aptyMiddle: impossible\"\n        lconv = digitToNode pr\n        rconv = digitToNode sf\naptyMiddle _ _ _ _ _\n  = error \"aptyMiddle: expected Deep finger tree\""],"instances":[],"language":{"extensions":["DeriveDataTypeable","StandaloneDeriving","TypeFamilies","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}