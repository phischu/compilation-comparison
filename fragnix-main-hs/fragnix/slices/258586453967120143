{"sliceID":258586453967120143,"uses":[{"reference":{"otherSlice":1924625844620005541},"usedName":{"valueName":{"identifier":"createProcess_"}},"qualification":null},{"reference":{"otherSlice":8941679778833995229},"usedName":{"valueName":{"identifier":"proc"}},"qualification":null},{"reference":{"otherSlice":6581712628843041540},"usedName":{"valueName":{"identifier":"cwd"}},"qualification":null},{"reference":{"otherSlice":6581712628843041540},"usedName":{"valueName":{"identifier":"env"}},"qualification":null},{"reference":{"otherSlice":6581712628843041540},"usedName":{"valueName":{"identifier":"std_in"}},"qualification":null},{"reference":{"otherSlice":6581712628843041540},"usedName":{"valueName":{"identifier":"std_out"}},"qualification":null},{"reference":{"otherSlice":6581712628843041540},"usedName":{"valueName":{"identifier":"std_err"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"Data.Maybe"},"usedName":{"typeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO.Handle.Types"},"usedName":{"typeName":{"identifier":"Handle"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null},{"reference":{"builtinModule":"Data.Maybe"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"/="}},"qualification":null},{"reference":{"builtinModule":"GHC.IO.Handle.FD"},"usedName":{"valueName":{"identifier":"stdin"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"&&"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO.Handle.FD"},"usedName":{"valueName":{"identifier":"stdout"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO.Handle.FD"},"usedName":{"valueName":{"identifier":"stderr"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO.Handle"},"usedName":{"valueName":{"identifier":"hClose"}},"qualification":null},{"reference":{"otherSlice":7909368277801858718},"usedName":{"typeName":{"identifier":"StdStream"}},"qualification":null},{"reference":{"builtinModule":"Data.Maybe"},"usedName":{"constructorName":{"identifier":"Nothing"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":7909368277801858718},"usedName":{"constructorName":{"identifier":"Inherit"},"constructorTypeName":{"identifier":"StdStream"}},"qualification":null},{"reference":{"otherSlice":7909368277801858718},"usedName":{"constructorName":{"identifier":"UseHandle"},"constructorTypeName":{"identifier":"StdStream"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO"},"usedName":{"typeName":{"identifier":"FilePath"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"String"}},"qualification":null},{"reference":{"otherSlice":2861246407237030394},"usedName":{"typeName":{"identifier":"ProcessHandle"}},"qualification":null}],"fragment":["runProcess ::\n           FilePath ->\n             [String] ->\n               Maybe FilePath ->\n                 Maybe [(String, String)] ->\n                   Maybe Handle -> Maybe Handle -> Maybe Handle -> IO ProcessHandle","runProcess cmd args mb_cwd mb_env mb_stdin mb_stdout mb_stderr\n  = do (_, _, _, ph) <- createProcess_ \"runProcess\"\n                          (proc cmd args){cwd = mb_cwd, env = mb_env,\n                                          std_in = mbToStd mb_stdin, std_out = mbToStd mb_stdout,\n                                          std_err = mbToStd mb_stderr}\n       maybeClose mb_stdin\n       maybeClose mb_stdout\n       maybeClose mb_stderr\n       return ph\n  where maybeClose :: Maybe Handle -> IO ()\n        maybeClose (Just hdl)\n          | hdl /= stdin && hdl /= stdout && hdl /= stderr = hClose hdl\n        maybeClose _ = return ()\n        \n        mbToStd :: Maybe Handle -> StdStream\n        mbToStd Nothing = Inherit\n        mbToStd (Just hdl) = UseHandle hdl"],"instances":[],"language":{"extensions":["ForeignFunctionInterface","InterruptibleFFI","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}