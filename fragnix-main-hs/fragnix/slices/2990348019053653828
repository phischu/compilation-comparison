{"sliceID":2990348019053653828,"uses":[{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":3095543664592725148},"usedName":{"valueName":{"operator":".:"}},"qualification":null},{"reference":{"otherSlice":400033489728798890},"usedName":{"valueName":{"identifier":"pack"}},"qualification":"T"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"String"}},"qualification":null}],"fragment":["getValField :: Name -> String -> [MatchQ] -> Q Exp","getValField obj valFieldName matches\n  = do val <- newName \"val\"\n       doE\n         [bindS (varP val) $\n            infixApp (varE obj) [| (.:) |]\n              ([| T.pack |] `appE` (litE $ stringL valFieldName)),\n          noBindS $ caseE (varE val) matches]"],"instances":[],"language":{"extensions":["FlexibleInstances","IncoherentInstances","NamedFieldPuns","NoImplicitPrelude","OverlappingInstances","TemplateHaskell","UndecidableInstances","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}