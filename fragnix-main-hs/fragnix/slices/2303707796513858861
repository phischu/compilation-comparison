{"sliceID":2303707796513858861,"uses":[{"reference":{"otherSlice":8429921323650608549},"usedName":{"typeName":{"identifier":"Prim"}},"qualification":null},{"reference":{"otherSlice":8572689894313737623},"usedName":{"typeName":{"identifier":"Vector"}},"qualification":"G"},{"reference":{"otherSlice":2904344098008077791},"usedName":{"typeName":{"identifier":"Vector"}},"qualification":null},{"reference":{"otherSlice":8572689894313737623},"usedName":{"valueName":{"identifier":"basicUnsafeFreeze"}},"qualification":"G"},{"reference":{"otherSlice":336859694209020552},"usedName":{"constructorName":{"identifier":"MVector"},"constructorTypeName":{"identifier":"MVector"}},"qualification":null},{"reference":{"otherSlice":2904344098008077791},"usedName":{"constructorName":{"identifier":"Vector"},"constructorTypeName":{"identifier":"Vector"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"liftM"}},"qualification":null},{"reference":{"otherSlice":6561866316209709552},"usedName":{"valueName":{"identifier":"unsafeFreezeByteArray"}},"qualification":null},{"reference":{"otherSlice":8572689894313737623},"usedName":{"valueName":{"identifier":"basicUnsafeThaw"}},"qualification":"G"},{"reference":{"otherSlice":4164087158177773617},"usedName":{"valueName":{"identifier":"unsafeThawByteArray"}},"qualification":null},{"reference":{"otherSlice":8572689894313737623},"usedName":{"valueName":{"identifier":"basicLength"}},"qualification":"G"},{"reference":{"otherSlice":8572689894313737623},"usedName":{"valueName":{"identifier":"basicUnsafeSlice"}},"qualification":"G"},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"otherSlice":8572689894313737623},"usedName":{"valueName":{"identifier":"basicUnsafeIndexM"}},"qualification":"G"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$!"}},"qualification":null},{"reference":{"otherSlice":2598691197376341929},"usedName":{"valueName":{"identifier":"indexByteArray"}},"qualification":null},{"reference":{"otherSlice":8572689894313737623},"usedName":{"valueName":{"identifier":"basicUnsafeCopy"}},"qualification":"G"},{"reference":{"otherSlice":565346906518096954},"usedName":{"valueName":{"identifier":"copyByteArray"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"*"}},"qualification":null},{"reference":{"otherSlice":4430519772844797516},"usedName":{"valueName":{"identifier":"sizeOf"}},"qualification":null},{"reference":{"builtinModule":"GHC.Err"},"usedName":{"valueName":{"identifier":"undefined"}},"qualification":null},{"reference":{"otherSlice":8572689894313737623},"usedName":{"valueName":{"identifier":"elemseq"}},"qualification":"G"},{"reference":{"builtinModule":"GHC.Prim"},"usedName":{"valueName":{"identifier":"seq"}},"qualification":null}],"fragment":["instance Prim a => G.Vector Vector a where\n        {-# INLINE basicUnsafeFreeze #-}\n        basicUnsafeFreeze (MVector i n marr)\n          = Vector i n `liftM` unsafeFreezeByteArray marr\n        \n        {-# INLINE basicUnsafeThaw #-}\n        basicUnsafeThaw (Vector i n arr)\n          = MVector i n `liftM` unsafeThawByteArray arr\n        \n        {-# INLINE basicLength #-}\n        basicLength (Vector _ n _) = n\n        \n        {-# INLINE basicUnsafeSlice #-}\n        basicUnsafeSlice j n (Vector i _ arr) = Vector (i + j) n arr\n        \n        {-# INLINE basicUnsafeIndexM #-}\n        basicUnsafeIndexM (Vector i _ arr) j\n          = return $! indexByteArray arr (i + j)\n        \n        {-# INLINE basicUnsafeCopy #-}\n        basicUnsafeCopy (MVector i n dst) (Vector j _ src)\n          = copyByteArray dst (i * sz) src (j * sz) (n * sz)\n          where sz = sizeOf (undefined :: a)\n        \n        {-# INLINE elemseq #-}\n        elemseq _ = seq"],"instances":[],"language":{"extensions":["DeriveDataTypeable","FlexibleInstances","MultiParamTypeClasses","TypeFamilies","ScopedTypeVariables","Rank2Types","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":true}}