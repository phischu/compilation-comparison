{"sliceID":2312013418844230568,"uses":[{"reference":{"otherSlice":8765721791877540981},"usedName":{"valueName":{"identifier":"toPair"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":13410505313944458},"usedName":{"constructorName":{"identifier":"Bin"},"constructorTypeName":{"identifier":"IntMap"}},"qualification":null},{"reference":{"otherSlice":2715173166319551379},"usedName":{"valueName":{"identifier":"nomatch"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Nothing"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":4609286002637564688},"usedName":{"constructorName":{"operator":":*:"},"constructorTypeName":{"identifier":"StrictPair"}},"qualification":null},{"reference":{"otherSlice":4717645055143425729},"usedName":{"valueName":{"identifier":"zero"}},"qualification":null},{"reference":{"otherSlice":9180391119564462737},"usedName":{"valueName":{"identifier":"binCheckLeft"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"otherSlice":8523020784116684802},"usedName":{"valueName":{"identifier":"binCheckRight"}},"qualification":null},{"reference":{"otherSlice":13410505313944458},"usedName":{"constructorName":{"identifier":"Tip"},"constructorTypeName":{"identifier":"IntMap"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":13410505313944458},"usedName":{"constructorName":{"identifier":"Nil"},"constructorTypeName":{"identifier":"IntMap"}},"qualification":null},{"reference":{"otherSlice":879198285250991989},"usedName":{"typeName":{"identifier":"Key"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":13410505313944458},"usedName":{"typeName":{"identifier":"IntMap"}},"qualification":null}],"fragment":["updateLookupWithKey ::\n                    (Key -> a -> Maybe a) -> Key -> IntMap a -> (Maybe a, IntMap a)","updateLookupWithKey f0 !k0 t0 = toPair $ go f0 k0 t0\n  where go f k t\n          = case t of\n                Bin p m l r | nomatch k p m -> (Nothing :*: t)\n                            | zero k m ->\n                              let (found :*: l') = go f k l in (found :*: binCheckLeft p m l' r)\n                            | otherwise ->\n                              let (found :*: r') = go f k r in (found :*: binCheckRight p m l r')\n                Tip ky y | k == ky ->\n                           case f k y of\n                               Just !y' -> (Just y :*: Tip ky y')\n                               Nothing -> (Just y :*: Nil)\n                         | otherwise -> (Nothing :*: t)\n                Nil -> (Nothing :*: Nil)"],"instances":[],"language":{"extensions":["BangPatterns","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}