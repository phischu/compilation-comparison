{"sliceID":3931742005049104901,"uses":[{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"-"}},"qualification":null},{"reference":{"builtinModule":"GHC.Real"},"usedName":{"valueName":{"identifier":"quot"}},"qualification":null},{"reference":{"builtinModule":"GHC.Prim"},"usedName":{"valueName":{"identifier":"seq"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"False"},"constructorTypeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"builtinModule":"GHC.Err"},"usedName":{"valueName":{"identifier":"undefined"}},"qualification":null},{"reference":{"otherSlice":1557111123846016502},"usedName":{"constructorName":{"identifier":"Nest"},"constructorTypeName":{"identifier":"Doc"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"otherSlice":1557111123846016502},"usedName":{"constructorName":{"identifier":"Empty"},"constructorTypeName":{"identifier":"Doc"}},"qualification":null},{"reference":{"otherSlice":1557111123846016502},"usedName":{"constructorName":{"identifier":"NilAbove"},"constructorTypeName":{"identifier":"Doc"}},"qualification":null},{"reference":{"otherSlice":4576460614619724940},"usedName":{"valueName":{"identifier":"nlText"}},"qualification":null},{"reference":{"otherSlice":1557111123846016502},"usedName":{"constructorName":{"identifier":"TextBeside"},"constructorTypeName":{"identifier":"Doc"}},"qualification":null},{"reference":{"otherSlice":3366325732880621462},"usedName":{"constructorName":{"identifier":"ZigZagMode"},"constructorTypeName":{"identifier":"Mode"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":">="}},"qualification":null},{"reference":{"otherSlice":8938860137574915935},"usedName":{"constructorName":{"identifier":"Str"},"constructorTypeName":{"identifier":"TextDetails"}},"qualification":null},{"reference":{"builtinModule":"GHC.List"},"usedName":{"valueName":{"identifier":"replicate"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"<"}},"qualification":null},{"reference":{"otherSlice":1557111123846016502},"usedName":{"constructorName":{"identifier":"Above"},"constructorTypeName":{"identifier":"Doc"}},"qualification":null},{"reference":{"builtinModule":"GHC.Err"},"usedName":{"valueName":{"identifier":"error"}},"qualification":null},{"reference":{"otherSlice":1557111123846016502},"usedName":{"constructorName":{"identifier":"Beside"},"constructorTypeName":{"identifier":"Doc"}},"qualification":null},{"reference":{"otherSlice":1557111123846016502},"usedName":{"constructorName":{"identifier":"NoDoc"},"constructorTypeName":{"identifier":"Doc"}},"qualification":null},{"reference":{"otherSlice":1557111123846016502},"usedName":{"constructorName":{"identifier":"Union"},"constructorTypeName":{"identifier":"Doc"}},"qualification":null},{"reference":{"otherSlice":3288181677325923649},"usedName":{"valueName":{"identifier":"indent"}},"qualification":null},{"reference":{"otherSlice":3366325732880621462},"usedName":{"typeName":{"identifier":"Mode"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null},{"reference":{"otherSlice":8938860137574915935},"usedName":{"typeName":{"identifier":"TextDetails"}},"qualification":null},{"reference":{"otherSlice":1557111123846016502},"usedName":{"typeName":{"identifier":"Doc"}},"qualification":null}],"fragment":["display ::\n        Mode -> Int -> Int -> (TextDetails -> a -> a) -> a -> Doc -> a","display m !page_width !ribbon_width txt end doc\n  = case page_width - ribbon_width of\n        gap_width -> case gap_width `quot` 2 of\n                         shift -> let lay k _ | k `seq` False = undefined\n                                      lay k (Nest k1 p) = lay (k + k1) p\n                                      lay _ Empty = end\n                                      lay k (NilAbove p) = nlText `txt` lay k p\n                                      lay k (TextBeside s sl p)\n                                        = case m of\n                                              ZigZagMode | k >= gap_width ->\n                                                           nlText `txt`\n                                                             (Str (replicate shift '/') `txt`\n                                                                (nlText `txt`\n                                                                   lay1 (k - shift) s sl p))\n                                                         | k < 0 ->\n                                                           nlText `txt`\n                                                             (Str (replicate shift '\\\\') `txt`\n                                                                (nlText `txt`\n                                                                   lay1 (k + shift) s sl p))\n                                              _ -> lay1 k s sl p\n                                      lay _ (Above{}) = error \"display lay Above\"\n                                      lay _ (Beside{}) = error \"display lay Beside\"\n                                      lay _ NoDoc = error \"display lay NoDoc\"\n                                      lay _ (Union{}) = error \"display lay Union\"\n                                      lay1 !k s !sl p\n                                        = let !r = k + sl in Str (indent k) `txt` (s `txt` lay2 r p)\n                                      lay2 k _ | k `seq` False = undefined\n                                      lay2 k (NilAbove p) = nlText `txt` lay k p\n                                      lay2 k (TextBeside s sl p) = s `txt` lay2 (k + sl) p\n                                      lay2 k (Nest _ p) = lay2 k p\n                                      lay2 _ Empty = end\n                                      lay2 _ (Above{}) = error \"display lay2 Above\"\n                                      lay2 _ (Beside{}) = error \"display lay2 Beside\"\n                                      lay2 _ NoDoc = error \"display lay2 NoDoc\"\n                                      lay2 _ (Union{}) = error \"display lay2 Union\"\n                                    in lay 0 doc"],"instances":[],"language":{"extensions":["BangPatterns","DeriveGeneric","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}