{"sliceID":7592847395682257009,"uses":[{"reference":{"otherSlice":8184865101111560075},"usedName":{"constructorName":{"identifier":"Parser"},"constructorTypeName":{"identifier":"Parser"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":6973050610896521593},"usedName":{"constructorName":{"identifier":"Complete"},"constructorTypeName":{"identifier":"More"}},"qualification":null},{"reference":{"otherSlice":6585257321125035627},"usedName":{"valueName":{"identifier":"prompt"}},"qualification":null},{"reference":{"otherSlice":122679094463524885},"usedName":{"typeName":{"identifier":"Chunk"}},"qualification":null},{"reference":{"otherSlice":8184865101111560075},"usedName":{"typeName":{"identifier":"Parser"}},"qualification":null}],"fragment":["demandInput :: Chunk t => Parser t ()","demandInput\n  = Parser $\n      \\ t pos more lose succ ->\n        case more of\n            Complete -> lose t pos more [] \"not enough input\"\n            _ -> let lose' t' pos' more'\n                       = lose t' pos' more' [] \"not enough input\"\n                     succ' t' pos' more' = succ t' pos' more' ()\n                   in prompt t pos more lose' succ'"],"instances":[],"language":{"extensions":["BangPatterns","ScopedTypeVariables","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}