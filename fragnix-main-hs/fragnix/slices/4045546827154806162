{"sliceID":4045546827154806162,"uses":[{"reference":{"otherSlice":7372302851638669756},"usedName":{"valueName":{"identifier":"getClientCookies"}},"qualification":null},{"reference":{"otherSlice":2494920314047720382},"usedName":{"valueName":{"identifier":"lookup"}},"qualification":"Map"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Nothing"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":194228022701405339},"usedName":{"valueName":{"identifier":"assertFailure"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"++"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":4585129306154310503},"usedName":{"valueName":{"identifier":"assertBool"}},"qualification":null},{"reference":{"builtinModule":"Data.Foldable"},"usedName":{"valueName":{"identifier":"concat"}},"qualification":null},{"reference":{"builtinModule":"GHC.Show"},"usedName":{"valueName":{"identifier":"show"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":3208799123422311968},"usedName":{"valueName":{"identifier":"setCookieValue"}},"qualification":"Cookie"},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"String"}},"qualification":null},{"reference":{"otherSlice":4010822550476529195},"usedName":{"typeName":{"identifier":"ByteString"}},"qualification":null},{"reference":{"otherSlice":8642581281670190790},"usedName":{"typeName":{"identifier":"Session"}},"qualification":null}],"fragment":["assertClientCookieValue ::\n                        String -> ByteString -> ByteString -> Session ()","assertClientCookieValue s cookieName cookieValue\n  = do cookies <- getClientCookies\n       case Map.lookup cookieName cookies of\n           Nothing -> assertFailure (s ++ \" (cookie does not exist)\")\n           Just c -> assertBool\n                       (concat\n                          [s, \" (actual value \", show $ Cookie.setCookieValue c,\n                           \" expected value \", show cookieValue, \")\"])\n                       (Cookie.setCookieValue c == cookieValue)"],"instances":[],"language":{"extensions":["OverloadedStrings","DeriveDataTypeable","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}