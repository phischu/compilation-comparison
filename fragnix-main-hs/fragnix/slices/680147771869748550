{"sliceID":680147771869748550,"uses":[{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Monad"}},"qualification":null},{"reference":{"otherSlice":6497888655579684852},"usedName":{"typeName":{"identifier":"SmallArray"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"pure"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":">>"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"*>"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":">>="}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"-"}},"qualification":null},{"reference":{"builtinModule":"Data.Foldable"},"usedName":{"valueName":{"identifier":"length"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"<"}},"qualification":null},{"reference":{"otherSlice":7806011641631011927},"usedName":{"valueName":{"identifier":"createSmallArray"}},"qualification":null},{"reference":{"otherSlice":2833989017205590612},"usedName":{"valueName":{"identifier":"die"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"otherSlice":1051985424738612364},"usedName":{"valueName":{"identifier":"indexSmallArray"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"otherSlice":2018079638780074869},"usedName":{"valueName":{"identifier":"copySmallArray"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"fail"}},"qualification":null},{"reference":{"otherSlice":6641233821998133120},"usedName":{"valueName":{"identifier":"emptySmallArray"}},"qualification":null}],"fragment":["instance Monad SmallArray where\n        return = pure\n        (>>) = (*>)\n        sa >>= f = collect 0 [] (la - 1)\n          where la = length sa\n                collect sz stk i\n                  | i < 0 = createSmallArray sz (die \">>=\" \"impossible\") $ fill 0 stk\n                  | otherwise =\n                    let sb = f $ indexSmallArray sa i in\n                      collect (sz + length sb) (sb : stk) (i - 1)\n                fill _ [] _ = return ()\n                fill off (sb : sbs) smb\n                  = copySmallArray smb off sb 0 (length sb) *>\n                      fill (off + length sb) sbs smb\n        fail _ = emptySmallArray"],"instances":[],"language":{"extensions":["MagicHash","RankNTypes","TypeFamilies","UnboxedTuples","DeriveTraversable","DeriveDataTypeable","GeneralizedNewtypeDeriving","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":true}}