{"sliceID":2535361372753969425,"uses":[{"reference":{"builtinModule":"GHC.Prim"},"usedName":{"valueName":{"identifier":"seq"}},"qualification":null},{"reference":{"otherSlice":1443489943582492031},"usedName":{"valueName":{"identifier":"unfoldr"}},"qualification":"Bundle"},{"reference":{"otherSlice":2794768479333855503},"usedName":{"valueName":{"identifier":"sized"}},"qualification":"Bundle"},{"reference":{"otherSlice":8855860816860663679},"usedName":{"constructorName":{"identifier":"Exact"},"constructorTypeName":{"identifier":"Size"}},"qualification":null},{"reference":{"otherSlice":6988752572666542133},"usedName":{"valueName":{"identifier":"length"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Nothing"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"-"}},"qualification":null},{"reference":{"otherSlice":8572689894313737623},"usedName":{"valueName":{"identifier":"basicUnsafeIndexM"}},"qualification":null},{"reference":{"otherSlice":7018641490882664076},"usedName":{"constructorName":{"identifier":"Box"},"constructorTypeName":{"identifier":"Box"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":8572689894313737623},"usedName":{"typeName":{"identifier":"Vector"}},"qualification":null},{"reference":{"otherSlice":5873523979145974553},"usedName":{"typeName":{"identifier":"Bundle"}},"qualification":null}],"fragment":["streamR :: Vector v a => v a -> Bundle u a","streamR v\n  = v `seq` n `seq` (Bundle.unfoldr get n `Bundle.sized` Exact n)\n  where n = length v\n        \n        {-# INLINE get #-}\n        get 0 = Nothing\n        get i\n          = let i' = i - 1 in\n              case basicUnsafeIndexM v i' of\n                  Box x -> Just (x, i')"],"instances":[],"language":{"extensions":["Rank2Types","MultiParamTypeClasses","FlexibleContexts","TypeFamilies","ScopedTypeVariables","BangPatterns","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}