{"sliceID":7020107753015352413,"uses":[{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Monad"}},"qualification":null},{"reference":{"otherSlice":388257360811415830},"usedName":{"typeName":{"identifier":"Pass"}},"qualification":null},{"reference":{"otherSlice":956119367104656861},"usedName":{"typeName":{"identifier":"AccumT"}},"qualification":null},{"reference":{"otherSlice":956119367104656861},"usedName":{"constructorName":{"identifier":"AccumT"},"constructorTypeName":{"identifier":"AccumT"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":1719551204349862948},"usedName":{"valueName":{"identifier":"runAccumT"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null}],"fragment":["liftPass :: (Monad m) => Pass w m (a, s) -> Pass w (AccumT s m) a","liftPass pass m\n  = AccumT $\n      \\ s ->\n        pass $\n          do ~((a, f), s') <- runAccumT m s\n             return ((a, s'), f)"],"instances":[],"language":{"extensions":["AutoDeriveTypeable","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}