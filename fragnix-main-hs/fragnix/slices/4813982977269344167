{"sliceID":4813982977269344167,"uses":[{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":">="}},"qualification":null},{"reference":{"otherSlice":6912661404348881832},"usedName":{"valueName":{"identifier":"replicateA"}},"qualification":null},{"reference":{"otherSlice":1286212831155664532},"usedName":{"constructorName":{"identifier":"State"},"constructorTypeName":{"identifier":"State"}},"qualification":null},{"reference":{"otherSlice":4059074203689020619},"usedName":{"valueName":{"identifier":"execState"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"builtinModule":"GHC.Err"},"usedName":{"valueName":{"identifier":"error"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null},{"reference":{"otherSlice":8468946667989408909},"usedName":{"typeName":{"identifier":"Seq"}},"qualification":null}],"fragment":["iterateN :: Int -> (a -> a) -> a -> Seq a","iterateN n f x\n  | n >= 0 = replicateA n (State (\\ y -> (f y, y))) `execState` x\n  | otherwise = error \"iterateN takes a nonnegative integer argument\""],"instances":[],"language":{"extensions":["DeriveDataTypeable","StandaloneDeriving","TypeFamilies","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}