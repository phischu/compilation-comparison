{"sliceID":2943423150655202231,"uses":[{"reference":{"otherSlice":5280671844108782799},"usedName":{"valueName":{"identifier":"joinDrive"}},"qualification":null},{"reference":{"otherSlice":1545466286867919185},"usedName":{"valueName":{"identifier":"normaliseDrive"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"++"}},"qualification":null},{"reference":{"otherSlice":3897088501585763747},"usedName":{"valueName":{"identifier":"pathSeparator"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"identifier":"not"}},"qualification":null},{"reference":{"builtinModule":"Data.Foldable"},"usedName":{"valueName":{"identifier":"null"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"&&"}},"qualification":null},{"reference":{"otherSlice":3826719218541102913},"usedName":{"valueName":{"identifier":"isPathSeparator"}},"qualification":null},{"reference":{"builtinModule":"GHC.List"},"usedName":{"valueName":{"identifier":"last"}},"qualification":null},{"reference":{"otherSlice":556799377178369048},"usedName":{"valueName":{"identifier":"splitDrive"}},"qualification":null},{"reference":{"otherSlice":5267723764444488446},"usedName":{"valueName":{"identifier":"joinPath"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null},{"reference":{"otherSlice":4808124980171462896},"usedName":{"valueName":{"identifier":"splitDirectories"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"GHC.List"},"usedName":{"valueName":{"identifier":"reverse"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO"},"usedName":{"typeName":{"identifier":"FilePath"}},"qualification":null}],"fragment":["normalise :: FilePath -> FilePath","normalise path\n  = joinDrive (normaliseDrive drv) (f pth) ++\n      [pathSeparator | not (null pth) && isPathSeparator (last pth)]\n  where (drv, pth) = splitDrive path\n        f = joinPath . dropDots [] . splitDirectories . propSep\n        propSep (a : (b : xs))\n          | isPathSeparator a && isPathSeparator b = propSep (a : xs)\n        propSep (a : xs) | isPathSeparator a = pathSeparator : propSep xs\n        propSep (x : xs) = x : propSep xs\n        propSep [] = []\n        dropDots acc (\".\" : xs) | not $ null xs = dropDots acc xs\n        dropDots acc (x : xs) = dropDots (x : acc) xs\n        dropDots acc [] = reverse acc"],"instances":[],"language":{"extensions":["MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}