{"sliceID":7601023910208745483,"uses":[{"reference":{"builtinModule":"Data.Foldable"},"usedName":{"valueName":{"identifier":"foldl'"}},"qualification":"L"},{"reference":{"otherSlice":7274308722402369360},"usedName":{"valueName":{"identifier":"unsafeInsert"}},"qualification":"HM"},{"reference":{"otherSlice":3766399563319965728},"usedName":{"valueName":{"identifier":"empty"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"typeName":{"identifier":"Eq"}},"qualification":null},{"reference":{"otherSlice":2051332017860334620},"usedName":{"typeName":{"identifier":"Hashable"}},"qualification":null},{"reference":{"otherSlice":1013433531415570027},"usedName":{"typeName":{"identifier":"HashMap"}},"qualification":null}],"fragment":["fromList :: (Eq k, Hashable k) => [(k, v)] -> HashMap k v","fromList = L.foldl' (\\ m (k, !v) -> HM.unsafeInsert k v m) empty"],"instances":[],"language":{"extensions":["BangPatterns","PatternGuards","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll"],"isInstance":false}}