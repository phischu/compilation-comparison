{"sliceID":5172885906667260441,"uses":[{"reference":{"otherSlice":1835335841534254301},"usedName":{"valueName":{"identifier":"null"}},"qualification":"V"},{"reference":{"otherSlice":8841421951896853746},"usedName":{"valueName":{"identifier":"emptyArray_"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"otherSlice":5072261342598950151},"usedName":{"valueName":{"identifier":"char8"}},"qualification":"B"},{"reference":{"builtinModule":"Data.Monoid"},"usedName":{"valueName":{"operator":"<>"}},"qualification":null},{"reference":{"otherSlice":7110907477832445792},"usedName":{"valueName":{"identifier":"unsafeHead"}},"qualification":"V"},{"reference":{"otherSlice":4478545536917457877},"usedName":{"valueName":{"identifier":"foldr"}},"qualification":"V"},{"reference":{"otherSlice":6827934631951907512},"usedName":{"valueName":{"identifier":"unsafeTail"}},"qualification":"V"},{"reference":{"otherSlice":840384432459085182},"usedName":{"typeName":{"identifier":"Vector"}},"qualification":"V"},{"reference":{"otherSlice":8838403415977070196},"usedName":{"typeName":{"identifier":"Value"}},"qualification":null},{"reference":{"otherSlice":4322896446757888605},"usedName":{"typeName":{"identifier":"Builder"}},"qualification":null},{"reference":{"otherSlice":8838403415977070196},"usedName":{"constructorName":{"identifier":"Null"},"constructorTypeName":{"identifier":"Value"}},"qualification":null},{"reference":{"otherSlice":5725992954695498134},"usedName":{"valueName":{"identifier":"null_"}},"qualification":null},{"reference":{"otherSlice":8838403415977070196},"usedName":{"constructorName":{"identifier":"Bool"},"constructorTypeName":{"identifier":"Value"}},"qualification":null},{"reference":{"otherSlice":6519305934163718337},"usedName":{"valueName":{"identifier":"bool"}},"qualification":null},{"reference":{"otherSlice":8838403415977070196},"usedName":{"constructorName":{"identifier":"Number"},"constructorTypeName":{"identifier":"Value"}},"qualification":null},{"reference":{"otherSlice":5437060401016558086},"usedName":{"valueName":{"identifier":"scientific"}},"qualification":null},{"reference":{"otherSlice":8838403415977070196},"usedName":{"constructorName":{"identifier":"String"},"constructorTypeName":{"identifier":"Value"}},"qualification":null},{"reference":{"otherSlice":8056607294204249959},"usedName":{"valueName":{"identifier":"text"}},"qualification":null},{"reference":{"otherSlice":8838403415977070196},"usedName":{"constructorName":{"identifier":"Array"},"constructorTypeName":{"identifier":"Value"}},"qualification":null},{"reference":{"otherSlice":8838403415977070196},"usedName":{"constructorName":{"identifier":"Object"},"constructorTypeName":{"identifier":"Value"}},"qualification":null},{"reference":{"otherSlice":2735546179891708078},"usedName":{"valueName":{"identifier":"toList"}},"qualification":"HMS"},{"reference":{"builtinModule":"Data.Foldable"},"usedName":{"valueName":{"identifier":"foldr"}},"qualification":null},{"reference":{"otherSlice":3982565216098577602},"usedName":{"valueName":{"identifier":"emptyObject_"}},"qualification":null},{"reference":{"otherSlice":1013433531415570027},"usedName":{"typeName":{"identifier":"HashMap"}},"qualification":"HMS"},{"reference":{"otherSlice":2241541392207318616},"usedName":{"typeName":{"identifier":"Text"}},"qualification":"T"}],"fragment":["array :: V.Vector Value -> Builder","array v\n  | V.null v = emptyArray_\n  | otherwise =\n    B.char8 '[' <> encodeToBuilder (V.unsafeHead v) <>\n      V.foldr withComma (B.char8 ']') (V.unsafeTail v)\n  where withComma a z = B.char8 ',' <> encodeToBuilder a <> z","encodeToBuilder :: Value -> Builder","encodeToBuilder Null = null_\nencodeToBuilder (Bool b) = bool b\nencodeToBuilder (Number n) = scientific n\nencodeToBuilder (String s) = text s\nencodeToBuilder (Array v) = array v\nencodeToBuilder (Object m) = object m","object :: HMS.HashMap T.Text Value -> Builder","object m\n  = case HMS.toList m of\n        (x : xs) -> B.char8 '{' <> one x <>\n                      foldr withComma (B.char8 '}') xs\n        _ -> emptyObject_\n  where withComma a z = B.char8 ',' <> one a <> z\n        one (k, v) = text k <> B.char8 ':' <> encodeToBuilder v"],"instances":[],"language":{"extensions":["BangPatterns","OverloadedStrings","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}