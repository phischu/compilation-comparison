{"sliceID":5901223744124078229,"uses":[{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":">"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"identifier":"fromInteger"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"builtinModule":"GHC.Real"},"usedName":{"valueName":{"identifier":"mod"}},"qualification":null},{"reference":{"otherSlice":5307396205382476041},"usedName":{"valueName":{"identifier":"genRange"}},"qualification":null},{"reference":{"builtinModule":"GHC.Real"},"usedName":{"valueName":{"identifier":"fromIntegral"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"-"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"*"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":">="}},"qualification":null},{"reference":{"builtinModule":"GHC.Prim"},"usedName":{"valueName":{"identifier":"seq"}},"qualification":null},{"reference":{"otherSlice":5307396205382476041},"usedName":{"valueName":{"identifier":"next"}},"qualification":null},{"reference":{"otherSlice":5307396205382476041},"usedName":{"typeName":{"identifier":"RandomGen"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"typeName":{"identifier":"Num"}},"qualification":null},{"reference":{"builtinModule":"GHC.Integer"},"usedName":{"typeName":{"identifier":"Integer"}},"qualification":null}],"fragment":["randomIvalInteger ::\n                    (RandomGen g, Num a) => (Integer, Integer) -> g -> (a, g)","randomIvalInteger (l, h) rng\n  | l > h = randomIvalInteger (h, l) rng\n  | otherwise =\n    case (f 1 0 rng) of\n        (v, rng') -> (fromInteger (l + v `mod` k), rng')\n  where (genlo, genhi) = genRange rng\n        b = fromIntegral genhi - fromIntegral genlo + 1\n        q = 1000\n        k = h - l + 1\n        magtgt = k * q\n        f mag v g\n          | mag >= magtgt = (v, g)\n          | otherwise = v' `seq` f (mag * b) v' g'\n          where (x, g') = next g\n                v' = (v * b + (fromIntegral x - fromIntegral genlo))"],"instances":[],"language":{"extensions":["MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}