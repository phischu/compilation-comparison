{"sliceID":3230292578549567166,"uses":[{"reference":{"otherSlice":3835980439088584228},"usedName":{"constructorName":{"identifier":"Empty"},"constructorTypeName":{"identifier":"Text"}},"qualification":null},{"reference":{"otherSlice":510224319464031086},"usedName":{"valueName":{"identifier":"break"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"otherSlice":4161256625989359579},"usedName":{"valueName":{"identifier":"null"}},"qualification":null},{"reference":{"otherSlice":116995044031816886},"usedName":{"valueName":{"identifier":"tail"}},"qualification":null},{"reference":{"otherSlice":3835980439088584228},"usedName":{"typeName":{"identifier":"Text"}},"qualification":null}],"fragment":["lines :: Text -> [Text]","lines Empty = []\nlines t\n  = let (l, t') = break ((==) '\\n') t in\n      l : if null t' then [] else lines (tail t')"],"instances":[],"language":{"extensions":["BangPatterns","MagicHash","TypeFamilies","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}