{"sliceID":5590789569088385213,"uses":[{"reference":{"otherSlice":3326759671840124085},"usedName":{"typeName":{"identifier":"PrimMonad"}},"qualification":null},{"reference":{"otherSlice":7537211300535283999},"usedName":{"typeName":{"identifier":"MutableArray"}},"qualification":null},{"reference":{"otherSlice":3326759671840124085},"usedName":{"typeName":{"identifier":"PrimState"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null},{"reference":{"otherSlice":5390831090808384141},"usedName":{"valueName":{"identifier":"check"}},"qualification":"Ck"},{"reference":{"otherSlice":4956884951746098628},"usedName":{"constructorName":{"identifier":"Internal"},"constructorTypeName":{"identifier":"Checks"}},"qualification":"Ck"},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":">"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":2701731213600886508},"usedName":{"valueName":{"identifier":"newArray"}},"qualification":null},{"reference":{"otherSlice":6661914954700501572},"usedName":{"valueName":{"identifier":"uninitialised"}},"qualification":null},{"reference":{"otherSlice":6530318661028917769},"usedName":{"valueName":{"identifier":"loopM"}},"qualification":null},{"reference":{"otherSlice":2460349100353208481},"usedName":{"valueName":{"identifier":"readArray"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":">>="}},"qualification":null},{"reference":{"otherSlice":554915414788471638},"usedName":{"valueName":{"identifier":"writeArray"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"when"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"<"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":">="}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"-"}},"qualification":null}],"fragment":["moveForwardsLargeOverlap ::\n                           PrimMonad m =>\n                           MutableArray (PrimState m) a -> Int -> Int -> Int -> m ()","moveForwardsLargeOverlap !arr !dstOff !srcOff !len\n  = ((Ck.check \"Data/Vector/Mutable.hs\" 168) Ck.Internal)\n      \"moveForwardsLargeOverlap\"\n      \"not a forward move\"\n      (dstOff > srcOff)\n      $\n      do queue <- newArray nonOverlap uninitialised\n         loopM nonOverlap $\n           \\ i -> readArray arr (srcOff + i) >>= writeArray queue i\n         let mov !i !qTop\n               = when (i < dstOff + len) $\n                   do x <- readArray arr i\n                      y <- readArray queue qTop\n                      writeArray arr i y\n                      writeArray queue qTop x\n                      mov (i + 1) (if qTop + 1 >= nonOverlap then 0 else qTop + 1)\n         mov dstOff 0\n  where nonOverlap = dstOff - srcOff"],"instances":[],"language":{"extensions":["DeriveDataTypeable","MultiParamTypeClasses","FlexibleInstances","BangPatterns","TypeFamilies","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}