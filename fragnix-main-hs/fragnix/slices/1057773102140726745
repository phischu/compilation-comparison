{"sliceID":1057773102140726745,"uses":[{"reference":{"otherSlice":6682652171917603304},"usedName":{"valueName":{"identifier":"foldl1'"}},"qualification":"Stream"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null},{"reference":{"otherSlice":2700673456966481432},"usedName":{"valueName":{"identifier":"stream"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"LT"},"constructorTypeName":{"identifier":"Ordering"}},"qualification":null},{"reference":{"otherSlice":8934491602005769172},"usedName":{"typeName":{"identifier":"Vector"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Ordering"}},"qualification":null}],"fragment":["maximumBy :: Vector v a => (a -> a -> Ordering) -> v a -> a","maximumBy cmp = Stream.foldl1' maxBy . stream\n  where {-# INLINE maxBy #-}\n        maxBy x y\n          = case cmp x y of\n                LT -> y\n                _ -> x"],"instances":[],"language":{"extensions":["DeriveDataTypeable","Rank2Types","MultiParamTypeClasses","FlexibleContexts","TypeFamilies","ScopedTypeVariables","BangPatterns","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}