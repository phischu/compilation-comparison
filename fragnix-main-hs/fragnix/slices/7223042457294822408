{"sliceID":7223042457294822408,"uses":[{"reference":{"otherSlice":5288367503661172006},"usedName":{"constructorName":{"identifier":"UArray"},"constructorTypeName":{"identifier":"UArray"}},"qualification":null},{"reference":{"builtinModule":"GHC.ST"},"usedName":{"constructorName":{"identifier":"ST"},"constructorTypeName":{"identifier":"ST"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"GHC.Prim"},"usedName":{"valueName":{"identifier":"sizeofByteArray#"}},"qualification":null},{"reference":{"builtinModule":"GHC.Prim"},"usedName":{"valueName":{"identifier":"newByteArray#"}},"qualification":null},{"reference":{"otherSlice":8558488373212310097},"usedName":{"valueName":{"identifier":"memcpy_thaw"}},"qualification":null},{"reference":{"builtinModule":"GHC.Real"},"usedName":{"valueName":{"identifier":"fromIntegral"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"I#"},"constructorTypeName":{"identifier":"Int"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"IO"},"constructorTypeName":{"identifier":"IO"}},"qualification":null},{"reference":{"builtinModule":"GHC.Prim"},"usedName":{"valueName":{"identifier":"unsafeCoerce#"}},"qualification":null},{"reference":{"otherSlice":546710781704421482},"usedName":{"constructorName":{"identifier":"STUArray"},"constructorTypeName":{"identifier":"STUArray"}},"qualification":null},{"reference":{"otherSlice":5288367503661172006},"usedName":{"typeName":{"identifier":"UArray"}},"qualification":null},{"reference":{"builtinModule":"GHC.ST"},"usedName":{"typeName":{"identifier":"ST"}},"qualification":null},{"reference":{"otherSlice":546710781704421482},"usedName":{"typeName":{"identifier":"STUArray"}},"qualification":null}],"fragment":["thawSTUArray :: UArray i e -> ST s (STUArray s i e)","thawSTUArray (UArray l u n arr#)\n  = ST $\n      \\ s1# ->\n        case sizeofByteArray# arr# of\n            n# -> case newByteArray# n# s1# of\n                      (# s2#, marr# #) -> case\n                                            memcpy_thaw marr# arr# (fromIntegral (I# n#)) of\n                                              IO m -> case unsafeCoerce# m s2# of\n                                                          (# s3#, _ #) -> (# s3#,\n                                                                             STUArray l u n marr# #)"],"instances":[],"language":{"extensions":["BangPatterns","RankNTypes","MagicHash","UnboxedTuples","MultiParamTypeClasses","FlexibleInstances","FlexibleContexts","DeriveDataTypeable","UnliftedFFITypes","RoleAnnotations","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}