{"sliceID":3416741464237086223,"uses":[{"reference":{"otherSlice":3136612076280178340},"usedName":{"typeName":{"identifier":"MonadReader"}},"qualification":null},{"reference":{"otherSlice":3683352417831430289},"usedName":{"typeName":{"identifier":"CatchT"}},"qualification":null},{"reference":{"otherSlice":3136612076280178340},"usedName":{"valueName":{"identifier":"ask"}},"qualification":null},{"reference":{"otherSlice":1800817309688667062},"usedName":{"valueName":{"identifier":"lift"}},"qualification":null},{"reference":{"otherSlice":3136612076280178340},"usedName":{"valueName":{"identifier":"local"}},"qualification":null},{"reference":{"otherSlice":3683352417831430289},"usedName":{"constructorName":{"identifier":"CatchT"},"constructorTypeName":{"identifier":"CatchT"}},"qualification":null}],"fragment":["instance MonadReader e m => MonadReader e (CatchT m) where\n        ask = lift ask\n        local f (CatchT m) = CatchT (local f m)"],"instances":[],"language":{"extensions":["ExistentialQuantification","GeneralizedNewtypeDeriving","RankNTypes","FlexibleInstances","MultiParamTypeClasses","UndecidableInstances","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":true}}