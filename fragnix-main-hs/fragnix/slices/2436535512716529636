{"sliceID":2436535512716529636,"uses":[{"reference":{"otherSlice":386873204376864945},"usedName":{"valueName":{"identifier":"unstream"}},"qualification":null},{"reference":{"otherSlice":3458543358991128398},"usedName":{"valueName":{"identifier":"zipWith"}},"qualification":"S"},{"reference":{"otherSlice":1355624681337041399},"usedName":{"valueName":{"identifier":"stream"}},"qualification":null},{"reference":{"otherSlice":8720616505311582446},"usedName":{"valueName":{"identifier":"safe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Char"}},"qualification":null},{"reference":{"otherSlice":5700351957984311116},"usedName":{"typeName":{"identifier":"Text"}},"qualification":null}],"fragment":["zipWith :: (Char -> Char -> Char) -> Text -> Text -> Text","zipWith f t1 t2 = unstream (S.zipWith g (stream t1) (stream t2))\n  where g a b = safe (f a b)"],"instances":[],"language":{"extensions":["BangPatterns","MagicHash","TypeFamilies","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}