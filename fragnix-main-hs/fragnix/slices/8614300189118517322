{"sliceID":8614300189118517322,"uses":[{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Monoid"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Functor"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"MonadPlus"}},"qualification":null},{"reference":{"otherSlice":956119367104656861},"usedName":{"typeName":{"identifier":"AccumT"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"mzero"}},"qualification":null},{"reference":{"otherSlice":956119367104656861},"usedName":{"constructorName":{"identifier":"AccumT"},"constructorTypeName":{"identifier":"AccumT"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"const"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"mplus"}},"qualification":null},{"reference":{"otherSlice":1719551204349862948},"usedName":{"valueName":{"identifier":"runAccumT"}},"qualification":null}],"fragment":["instance (Monoid w, Functor m, MonadPlus m) =>\n         MonadPlus (AccumT w m)\n         where\n        mzero = AccumT $ const mzero\n        \n        {-# INLINE mzero #-}\n        m `mplus` n = AccumT $ \\ w -> runAccumT m w `mplus` runAccumT n w\n        \n        {-# INLINE mplus #-}"],"instances":[],"language":{"extensions":["AutoDeriveTypeable","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":true}}