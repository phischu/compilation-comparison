{"sliceID":1576835278603561928,"uses":[{"reference":{"otherSlice":6431003587946699872},"usedName":{"valueName":{"identifier":"eitherDecodeWith"}},"qualification":null},{"reference":{"otherSlice":8057204440931902561},"usedName":{"valueName":{"identifier":"jsonEOF"}},"qualification":null},{"reference":{"otherSlice":7579180383367931704},"usedName":{"valueName":{"identifier":"fromJSON"}},"qualification":null},{"reference":{"otherSlice":7281902249350019939},"usedName":{"typeName":{"identifier":"FromJSON"}},"qualification":null},{"reference":{"otherSlice":1699226608098321587},"usedName":{"typeName":{"identifier":"ByteString"}},"qualification":"L"},{"reference":{"builtinModule":"Data.Either"},"usedName":{"typeName":{"identifier":"Either"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"String"}},"qualification":null}],"fragment":["eitherDecode :: (FromJSON a) => L.ByteString -> Either String a","eitherDecode = eitherDecodeWith jsonEOF fromJSON"],"instances":[],"language":{"extensions":["MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}