{"sliceID":8514444210094183122,"uses":[{"reference":{"otherSlice":2497553050502348575},"usedName":{"constructorName":{"identifier":"Empty"},"constructorTypeName":{"identifier":"FingerTree"}},"qualification":null},{"reference":{"builtinModule":"GHC.Err"},"usedName":{"valueName":{"identifier":"error"}},"qualification":null},{"reference":{"otherSlice":2497553050502348575},"usedName":{"constructorName":{"identifier":"Single"},"constructorTypeName":{"identifier":"FingerTree"}},"qualification":null},{"reference":{"builtinModule":"GHC.Prim"},"usedName":{"valueName":{"identifier":"seq"}},"qualification":null},{"reference":{"otherSlice":7359514920200544764},"usedName":{"constructorName":{"identifier":"Split"},"constructorTypeName":{"identifier":"Split"}},"qualification":null},{"reference":{"otherSlice":2497553050502348575},"usedName":{"constructorName":{"identifier":"Deep"},"constructorTypeName":{"identifier":"FingerTree"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"<"}},"qualification":null},{"reference":{"otherSlice":4398528053301522578},"usedName":{"valueName":{"identifier":"splitDigit"}},"qualification":null},{"reference":{"builtinModule":"Data.Maybe"},"usedName":{"valueName":{"identifier":"maybe"}},"qualification":null},{"reference":{"otherSlice":967665031512543017},"usedName":{"valueName":{"identifier":"digitToTree"}},"qualification":null},{"reference":{"otherSlice":588988886889464245},"usedName":{"valueName":{"identifier":"deepL"}},"qualification":null},{"reference":{"otherSlice":6847174048687175958},"usedName":{"valueName":{"identifier":"splitNode"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"-"}},"qualification":null},{"reference":{"otherSlice":3097725820661431075},"usedName":{"valueName":{"identifier":"size"}},"qualification":null},{"reference":{"otherSlice":7085894823071857389},"usedName":{"valueName":{"identifier":"deepR"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"otherSlice":3097725820661431075},"usedName":{"typeName":{"identifier":"Sized"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null},{"reference":{"otherSlice":2497553050502348575},"usedName":{"typeName":{"identifier":"FingerTree"}},"qualification":null},{"reference":{"otherSlice":7359514920200544764},"usedName":{"typeName":{"identifier":"Split"}},"qualification":null}],"fragment":["splitTree ::\n            Sized a => Int -> FingerTree a -> Split (FingerTree a) a","splitTree _ Empty = error \"splitTree of empty tree\"\nsplitTree i (Single x) = i `seq` Split Empty x Empty\nsplitTree i (Deep _ pr m sf)\n  | i < spr =\n    case splitDigit i pr of\n        Split l x r -> Split (maybe Empty digitToTree l) x (deepL r m sf)\n  | i < spm =\n    case splitTree im m of\n        Split ml xs mr -> case splitNode (im - size ml) xs of\n                              Split l x r -> Split (deepR pr ml l) x (deepL r mr sf)\n  | otherwise =\n    case splitDigit (i - spm) sf of\n        Split l x r -> Split (deepR pr m l) x (maybe Empty digitToTree r)\n  where spr = size pr\n        spm = spr + size m\n        im = i - spr"],"instances":[],"language":{"extensions":["DeriveDataTypeable","StandaloneDeriving","TypeFamilies","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}