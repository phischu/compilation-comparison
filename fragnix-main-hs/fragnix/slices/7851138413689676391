{"sliceID":7851138413689676391,"uses":[{"reference":{"builtinModule":"GHC.Generics"},"usedName":{"typeName":{"identifier":"Constructor"}},"qualification":null},{"reference":{"otherSlice":8771569589911656856},"usedName":{"typeName":{"identifier":"GFromJSON"}},"qualification":null},{"reference":{"otherSlice":9027854791382390760},"usedName":{"typeName":{"identifier":"ConsFromJSON"}},"qualification":null},{"reference":{"otherSlice":4785217918879544019},"usedName":{"typeName":{"identifier":"FromPair"}},"qualification":null},{"reference":{"builtinModule":"GHC.Generics"},"usedName":{"typeName":{"identifier":"C1"}},"qualification":null},{"reference":{"otherSlice":4785217918879544019},"usedName":{"valueName":{"identifier":"parsePair"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"builtinModule":"Data.Maybe"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":8771569589911656856},"usedName":{"valueName":{"identifier":"gParseJSON"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"builtinModule":"Data.Maybe"},"usedName":{"constructorName":{"identifier":"Nothing"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":400033489728798890},"usedName":{"valueName":{"identifier":"pack"}},"qualification":null},{"reference":{"otherSlice":5961014460351920517},"usedName":{"valueName":{"identifier":"constructorTagModifier"}},"qualification":null},{"reference":{"builtinModule":"GHC.Generics"},"usedName":{"valueName":{"identifier":"conName"}},"qualification":null},{"reference":{"builtinModule":"GHC.Err"},"usedName":{"valueName":{"identifier":"undefined"}},"qualification":null}],"fragment":["instance (Constructor c, GFromJSON a, ConsFromJSON a) => FromPair\n         (C1 c a) where\n        parsePair opts (tag, value)\n          | tag == tag' = Just $ gParseJSON opts value\n          | otherwise = Nothing\n          where tag'\n                  = pack $\n                      constructorTagModifier opts $ conName (undefined :: t c a p)\n        \n        {-# INLINE parsePair #-}"],"instances":[],"language":{"extensions":["DefaultSignatures","EmptyDataDecls","FlexibleInstances","FunctionalDependencies","KindSignatures","OverlappingInstances","ScopedTypeVariables","TypeOperators","UndecidableInstances","ViewPatterns","NamedFieldPuns","FlexibleContexts","PatternGuards","RecordWildCards","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll"],"isInstance":true}}