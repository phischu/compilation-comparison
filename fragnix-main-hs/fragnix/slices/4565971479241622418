{"sliceID":4565971479241622418,"uses":[{"reference":{"builtinModule":"Data.Foldable"},"usedName":{"typeName":{"identifier":"Foldable"}},"qualification":null},{"reference":{"otherSlice":9208044541903137161},"usedName":{"typeName":{"identifier":"Seq"}},"qualification":null},{"reference":{"builtinModule":"Data.Foldable"},"usedName":{"valueName":{"identifier":"foldMap"}},"qualification":null},{"reference":{"otherSlice":9208044541903137161},"usedName":{"constructorName":{"identifier":"Seq"},"constructorTypeName":{"identifier":"Seq"}},"qualification":null},{"reference":{"builtinModule":"Data.Foldable"},"usedName":{"valueName":{"identifier":"foldr"}},"qualification":null},{"reference":{"builtinModule":"GHC.Prim"},"usedName":{"valueName":{"identifier":"coerce"}},"qualification":null},{"reference":{"builtinModule":"Data.Foldable"},"usedName":{"valueName":{"identifier":"foldr'"}},"qualification":null},{"reference":{"builtinModule":"Data.Foldable"},"usedName":{"valueName":{"identifier":"foldl"}},"qualification":null},{"reference":{"builtinModule":"Data.Foldable"},"usedName":{"valueName":{"identifier":"foldl'"}},"qualification":null},{"reference":{"builtinModule":"Data.Foldable"},"usedName":{"valueName":{"identifier":"foldr1"}},"qualification":null},{"reference":{"otherSlice":3555949835188142327},"usedName":{"valueName":{"identifier":"getElem"}},"qualification":null},{"reference":{"otherSlice":3555949835188142327},"usedName":{"constructorName":{"identifier":"Elem"},"constructorTypeName":{"identifier":"Elem"}},"qualification":null},{"reference":{"builtinModule":"Data.Foldable"},"usedName":{"valueName":{"identifier":"foldl1"}},"qualification":null},{"reference":{"otherSlice":7787832157326777448},"usedName":{"valueName":{"identifier":"length"}},"qualification":null},{"reference":{"otherSlice":6181133087880161734},"usedName":{"valueName":{"identifier":"null"}},"qualification":null}],"fragment":["instance Foldable Seq where\n        foldMap f (Seq xs) = foldMap (foldMap f) xs\n        foldr f z (Seq xs) = foldr (coerce f) z xs\n        foldr' f z (Seq xs) = foldr' (coerce f) z xs\n        foldl f z (Seq xs) = foldl (foldl f) z xs\n        foldl' f z (Seq xs) = foldl' (foldl' f) z xs\n        foldr1 f (Seq xs) = getElem (foldr1 f' xs)\n          where f' (Elem x) (Elem y) = Elem (f x y)\n        foldl1 f (Seq xs) = getElem (foldl1 f' xs)\n          where f' (Elem x) (Elem y) = Elem (f x y)\n        length = length\n        \n        {-# INLINE length #-}\n        null = null\n        \n        {-# INLINE null #-}"],"instances":[],"language":{"extensions":["BangPatterns","DeriveDataTypeable","StandaloneDeriving","FlexibleInstances","ScopedTypeVariables","DeriveGeneric","TypeFamilies","PatternSynonyms","ViewPatterns","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":true}}