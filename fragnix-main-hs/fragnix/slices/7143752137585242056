{"sliceID":7143752137585242056,"uses":[{"reference":{"otherSlice":722674047690492996},"usedName":{"valueName":{"identifier":"checkLength"}},"qualification":"Ck"},{"reference":{"otherSlice":4579156144394400265},"usedName":{"constructorName":{"identifier":"Internal"},"constructorTypeName":{"identifier":"Checks"}},"qualification":"Ck"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":3867849288792351978},"usedName":{"valueName":{"identifier":"unsafeNew"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"-"}},"qualification":null},{"reference":{"otherSlice":7169136477039637979},"usedName":{"valueName":{"identifier":"checkIndex"}},"qualification":"Ck"},{"reference":{"otherSlice":1358554234100414793},"usedName":{"valueName":{"identifier":"unsafeWrite"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"otherSlice":6090803999804092471},"usedName":{"valueName":{"identifier":"foldM'"}},"qualification":"MStream"},{"reference":{"otherSlice":7455058673344695308},"usedName":{"valueName":{"identifier":"checkSlice"}},"qualification":"Ck"},{"reference":{"otherSlice":3538790270360548723},"usedName":{"valueName":{"identifier":"unsafeSlice"}},"qualification":null},{"reference":{"otherSlice":3377634759521931512},"usedName":{"typeName":{"identifier":"PrimMonad"}},"qualification":null},{"reference":{"otherSlice":3867849288792351978},"usedName":{"typeName":{"identifier":"MVector"}},"qualification":null},{"reference":{"otherSlice":8034191425845892708},"usedName":{"typeName":{"identifier":"MStream"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null},{"reference":{"otherSlice":3377634759521931512},"usedName":{"typeName":{"identifier":"PrimState"}},"qualification":null}],"fragment":["munstreamRMax ::\n                (PrimMonad m, MVector v a) =>\n                MStream m a -> Int -> m (v (PrimState m) a)","munstreamRMax s n\n  = do v <- ((Ck.checkLength \"Data/Vector/Generic/Mutable.hs\" 379)\n               Ck.Internal)\n              \"munstreamRMax\"\n              n\n              $ unsafeNew n\n       let put i x\n             = do let i' = i - 1\n                  ((Ck.checkIndex \"Data/Vector/Generic/Mutable.hs\" 383) Ck.Internal)\n                    \"munstreamRMax\"\n                    i'\n                    n\n                    $ unsafeWrite v i' x\n                  return i'\n       i <- MStream.foldM' put n s\n       return $\n         ((Ck.checkSlice \"Data/Vector/Generic/Mutable.hs\" 387) Ck.Internal)\n           \"munstreamRMax\"\n           i\n           (n - i)\n           n\n           $ unsafeSlice i (n - i) v"],"instances":[],"language":{"extensions":["DeriveDataTypeable","MultiParamTypeClasses","BangPatterns","ScopedTypeVariables","TypeFamilies","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}