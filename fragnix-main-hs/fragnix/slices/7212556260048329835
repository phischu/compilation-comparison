{"sliceID":7212556260048329835,"uses":[{"reference":{"otherSlice":4875136916224806411},"usedName":{"typeName":{"identifier":"RegexLike"}},"qualification":null},{"reference":{"otherSlice":1541402738797772585},"usedName":{"typeName":{"identifier":"Regex"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"String"}},"qualification":null},{"reference":{"otherSlice":4875136916224806411},"usedName":{"valueName":{"identifier":"matchTest"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO.Unsafe"},"usedName":{"valueName":{"identifier":"unsafePerformIO"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"Foreign.C.String"},"usedName":{"valueName":{"identifier":"withCAString"}},"qualification":null},{"reference":{"otherSlice":841163542554592407},"usedName":{"valueName":{"identifier":"wrapTest"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":">>="}},"qualification":null},{"reference":{"otherSlice":1016317830721956636},"usedName":{"valueName":{"identifier":"unwrap"}},"qualification":null},{"reference":{"otherSlice":4875136916224806411},"usedName":{"valueName":{"identifier":"matchOnce"}},"qualification":null},{"reference":{"otherSlice":6997214096438381919},"usedName":{"valueName":{"identifier":"execute"}},"qualification":null},{"reference":{"otherSlice":4875136916224806411},"usedName":{"valueName":{"identifier":"matchAll"}},"qualification":null},{"reference":{"otherSlice":4844500896780252551},"usedName":{"valueName":{"identifier":"wrapMatchAll"}},"qualification":null},{"reference":{"otherSlice":4875136916224806411},"usedName":{"valueName":{"identifier":"matchCount"}},"qualification":null},{"reference":{"otherSlice":988382020100584811},"usedName":{"valueName":{"identifier":"wrapCount"}},"qualification":null}],"fragment":["instance RegexLike Regex String where\n        matchTest regex str\n          = unsafePerformIO $ do withCAString str (wrapTest regex) >>= unwrap\n        matchOnce regex str\n          = unsafePerformIO $ execute regex str >>= unwrap\n        matchAll regex str\n          = unsafePerformIO $\n              withCAString str (wrapMatchAll regex) >>= unwrap\n        matchCount regex str\n          = unsafePerformIO $ withCAString str (wrapCount regex) >>= unwrap"],"instances":[],"language":{"extensions":["MultiParamTypeClasses","FunctionalDependencies","ForeignFunctionInterface","GeneralizedNewtypeDeriving","FlexibleContexts","TypeSynonymInstances","FlexibleInstances","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":true}}