{"sliceID":1816047282283714663,"uses":[{"reference":{"otherSlice":3089301142827340338},"usedName":{"valueName":{"identifier":"liftBaseWith"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"Data.Functor"},"usedName":{"valueName":{"identifier":"void"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null},{"reference":{"otherSlice":3089301142827340338},"usedName":{"typeName":{"identifier":"MonadBaseControl"}},"qualification":null}],"fragment":["embed_ :: MonadBaseControl b m => (a -> m ()) -> m (a -> b ())","embed_ f\n  = liftBaseWith $ \\ runInBase -> return (void . runInBase . f)"],"instances":[],"language":{"extensions":["NoImplicitPrelude","RankNTypes","TypeFamilies","FunctionalDependencies","FlexibleInstances","UndecidableInstances","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}