{"sliceID":4368397506866556061,"uses":[{"reference":{"otherSlice":502464163944568234},"usedName":{"valueName":{"identifier":"runSTUArray"}},"qualification":null},{"reference":{"otherSlice":7235567377809295464},"usedName":{"valueName":{"identifier":"length"}},"qualification":"S"},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"-"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null},{"reference":{"builtinModule":"GHC.Real"},"usedName":{"valueName":{"identifier":"fromIntegral"}},"qualification":null},{"reference":{"otherSlice":7493882458078027726},"usedName":{"valueName":{"identifier":"unsafeIndex"}},"qualification":null},{"reference":{"otherSlice":5632142578980093812},"usedName":{"valueName":{"identifier":"newArray"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"otherSlice":5632142578980093812},"usedName":{"valueName":{"identifier":"unsafeWrite"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"otherSlice":4010822550476529195},"usedName":{"typeName":{"identifier":"ByteString"}},"qualification":"S"},{"reference":{"otherSlice":5288367503661172006},"usedName":{"typeName":{"identifier":"UArray"}},"qualification":null}],"fragment":["occurs :: S.ByteString -> UArray Int Int","occurs pat\n  = runSTUArray\n      (do let !patEnd = S.length pat - 1\n              {-# INLINE patAt #-}\n              patAt :: Int -> Int\n              patAt i = fromIntegral (unsafeIndex pat i)\n          ar <- newArray (0, 255) 1\n          let loop !i\n                | i == patEnd = return ar\n                | otherwise =\n                  do unsafeWrite ar (patAt i) (-i)\n                     loop (i + 1)\n          loop 0)"],"instances":[],"language":{"extensions":["BangPatterns","FlexibleContexts","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}