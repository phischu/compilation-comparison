{"sliceID":5419666896111138585,"uses":[{"reference":{"otherSlice":1673753023314990609},"usedName":{"constructorName":{"identifier":"Node2"},"constructorTypeName":{"identifier":"Node"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"<"}},"qualification":null},{"reference":{"otherSlice":7178927419540684665},"usedName":{"valueName":{"identifier":"mseq"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"-"}},"qualification":null},{"reference":{"otherSlice":2658389187921074114},"usedName":{"valueName":{"identifier":"size"}},"qualification":null},{"reference":{"otherSlice":1673753023314990609},"usedName":{"constructorName":{"identifier":"Node3"},"constructorTypeName":{"identifier":"Node"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"otherSlice":2658389187921074114},"usedName":{"typeName":{"identifier":"Sized"}},"qualification":null},{"reference":{"otherSlice":2195349210334318825},"usedName":{"typeName":{"identifier":"MaybeForce"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null},{"reference":{"otherSlice":1673753023314990609},"usedName":{"typeName":{"identifier":"Node"}},"qualification":null}],"fragment":["adjustNode ::\n             (Sized a, MaybeForce a) =>\n             (Int -> a -> a) -> Int -> Node a -> Node a","adjustNode f i (Node2 s a b)\n  | i < sa = let fia = f i a in fia `mseq` Node2 s fia b\n  | otherwise =\n    let fisab = f (i - sa) b in fisab `mseq` Node2 s a fisab\n  where sa = size a\nadjustNode f i (Node3 s a b c)\n  | i < sa = let fia = f i a in fia `mseq` Node3 s fia b c\n  | i < sab =\n    let fisab = f (i - sa) b in fisab `mseq` Node3 s a fisab c\n  | otherwise =\n    let fisabc = f (i - sab) c in fisabc `mseq` Node3 s a b fisabc\n  where sa = size a\n        sab = sa + size b"],"instances":[],"language":{"extensions":["BangPatterns","DeriveDataTypeable","StandaloneDeriving","FlexibleInstances","ScopedTypeVariables","DeriveGeneric","TypeFamilies","PatternSynonyms","ViewPatterns","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}