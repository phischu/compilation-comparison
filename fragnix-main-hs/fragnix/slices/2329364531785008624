{"sliceID":2329364531785008624,"uses":[{"reference":{"builtinModule":"Control.Exception.Base"},"usedName":{"valueName":{"identifier":"handle"}},"qualification":"C"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO.Exception"},"usedName":{"constructorName":{"identifier":"IOError"},"constructorTypeName":{"identifier":"IOException"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO.Exception"},"usedName":{"valueName":{"identifier":"ioe_type"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO.Exception"},"usedName":{"constructorName":{"identifier":"ResourceVanished"},"constructorTypeName":{"identifier":"IOErrorType"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO.Exception"},"usedName":{"valueName":{"identifier":"ioe_errno"}},"qualification":null},{"reference":{"builtinModule":"Data.Maybe"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"Foreign.C.Error"},"usedName":{"constructorName":{"identifier":"Errno"},"constructorTypeName":{"identifier":"Errno"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"builtinModule":"Foreign.C.Error"},"usedName":{"valueName":{"identifier":"ePIPE"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO"},"usedName":{"valueName":{"identifier":"throwIO"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null}],"fragment":["ignoreSigPipe :: IO () -> IO ()","ignoreSigPipe\n  = C.handle $\n      \\ e ->\n        case e of\n            IOError{ioe_type = ResourceVanished, ioe_errno = Just ioe} | Errno\n                                                                           ioe\n                                                                           == ePIPE\n                                                                         -> return ()\n            _ -> throwIO e"],"instances":[],"language":{"extensions":["ForeignFunctionInterface","InterruptibleFFI","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}