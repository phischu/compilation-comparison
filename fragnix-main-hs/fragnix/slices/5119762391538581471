{"sliceID":5119762391538581471,"uses":[{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null},{"reference":{"otherSlice":3404010779964799695},"usedName":{"valueName":{"identifier":"concurrently'"}},"qualification":null},{"reference":{"builtinModule":"Data.Either"},"usedName":{"constructorName":{"identifier":"Left"},"constructorTypeName":{"identifier":"Either"}},"qualification":null},{"reference":{"builtinModule":"Data.Either"},"usedName":{"constructorName":{"identifier":"Right"},"constructorTypeName":{"identifier":"Either"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO"},"usedName":{"valueName":{"identifier":"throwIO"}},"qualification":null}],"fragment":["concurrently :: IO a -> IO b -> IO (a, b)","concurrently left right = concurrently' left right (collect [])\n  where collect [Left a, Right b] _ = return (a, b)\n        collect [Right b, Left a] _ = return (a, b)\n        collect xs m\n          = do e <- m\n               case e of\n                   Left ex -> throwIO ex\n                   Right r -> collect (r : xs) m"],"instances":[],"language":{"extensions":["MagicHash","UnboxedTuples","RankNTypes","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}