{"sliceID":7521724965563898765,"uses":[{"reference":{"builtinModule":"GHC.Err"},"usedName":{"valueName":{"identifier":"error"}},"qualification":null},{"reference":{"otherSlice":4449105947606553934},"usedName":{"valueName":{"identifier":"catchIO"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO"},"usedName":{"valueName":{"identifier":"throwIO"}},"qualification":"Exception"},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null}],"fragment":["firstSuccessful :: [IO a] -> IO a","firstSuccessful [] = error \"firstSuccessful: empty list\"\nfirstSuccessful (p : ps)\n  = catchIO p $\n      \\ e ->\n        case ps of\n            [] -> Exception.throwIO e\n            _ -> firstSuccessful ps"],"instances":[],"language":{"extensions":["DeriveDataTypeable","ForeignFunctionInterface","TypeSynonymInstances","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}