{"sliceID":989488848577333316,"uses":[{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Monad"}},"qualification":null},{"reference":{"otherSlice":7726566613773514613},"usedName":{"typeName":{"identifier":"Error"}},"qualification":null},{"reference":{"otherSlice":196551500793978085},"usedName":{"typeName":{"identifier":"MonadError"}},"qualification":null},{"reference":{"otherSlice":6435693324938137817},"usedName":{"typeName":{"identifier":"ErrorT"}},"qualification":null},{"reference":{"otherSlice":196551500793978085},"usedName":{"valueName":{"identifier":"throwError"}},"qualification":null},{"reference":{"otherSlice":341540287315608786},"usedName":{"valueName":{"identifier":"throwError"}},"qualification":"ErrorT"},{"reference":{"otherSlice":196551500793978085},"usedName":{"valueName":{"identifier":"catchError"}},"qualification":null},{"reference":{"otherSlice":5258037247317586598},"usedName":{"valueName":{"identifier":"catchError"}},"qualification":"ErrorT"}],"fragment":["instance (Monad m, Error e) => MonadError e (ErrorT e m) where\n        throwError = ErrorT.throwError\n        catchError = ErrorT.catchError"],"instances":[],"language":{"extensions":["MultiParamTypeClasses","FunctionalDependencies","FlexibleInstances","UndecidableInstances","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":true}}