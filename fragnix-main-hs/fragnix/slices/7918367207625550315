{"sliceID":7918367207625550315,"uses":[{"reference":{"otherSlice":8208918792086949354},"usedName":{"valueName":{"identifier":"take"}},"qualification":null},{"reference":{"otherSlice":1789027661989106359},"usedName":{"valueName":{"identifier":"drop"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Monad"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null},{"reference":{"otherSlice":9209112058599157037},"usedName":{"typeName":{"identifier":"Stream"}},"qualification":null}],"fragment":["slice :: Monad m => Int -> Int -> Stream m a -> Stream m a","slice i n s = take n (drop i s)"],"instances":[],"language":{"extensions":["DeriveDataTypeable","ExistentialQuantification","Rank2Types","BangPatterns","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}