{"sliceID":2159602749077879927,"uses":[{"reference":{"otherSlice":8017170790354418478},"usedName":{"valueName":{"identifier":"concat"}},"qualification":"B"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null},{"reference":{"builtinModule":"GHC.List"},"usedName":{"valueName":{"identifier":"reverse"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"fmap"}},"qualification":null},{"reference":{"otherSlice":7112072859998831005},"usedName":{"valueName":{"identifier":"takeWhile"}},"qualification":"B8"},{"reference":{"builtinModule":"Data.Functor"},"usedName":{"valueName":{"operator":"<$>"}},"qualification":null},{"reference":{"otherSlice":8330253145869307845},"usedName":{"valueName":{"identifier":"get"}},"qualification":null},{"reference":{"otherSlice":3579962094799329382},"usedName":{"valueName":{"identifier":"inputSpansChunks"}},"qualification":null},{"reference":{"otherSlice":6258463563638113276},"usedName":{"valueName":{"identifier":"length"}},"qualification":"B"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"GHC.Word"},"usedName":{"typeName":{"identifier":"Word8"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"otherSlice":2385146024156182908},"usedName":{"typeName":{"identifier":"Parser"}},"qualification":null},{"reference":{"otherSlice":8642306666063513779},"usedName":{"typeName":{"identifier":"ByteString"}},"qualification":null}],"fragment":["takeWhile :: (Word8 -> Bool) -> Parser ByteString","takeWhile p = (B.concat . reverse) `fmap` go []\n  where go acc\n          = do s <- B8.takeWhile p <$> get\n               continue <- inputSpansChunks (B.length s)\n               if continue then go (s : acc) else return (s : acc)"],"instances":[],"language":{"extensions":["BangPatterns","GADTs","OverloadedStrings","RecordWildCards","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}