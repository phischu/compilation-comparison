{"sliceID":3681974463714502547,"uses":[{"reference":{"otherSlice":2186011155846212713},"usedName":{"constructorName":{"identifier":"Stream"},"constructorTypeName":{"identifier":"Stream"}},"qualification":null},{"reference":{"otherSlice":3989429970258049704},"usedName":{"constructorName":{"identifier":"T"},"constructorTypeName":{"identifier":"T"}},"qualification":null},{"reference":{"otherSlice":9144505675057499672},"usedName":{"constructorName":{"identifier":"S0"},"constructorTypeName":{"identifier":"S"}},"qualification":null},{"reference":{"otherSlice":4996397341864196464},"usedName":{"valueName":{"identifier":"unknownSize"}},"qualification":null},{"reference":{"otherSlice":7233619382983855062},"usedName":{"constructorName":{"identifier":"Chunk"},"constructorTypeName":{"identifier":"ByteString"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"<"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"&&"}},"qualification":null},{"reference":{"otherSlice":2008375435952834255},"usedName":{"valueName":{"identifier":"validate"}},"qualification":"U32"},{"reference":{"otherSlice":899429663293461015},"usedName":{"constructorName":{"identifier":"Yield"},"constructorTypeName":{"identifier":"Step"}},"qualification":null},{"reference":{"otherSlice":7763929285871846367},"usedName":{"valueName":{"identifier":"unsafeChr32"}},"qualification":null},{"reference":{"otherSlice":7235567377809295464},"usedName":{"valueName":{"identifier":"length"}},"qualification":"B"},{"reference":{"otherSlice":7358425231838581354},"usedName":{"valueName":{"identifier":"shiftL"}},"qualification":null},{"reference":{"builtinModule":"GHC.Real"},"usedName":{"valueName":{"identifier":"fromIntegral"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null},{"reference":{"otherSlice":7493882458078027726},"usedName":{"valueName":{"identifier":"unsafeIndex"}},"qualification":"B"},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null},{"reference":{"builtinModule":"GHC.Word"},"usedName":{"typeName":{"identifier":"Word32"}},"qualification":null},{"reference":{"otherSlice":9144505675057499672},"usedName":{"constructorName":{"identifier":"S4"},"constructorTypeName":{"identifier":"S"}},"qualification":null},{"reference":{"builtinModule":"GHC.Word"},"usedName":{"typeName":{"identifier":"Word8"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":">="}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"otherSlice":9144505675057499672},"usedName":{"constructorName":{"identifier":"S1"},"constructorTypeName":{"identifier":"S"}},"qualification":null},{"reference":{"otherSlice":9144505675057499672},"usedName":{"constructorName":{"identifier":"S2"},"constructorTypeName":{"identifier":"S"}},"qualification":null},{"reference":{"otherSlice":9144505675057499672},"usedName":{"constructorName":{"identifier":"S3"},"constructorTypeName":{"identifier":"S"}},"qualification":null},{"reference":{"otherSlice":664124904373382999},"usedName":{"valueName":{"identifier":"decodeError"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":7233619382983855062},"usedName":{"constructorName":{"identifier":"Empty"},"constructorTypeName":{"identifier":"ByteString"}},"qualification":null},{"reference":{"otherSlice":899429663293461015},"usedName":{"constructorName":{"identifier":"Done"},"constructorTypeName":{"identifier":"Step"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Nothing"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":8110432003699438363},"usedName":{"typeName":{"identifier":"OnDecodeError"}},"qualification":null},{"reference":{"otherSlice":7233619382983855062},"usedName":{"typeName":{"identifier":"ByteString"}},"qualification":null},{"reference":{"otherSlice":2186011155846212713},"usedName":{"typeName":{"identifier":"Stream"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Char"}},"qualification":null}],"fragment":["streamUtf32LE :: OnDecodeError -> ByteString -> Stream Char","streamUtf32LE onErr bs0 = Stream next (T bs0 S0 0) unknownSize\n  where next (T bs@(Chunk ps _) S0 i)\n          | i + 3 < len && U32.validate x =\n            Yield (unsafeChr32 x) (T bs S0 (i + 4))\n          where len = B.length ps\n                x = shiftL x4 24 + shiftL x3 16 + shiftL x2 8 + x1\n                x1 = idx i\n                x2 = idx (i + 1)\n                x3 = idx (i + 2)\n                x4 = idx (i + 3)\n                idx = fromIntegral . B.unsafeIndex ps :: Int -> Word32\n        next st@(T bs s i)\n          = case s of\n                S4 w1 w2 w3 w4 | U32.validate (c w1 w2 w3 w4) ->\n                                 Yield (unsafeChr32 (c w1 w2 w3 w4)) es\n                _ -> consume st\n          where es = T bs S0 i\n                \n                c :: Word8 -> Word8 -> Word8 -> Word8 -> Word32\n                c w1 w2 w3 w4 = shifted\n                  where shifted = shiftL x4 24 + shiftL x3 16 + shiftL x2 8 + x1\n                        x1 = fromIntegral w1\n                        x2 = fromIntegral w2\n                        x3 = fromIntegral w3\n                        x4 = fromIntegral w4\n        consume (T bs@(Chunk ps rest) s i)\n          | i >= B.length ps = consume (T rest s 0)\n          | otherwise =\n            case s of\n                S0 -> next (T bs (S1 x) (i + 1))\n                S1 w1 -> next (T bs (S2 w1 x) (i + 1))\n                S2 w1 w2 -> next (T bs (S3 w1 w2 x) (i + 1))\n                S3 w1 w2 w3 -> next (T bs (S4 w1 w2 w3 x) (i + 1))\n                S4 w1 w2 w3 w4 -> decodeError \"streamUtf32LE\" \"UTF-32LE\" onErr\n                                    (Just w1)\n                                    (T bs (S3 w2 w3 w4) (i + 1))\n          where x = B.unsafeIndex ps i\n        consume (T Empty S0 _) = Done\n        consume st\n          = decodeError \"streamUtf32LE\" \"UTF-32LE\" onErr Nothing st"],"instances":[],"language":{"extensions":["BangPatterns","Rank2Types","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}