{"sliceID":6431181074493812537,"uses":[{"reference":{"otherSlice":30758760526534613},"usedName":{"valueName":{"identifier":"requestBody"}},"qualification":null},{"reference":{"otherSlice":8642306666063513779},"usedName":{"typeName":{"identifier":"ByteString"}},"qualification":"B"},{"reference":{"otherSlice":2071755692096765236},"usedName":{"valueName":{"identifier":"liftIO"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":">>="}},"qualification":null},{"reference":{"otherSlice":675696118971413715},"usedName":{"valueName":{"identifier":"null"}},"qualification":"B"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":625286018229202739},"usedName":{"valueName":{"identifier":"parseRequestBody"}},"qualification":null},{"reference":{"otherSlice":464070898076031284},"usedName":{"valueName":{"identifier":"lbsBackEnd"}},"qualification":"Parse"},{"reference":{"otherSlice":2115310657537584571},"usedName":{"valueName":{"identifier":"strictByteStringToLazyText"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"++"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"map"}},"qualification":null},{"reference":{"otherSlice":2214071617704085626},"usedName":{"valueName":{"identifier":"parseEncodedParams"}},"qualification":null},{"reference":{"otherSlice":30758760526534613},"usedName":{"valueName":{"identifier":"rawQueryString"}},"qualification":null},{"reference":{"otherSlice":7483143390726870398},"usedName":{"valueName":{"identifier":"fromChunks"}},"qualification":"BL"},{"reference":{"otherSlice":5759671536505916877},"usedName":{"constructorName":{"identifier":"Env"},"constructorTypeName":{"identifier":"ActionEnv"}},"qualification":null},{"reference":{"otherSlice":2071755692096765236},"usedName":{"typeName":{"identifier":"MonadIO"}},"qualification":null},{"reference":{"otherSlice":30758760526534613},"usedName":{"typeName":{"identifier":"Request"}},"qualification":null},{"reference":{"otherSlice":8945367361678195461},"usedName":{"typeName":{"identifier":"Param"}},"qualification":null},{"reference":{"otherSlice":5759671536505916877},"usedName":{"typeName":{"identifier":"ActionEnv"}},"qualification":null}],"fragment":["mkEnv :: forall m . MonadIO m => Request -> [Param] -> m ActionEnv","mkEnv req captures\n  = do let rbody = requestBody req\n           takeAll :: ([B.ByteString] -> m [B.ByteString]) -> m [B.ByteString]\n           takeAll prefix\n             = liftIO rbody >>=\n                 \\ b -> if B.null b then prefix [] else takeAll (prefix . (b :))\n       bs <- takeAll return\n       (formparams, fs) <- liftIO $\n                             parseRequestBody bs Parse.lbsBackEnd req\n       let convert (k, v)\n             = (strictByteStringToLazyText k, strictByteStringToLazyText v)\n           parameters = captures ++ map convert formparams ++ queryparams\n           queryparams = parseEncodedParams $ rawQueryString req\n           b = BL.fromChunks bs\n       return $\n         Env req parameters b\n           [(strictByteStringToLazyText k, fi) | (k, fi) <- fs]"],"instances":[],"language":{"extensions":["FlexibleContexts","FlexibleInstances","OverloadedStrings","RankNTypes","ScopedTypeVariables","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}