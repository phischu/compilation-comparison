{"sliceID":3463996101345735136,"uses":[{"reference":{"otherSlice":2781168674946778822},"usedName":{"constructorName":{"identifier":"ReaperSettings"},"constructorTypeName":{"identifier":"ReaperSettings"}},"qualification":null},{"reference":{"otherSlice":2781168674946778822},"usedName":{"valueName":{"identifier":"reaperAction"}},"qualification":null},{"reference":{"otherSlice":2781168674946778822},"usedName":{"valueName":{"identifier":"reaperCons"}},"qualification":null},{"reference":{"otherSlice":2781168674946778822},"usedName":{"valueName":{"identifier":"reaperDelay"}},"qualification":null},{"reference":{"otherSlice":2781168674946778822},"usedName":{"valueName":{"identifier":"reaperEmpty"}},"qualification":null},{"reference":{"otherSlice":2781168674946778822},"usedName":{"valueName":{"identifier":"reaperNull"}},"qualification":null},{"reference":{"builtinModule":"GHC.Conc.IO"},"usedName":{"valueName":{"identifier":"threadDelay"}},"qualification":null},{"reference":{"builtinModule":"Data.IORef"},"usedName":{"valueName":{"identifier":"atomicModifyIORef'"}},"qualification":null},{"reference":{"otherSlice":2736621966635640400},"usedName":{"constructorName":{"identifier":"NoReaper"},"constructorTypeName":{"identifier":"State"}},"qualification":null},{"reference":{"builtinModule":"GHC.Err"},"usedName":{"valueName":{"identifier":"error"}},"qualification":null},{"reference":{"otherSlice":2736621966635640400},"usedName":{"constructorName":{"identifier":"Workload"},"constructorTypeName":{"identifier":"State"}},"qualification":null},{"reference":{"builtinModule":"GHC.IORef"},"usedName":{"valueName":{"identifier":"writeIORef"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Nothing"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"otherSlice":2781168674946778822},"usedName":{"typeName":{"identifier":"ReaperSettings"}},"qualification":null},{"reference":{"builtinModule":"GHC.IORef"},"usedName":{"typeName":{"identifier":"IORef"}},"qualification":null},{"reference":{"otherSlice":2736621966635640400},"usedName":{"typeName":{"identifier":"State"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Conc.Sync"},"usedName":{"typeName":{"identifier":"ThreadId"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null}],"fragment":["reaper ::\n       ReaperSettings workload item ->\n         IORef (State workload) -> IORef (Maybe ThreadId) -> IO ()","reaper settings@ReaperSettings{..} stateRef tidRef\n  = do threadDelay reaperDelay\n       wl <- atomicModifyIORef' stateRef swapWithEmpty\n       !merge <- reaperAction wl\n       next <- atomicModifyIORef' stateRef (check merge)\n       next\n  where swapWithEmpty NoReaper\n          = error \"Control.Reaper.reaper: unexpected NoReaper (1)\"\n        swapWithEmpty (Workload wl) = (Workload reaperEmpty, wl)\n        check _ NoReaper\n          = error \"Control.Reaper.reaper: unexpected NoReaper (2)\"\n        check merge (Workload wl)\n          | reaperNull wl' = (NoReaper, writeIORef tidRef Nothing)\n          | otherwise = (Workload wl', reaper settings stateRef tidRef)\n          where wl' = merge wl"],"instances":[],"language":{"extensions":["RecordWildCards","BangPatterns","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}