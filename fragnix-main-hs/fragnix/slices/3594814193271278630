{"sliceID":3594814193271278630,"uses":[{"reference":{"otherSlice":91774999909123259},"usedName":{"typeName":{"identifier":"Buffer"}},"qualification":null},{"reference":{"otherSlice":2439198389408872677},"usedName":{"typeName":{"identifier":"BufSize"}},"qualification":null},{"reference":{"otherSlice":4010822550476529195},"usedName":{"typeName":{"identifier":"ByteString"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null},{"reference":{"otherSlice":2486799005509291069},"usedName":{"typeName":{"identifier":"SendFile"}},"qualification":null},{"reference":{"builtinModule":"Control.Exception.Base"},"usedName":{"valueName":{"identifier":"bracket"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":8850717839016719887},"usedName":{"valueName":{"identifier":"packHeader"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"-"}},"qualification":null},{"reference":{"builtinModule":"GHC.Ptr"},"usedName":{"valueName":{"identifier":"plusPtr"}},"qualification":null},{"reference":{"otherSlice":5856222785976263450},"usedName":{"valueName":{"identifier":"positionRead"}},"qualification":null},{"reference":{"otherSlice":2738277326766894004},"usedName":{"valueName":{"identifier":"mini"}},"qualification":null},{"reference":{"otherSlice":8946614909990212196},"usedName":{"valueName":{"identifier":"bufferIO"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"builtinModule":"GHC.Real"},"usedName":{"valueName":{"identifier":"fromIntegral"}},"qualification":null},{"reference":{"otherSlice":5511506812057969333},"usedName":{"valueName":{"identifier":"fileIdPath"}},"qualification":null},{"reference":{"otherSlice":5511506812057969333},"usedName":{"valueName":{"identifier":"fileIdFd"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Nothing"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":5021289095061614116},"usedName":{"valueName":{"identifier":"openFile"}},"qualification":null},{"reference":{"otherSlice":5592885989741275657},"usedName":{"valueName":{"identifier":"closeFile"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"<="}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null}],"fragment":["readSendFile ::\n             Buffer -> BufSize -> (ByteString -> IO ()) -> SendFile","readSendFile buf siz send fid off0 len0 hook headers\n  = bracket setup teardown $\n      \\ fd ->\n        do hn <- packHeader buf siz send hook headers 0\n           let room = siz - hn\n               buf' = buf `plusPtr` hn\n           n <- positionRead fd buf' (mini room len0) off0\n           bufferIO buf (hn + n) send\n           hook\n           let n' = fromIntegral n\n           loop fd (len0 - n') (off0 + n')\n  where path = fileIdPath fid\n        setup\n          = case fileIdFd fid of\n                Just fd -> return fd\n                Nothing -> openFile path\n        teardown fd\n          = case fileIdFd fid of\n                Just _ -> return ()\n                Nothing -> closeFile fd\n        loop fd len off\n          | len <= 0 = return ()\n          | otherwise =\n            do n <- positionRead fd buf (mini siz len) off\n               bufferIO buf n send\n               let n' = fromIntegral n\n               hook\n               loop fd (len - n') (off + n')"],"instances":[],"language":{"extensions":["ForeignFunctionInterface","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}