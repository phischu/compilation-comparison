{"sliceID":8899880482496387505,"uses":[{"reference":{"otherSlice":7505185669856517837},"usedName":{"valueName":{"identifier":"munstreamR"}},"qualification":null},{"reference":{"otherSlice":8190307605777436853},"usedName":{"valueName":{"identifier":"liftStream"}},"qualification":"Stream"},{"reference":{"otherSlice":3377634759521931512},"usedName":{"typeName":{"identifier":"PrimMonad"}},"qualification":null},{"reference":{"otherSlice":3867849288792351978},"usedName":{"typeName":{"identifier":"MVector"}},"qualification":null},{"reference":{"otherSlice":963393349676107981},"usedName":{"typeName":{"identifier":"Stream"}},"qualification":null},{"reference":{"otherSlice":3377634759521931512},"usedName":{"typeName":{"identifier":"PrimState"}},"qualification":null}],"fragment":["unstreamR ::\n            (PrimMonad m, MVector v a) => Stream a -> m (v (PrimState m) a)","unstreamR s = munstreamR (Stream.liftStream s)"],"instances":[],"language":{"extensions":["DeriveDataTypeable","MultiParamTypeClasses","BangPatterns","ScopedTypeVariables","TypeFamilies","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}