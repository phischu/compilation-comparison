{"sliceID":5890282436281429473,"uses":[{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":">"}},"qualification":null},{"reference":{"otherSlice":599533259965248547},"usedName":{"valueName":{"identifier":"hGetNonBlocking"}},"qualification":"S"},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"identifier":"min"}},"qualification":null},{"reference":{"otherSlice":7235567377809295464},"usedName":{"valueName":{"identifier":"length"}},"qualification":"S"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"otherSlice":7233619382983855062},"usedName":{"constructorName":{"identifier":"Empty"},"constructorTypeName":{"identifier":"ByteString"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"-"}},"qualification":null},{"reference":{"otherSlice":7233619382983855062},"usedName":{"constructorName":{"identifier":"Chunk"},"constructorTypeName":{"identifier":"ByteString"}},"qualification":null},{"reference":{"otherSlice":7095003030560082913},"usedName":{"valueName":{"identifier":"illegalBufferSize"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO.Handle.Types"},"usedName":{"typeName":{"identifier":"Handle"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null},{"reference":{"otherSlice":7233619382983855062},"usedName":{"typeName":{"identifier":"ByteString"}},"qualification":null}],"fragment":["hGetNonBlockingN :: Int -> Handle -> Int -> IO ByteString","hGetNonBlockingN k h n | n > 0 = readChunks n\n  where readChunks !i\n          = do c <- S.hGetNonBlocking h (min k i)\n               case S.length c of\n                   0 -> return Empty\n                   m -> do cs <- readChunks (i - m)\n                           return (Chunk c cs)\nhGetNonBlockingN _ _ 0 = return Empty\nhGetNonBlockingN _ h n = illegalBufferSize h \"hGetNonBlocking\" n"],"instances":[],"language":{"extensions":["BangPatterns","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}