{"sliceID":4344360958454237171,"uses":[{"reference":{"otherSlice":6595020886492780419},"usedName":{"valueName":{"identifier":"tourView"}},"qualification":null},{"reference":{"otherSlice":2601741677205919081},"usedName":{"constructorName":{"identifier":"Null"},"constructorTypeName":{"identifier":"TourView"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Nothing"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":2601741677205919081},"usedName":{"constructorName":{"identifier":"Single"},"constructorTypeName":{"identifier":"TourView"}},"qualification":null},{"reference":{"otherSlice":4994282543854368560},"usedName":{"constructorName":{"identifier":"E"},"constructorTypeName":{"identifier":"Elem"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"otherSlice":2601741677205919081},"usedName":{"constructorName":{"identifier":"Play"},"constructorTypeName":{"identifier":"TourView"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"<="}},"qualification":null},{"reference":{"otherSlice":2196707126988749020},"usedName":{"valueName":{"identifier":"maxKey"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"typeName":{"identifier":"Ord"}},"qualification":null},{"reference":{"otherSlice":8460670313642691138},"usedName":{"typeName":{"identifier":"OrdPSQ"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Maybe"}},"qualification":null}],"fragment":["lookup :: (Ord k) => k -> OrdPSQ k p v -> Maybe (p, v)","lookup k = go\n  where go t\n          = case tourView t of\n                Null -> Nothing\n                Single (E k' p v) | k == k' -> Just (p, v)\n                                  | otherwise -> Nothing\n                Play tl tr | k <= maxKey tl -> go tl\n                           | otherwise -> go tr"],"instances":[],"language":{"extensions":["BangPatterns","DeriveFoldable","DeriveFunctor","DeriveTraversable","ScopedTypeVariables","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}