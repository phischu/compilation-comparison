{"sliceID":5987083430884073717,"uses":[{"reference":{"otherSlice":1699226608098321587},"usedName":{"constructorName":{"identifier":"Empty"},"constructorTypeName":{"identifier":"ByteString"}},"qualification":null},{"reference":{"otherSlice":2109377013281436257},"usedName":{"valueName":{"identifier":"empty"}},"qualification":"S"},{"reference":{"otherSlice":1699226608098321587},"usedName":{"constructorName":{"identifier":"Chunk"},"constructorTypeName":{"identifier":"ByteString"}},"qualification":null},{"reference":{"otherSlice":852632865931594167},"usedName":{"valueName":{"identifier":"unsafeCreate"}},"qualification":"S"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":2722004192362265362},"usedName":{"valueName":{"identifier":"checkedSum"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"map"}},"qualification":"L"},{"reference":{"otherSlice":6258463563638113276},"usedName":{"valueName":{"identifier":"length"}},"qualification":"S"},{"reference":{"otherSlice":9091181793480111601},"usedName":{"valueName":{"identifier":"toChunks"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"otherSlice":8642306666063513779},"usedName":{"constructorName":{"identifier":"PS"},"constructorTypeName":{"identifier":"ByteString"}},"qualification":"S"},{"reference":{"builtinModule":"Foreign.ForeignPtr"},"usedName":{"valueName":{"identifier":"withForeignPtr"}},"qualification":null},{"reference":{"otherSlice":3163872786766878559},"usedName":{"valueName":{"identifier":"memcpy"}},"qualification":"S"},{"reference":{"builtinModule":"GHC.Ptr"},"usedName":{"valueName":{"identifier":"plusPtr"}},"qualification":null},{"reference":{"otherSlice":1699226608098321587},"usedName":{"typeName":{"identifier":"ByteString"}},"qualification":null},{"reference":{"otherSlice":8642306666063513779},"usedName":{"typeName":{"identifier":"ByteString"}},"qualification":"S"}],"fragment":["toStrict :: ByteString -> S.ByteString","toStrict Empty = S.empty\ntoStrict (Chunk c Empty) = c\ntoStrict cs0 = S.unsafeCreate totalLen $ \\ ptr -> go cs0 ptr\n  where totalLen\n          = checkedSum \"Lazy.toStrict\" . L.map S.length . toChunks $ cs0\n        go Empty !_ = return ()\n        go (Chunk (S.PS fp off len) cs) !destptr\n          = withForeignPtr fp $\n              \\ p ->\n                do S.memcpy destptr (p `plusPtr` off) len\n                   go cs (destptr `plusPtr` len)"],"instances":[],"language":{"extensions":["BangPatterns","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}