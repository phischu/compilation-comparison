{"sliceID":2301800076762153802,"uses":[{"reference":{"otherSlice":6429632339228424188},"usedName":{"constructorName":{"identifier":"Put"},"constructorTypeName":{"identifier":"PutM"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":997135445897374101},"usedName":{"constructorName":{"identifier":"PairS"},"constructorTypeName":{"identifier":"PairS"}},"qualification":null},{"reference":{"otherSlice":6429632339228424188},"usedName":{"valueName":{"identifier":"unPut"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"mappend"}},"qualification":"Monoid"},{"reference":{"otherSlice":6978234328144694159},"usedName":{"typeName":{"identifier":"Put"}},"qualification":null}],"fragment":["mappend' :: Put -> Put -> Put","mappend' m k\n  = Put $\n      let PairS _ w = unPut m\n          PairS _ w' = unPut k\n        in PairS () (w `Monoid.mappend` w')"],"instances":[],"language":{"extensions":["FlexibleInstances","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}