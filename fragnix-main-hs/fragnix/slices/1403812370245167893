{"sliceID":1403812370245167893,"uses":[{"reference":{"builtinModule":"GHC.Real"},"usedName":{"typeName":{"identifier":"RealFrac"}},"qualification":null},{"reference":{"otherSlice":5290961166819491409},"usedName":{"typeName":{"identifier":"Scientific"}},"qualification":null},{"reference":{"builtinModule":"GHC.Real"},"usedName":{"valueName":{"identifier":"properFraction"}},"qualification":null},{"reference":{"otherSlice":5290961166819491409},"usedName":{"constructorName":{"identifier":"Scientific"},"constructorTypeName":{"identifier":"Scientific"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"<"}},"qualification":null},{"reference":{"otherSlice":5368028050098732701},"usedName":{"valueName":{"identifier":"dangerouslySmall"}},"qualification":null},{"reference":{"builtinModule":"GHC.Integer"},"usedName":{"valueName":{"identifier":"quotRemInteger"}},"qualification":null},{"reference":{"otherSlice":8661004700107269146},"usedName":{"valueName":{"identifier":"magnitude"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"identifier":"fromInteger"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"otherSlice":4033876615325159371},"usedName":{"valueName":{"identifier":"toIntegral"}},"qualification":null},{"reference":{"builtinModule":"GHC.Real"},"usedName":{"valueName":{"identifier":"truncate"}},"qualification":null},{"reference":{"otherSlice":2029153498485490466},"usedName":{"valueName":{"identifier":"whenFloating"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"GHC.Integer"},"usedName":{"valueName":{"identifier":"quotInteger"}},"qualification":null},{"reference":{"builtinModule":"GHC.Real"},"usedName":{"valueName":{"identifier":"round"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"-"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"identifier":"signum"}},"qualification":null},{"reference":{"otherSlice":5290961166819491409},"usedName":{"valueName":{"identifier":"coefficient"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"identifier":"abs"}},"qualification":null},{"reference":{"builtinModule":"GHC.Real"},"usedName":{"valueName":{"identifier":"even"}},"qualification":null},{"reference":{"builtinModule":"GHC.Err"},"usedName":{"valueName":{"identifier":"error"}},"qualification":null},{"reference":{"builtinModule":"GHC.Real"},"usedName":{"valueName":{"identifier":"ceiling"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"<="}},"qualification":null},{"reference":{"builtinModule":"GHC.Real"},"usedName":{"valueName":{"identifier":"floor"}},"qualification":null},{"reference":{"builtinModule":"GHC.Integer"},"usedName":{"valueName":{"identifier":"divInteger"}},"qualification":null}],"fragment":["instance RealFrac Scientific where\n        properFraction s@(Scientific c e)\n          | e < 0 =\n            if dangerouslySmall c e then (0, s) else\n              case c `quotRemInteger` magnitude (-e) of\n                  (# q, r #) -> (fromInteger q, Scientific r e)\n          | otherwise = (toIntegral s, 0)\n        truncate\n          = whenFloating $\n              \\ c e ->\n                if dangerouslySmall c e then 0 else\n                  fromInteger $ c `quotInteger` magnitude (-e)\n        round\n          = whenFloating $\n              \\ c e ->\n                if dangerouslySmall c e then 0 else\n                  let (# q, r #) = c `quotRemInteger` magnitude (-e)\n                      n = fromInteger q\n                      m | r < 0 = n - 1\n                        | otherwise = n + 1\n                      f = Scientific r e\n                    in\n                    case signum $ coefficient $ abs f - 0.5 of\n                        -1 -> n\n                        0 -> if even n then n else m\n                        1 -> m\n                        _ -> error \"round default defn: Bad value\"\n        ceiling\n          = whenFloating $\n              \\ c e ->\n                if dangerouslySmall c e then if c <= 0 then 0 else 1 else\n                  case c `quotRemInteger` magnitude (-e) of\n                      (# q, r #) | r <= 0 -> fromInteger q\n                                 | otherwise -> fromInteger (q + 1)\n        floor\n          = whenFloating $\n              \\ c e ->\n                if dangerouslySmall c e then if c < 0 then -1 else 0 else\n                  fromInteger (c `divInteger` magnitude (-e))"],"instances":[],"language":{"extensions":["DeriveDataTypeable","BangPatterns","ScopedTypeVariables","UnboxedTuples","PatternGuards","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll"],"isInstance":true}}