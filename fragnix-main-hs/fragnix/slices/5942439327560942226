{"sliceID":5942439327560942226,"uses":[{"reference":{"otherSlice":3770287935488921004},"usedName":{"constructorName":{"identifier":"SResponse"},"constructorTypeName":{"identifier":"SResponse"}},"qualification":null},{"reference":{"otherSlice":3770287935488921004},"usedName":{"valueName":{"identifier":"simpleBody"}},"qualification":null},{"reference":{"otherSlice":6602700848724138777},"usedName":{"valueName":{"identifier":"assertBool"}},"qualification":null},{"reference":{"builtinModule":"GHC.List"},"usedName":{"valueName":{"identifier":"concat"}},"qualification":null},{"reference":{"builtinModule":"GHC.Show"},"usedName":{"valueName":{"identifier":"show"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":4224982194667766763},"usedName":{"valueName":{"identifier":"unpack"}},"qualification":"L8"},{"reference":{"otherSlice":2320156228526443373},"usedName":{"valueName":{"identifier":"isInfixOf"}},"qualification":"S"},{"reference":{"otherSlice":8017170790354418478},"usedName":{"valueName":{"identifier":"concat"}},"qualification":"S"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null},{"reference":{"otherSlice":9091181793480111601},"usedName":{"valueName":{"identifier":"toChunks"}},"qualification":"L"},{"reference":{"otherSlice":1699226608098321587},"usedName":{"typeName":{"identifier":"ByteString"}},"qualification":"L"},{"reference":{"otherSlice":3770287935488921004},"usedName":{"typeName":{"identifier":"SResponse"}},"qualification":null},{"reference":{"otherSlice":1857161883750851484},"usedName":{"typeName":{"identifier":"Session"}},"qualification":null}],"fragment":["assertBodyContains :: L.ByteString -> SResponse -> Session ()","assertBodyContains lbs SResponse{simpleBody = lbs'}\n  = assertBool\n      (concat\n         [\"Expected response body to contain \", show $ L8.unpack lbs,\n          \", but received \", show $ L8.unpack lbs'])\n      $ strict lbs `S.isInfixOf` strict lbs'\n  where strict = S.concat . L.toChunks"],"instances":[],"language":{"extensions":["OverloadedStrings","DeriveDataTypeable","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}