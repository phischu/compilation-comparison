{"sliceID":196098430484093196,"uses":[{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":1098047531709002467},"usedName":{"valueName":{"identifier":"minView"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"builtinModule":"GHC.Err"},"usedName":{"valueName":{"identifier":"error"}},"qualification":null},{"reference":{"otherSlice":1904543910357874234},"usedName":{"constructorName":{"identifier":"Tip"},"constructorTypeName":{"identifier":"Set"}},"qualification":null},{"reference":{"otherSlice":1904543910357874234},"usedName":{"typeName":{"identifier":"Set"}},"qualification":null}],"fragment":["deleteFindMin :: Set a -> (a, Set a)","deleteFindMin t\n  | Just r <- minView t = r\n  | otherwise =\n    (error\n       \"Set.deleteFindMin: can not return the minimal element of an empty set\",\n     Tip)"],"instances":[],"language":{"extensions":["BangPatterns","PatternGuards","DeriveDataTypeable","StandaloneDeriving","RoleAnnotations","TypeFamilies","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll"],"isInstance":false}}