{"sliceID":7549104589823954046,"uses":[{"reference":{"otherSlice":8846265226635086844},"usedName":{"typeName":{"identifier":"ReturnCode"}},"qualification":null},{"reference":{"builtinModule":"GHC.Ptr"},"usedName":{"typeName":{"identifier":"Ptr"}},"qualification":null},{"reference":{"otherSlice":3743132549088005222},"usedName":{"typeName":{"identifier":"CRegex"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null},{"reference":{"builtinModule":"Data.Either"},"usedName":{"typeName":{"identifier":"Either"}},"qualification":null},{"reference":{"otherSlice":106396208025620094},"usedName":{"typeName":{"identifier":"WrapError"}},"qualification":null},{"reference":{"otherSlice":3460751059009918850},"usedName":{"valueName":{"identifier":"c_regerror"}},"qualification":null},{"reference":{"builtinModule":"GHC.Ptr"},"usedName":{"valueName":{"identifier":"nullPtr"}},"qualification":null},{"reference":{"builtinModule":"Foreign.Marshal.Array"},"usedName":{"valueName":{"identifier":"allocaArray"}},"qualification":null},{"reference":{"builtinModule":"GHC.Real"},"usedName":{"valueName":{"identifier":"fromIntegral"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":498108700764045428},"usedName":{"valueName":{"identifier":"nullTest"}},"qualification":null},{"reference":{"builtinModule":"Foreign.C.String"},"usedName":{"valueName":{"identifier":"peekCAString"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"String"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"Data.Either"},"usedName":{"constructorName":{"identifier":"Left"},"constructorTypeName":{"identifier":"Either"}},"qualification":null}],"fragment":["wrapError :: ReturnCode -> Ptr CRegex -> IO (Either WrapError b)","wrapError errCode regex_ptr\n  = do errBufSize <- c_regerror errCode regex_ptr nullPtr 0\n       allocaArray (fromIntegral errBufSize) $\n         \\ errBuf ->\n           do nullTest errBuf \"wrapError errBuf\" $\n                do _ <- c_regerror errCode regex_ptr errBuf errBufSize\n                   msg <- peekCAString errBuf :: IO String\n                   return (Left (errCode, msg))"],"instances":[],"language":{"extensions":["MultiParamTypeClasses","FunctionalDependencies","ForeignFunctionInterface","GeneralizedNewtypeDeriving","FlexibleContexts","TypeSynonymInstances","FlexibleInstances","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}