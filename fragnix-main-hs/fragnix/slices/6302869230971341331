{"sliceID":6302869230971341331,"uses":[{"reference":{"otherSlice":4040851656968671632},"usedName":{"valueName":{"identifier":"settingsBeforeMainLoop"}},"qualification":null},{"reference":{"otherSlice":7500347825942433238},"usedName":{"valueName":{"identifier":"newCounter"}},"qualification":null},{"reference":{"otherSlice":3149314298203977329},"usedName":{"valueName":{"identifier":"withDateCache"}},"qualification":"D"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":5847389740638798509},"usedName":{"valueName":{"identifier":"withFdCache"}},"qualification":"F"},{"reference":{"otherSlice":5018333646191829739},"usedName":{"valueName":{"identifier":"acceptConnection"}},"qualification":null},{"reference":{"otherSlice":4040851656968671632},"usedName":{"valueName":{"identifier":"settingsFdCacheDuration"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"*"}},"qualification":null},{"reference":{"otherSlice":4040851656968671632},"usedName":{"valueName":{"identifier":"settingsManager"}},"qualification":null},{"reference":{"builtinModule":"Data.Maybe"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"Data.Maybe"},"usedName":{"constructorName":{"identifier":"Nothing"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"Control.Exception.Base"},"usedName":{"valueName":{"identifier":"bracket"}},"qualification":null},{"reference":{"otherSlice":9100524586941615037},"usedName":{"valueName":{"identifier":"initialize"}},"qualification":"T"},{"reference":{"otherSlice":4040851656968671632},"usedName":{"valueName":{"identifier":"settingsTimeout"}},"qualification":null},{"reference":{"otherSlice":5149620509502463340},"usedName":{"valueName":{"identifier":"stopManager"}},"qualification":"T"},{"reference":{"otherSlice":4040851656968671632},"usedName":{"typeName":{"identifier":"Settings"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null},{"reference":{"otherSlice":4881703223122348873},"usedName":{"typeName":{"identifier":"Connection"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"otherSlice":5051683172608853772},"usedName":{"typeName":{"identifier":"SockAddr"}},"qualification":null},{"reference":{"otherSlice":2500932139194697081},"usedName":{"typeName":{"identifier":"Application"}},"qualification":null}],"fragment":["runSettingsConnectionMakerSecure ::\n                                 Settings ->\n                                   IO (IO (Connection, Bool), SockAddr) -> Application -> IO ()","runSettingsConnectionMakerSecure set getConnMaker app\n  = do settingsBeforeMainLoop set\n       counter <- newCounter\n       D.withDateCache $\n         \\ dc ->\n           F.withFdCache fdCacheDurationInSeconds $\n             \\ fc ->\n               withTimeoutManager $\n                 \\ tm -> acceptConnection set getConnMaker app dc fc tm counter\n  where fdCacheDurationInSeconds\n          = settingsFdCacheDuration set * 1000000\n        withTimeoutManager f\n          = case settingsManager set of\n                Just tm -> f tm\n                Nothing -> bracket (T.initialize $ settingsTimeout set * 1000000)\n                             T.stopManager\n                             f"],"instances":[],"language":{"extensions":["OverloadedStrings","ScopedTypeVariables","TupleSections","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}