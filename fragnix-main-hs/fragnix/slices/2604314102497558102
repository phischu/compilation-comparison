{"sliceID":2604314102497558102,"uses":[{"reference":{"otherSlice":3281333190237423352},"usedName":{"valueName":{"identifier":"unstreamM"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null},{"reference":{"otherSlice":3170071850099014306},"usedName":{"valueName":{"identifier":"unfoldrM"}},"qualification":"MBundle"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Monad"}},"qualification":null},{"reference":{"otherSlice":8572689894313737623},"usedName":{"typeName":{"identifier":"Vector"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Maybe"}},"qualification":null}],"fragment":["unfoldrM ::\n           (Monad m, Vector v a) => (b -> m (Maybe (a, b))) -> b -> m (v a)","unfoldrM f = unstreamM . MBundle.unfoldrM f"],"instances":[],"language":{"extensions":["Rank2Types","MultiParamTypeClasses","FlexibleContexts","TypeFamilies","ScopedTypeVariables","BangPatterns","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}