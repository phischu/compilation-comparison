{"sliceID":986104184513845021,"uses":[{"reference":{"otherSlice":8785507881657649312},"usedName":{"constructorName":{"identifier":"Parser"},"constructorTypeName":{"identifier":"Parser"}},"qualification":"T"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":1499490734589547047},"usedName":{"valueName":{"identifier":"substring"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"-"}},"qualification":null},{"reference":{"otherSlice":8785507881657649312},"usedName":{"valueName":{"identifier":"runParser"}},"qualification":null},{"reference":{"otherSlice":2921449568316915535},"usedName":{"typeName":{"identifier":"Parser"}},"qualification":null},{"reference":{"otherSlice":4010822550476529195},"usedName":{"typeName":{"identifier":"ByteString"}},"qualification":null}],"fragment":["match :: Parser a -> Parser (ByteString, a)","match p\n  = T.Parser $\n      \\ t pos more lose succ ->\n        let succ' t' pos' more' a\n              = succ t' pos' more' (substring pos (pos' - pos) t', a)\n          in runParser p t pos more lose succ'"],"instances":[],"language":{"extensions":["BangPatterns","GADTs","OverloadedStrings","RankNTypes","RecordWildCards","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}