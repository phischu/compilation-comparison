{"sliceID":3149712587499877006,"uses":[{"reference":{"otherSlice":8845661889015669136},"usedName":{"typeName":{"identifier":"MonadReader"}},"qualification":null},{"reference":{"otherSlice":5096762142386927551},"usedName":{"typeName":{"identifier":"CatchT"}},"qualification":null},{"reference":{"otherSlice":8845661889015669136},"usedName":{"valueName":{"identifier":"ask"}},"qualification":null},{"reference":{"otherSlice":3258704534657931563},"usedName":{"valueName":{"identifier":"lift"}},"qualification":null},{"reference":{"otherSlice":8845661889015669136},"usedName":{"valueName":{"identifier":"local"}},"qualification":null},{"reference":{"otherSlice":5096762142386927551},"usedName":{"constructorName":{"identifier":"CatchT"},"constructorTypeName":{"identifier":"CatchT"}},"qualification":null}],"fragment":["instance MonadReader e m => MonadReader e (CatchT m) where\n        ask = lift ask\n        local f (CatchT m) = CatchT (local f m)"],"instances":[],"language":{"extensions":["ExistentialQuantification","GeneralizedNewtypeDeriving","RankNTypes","FlexibleInstances","MultiParamTypeClasses","UndecidableInstances","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":true}}