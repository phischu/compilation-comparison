{"sliceID":7102143276544135364,"uses":[{"reference":{"otherSlice":6530490125521528221},"usedName":{"valueName":{"identifier":"ioeAddLocation"}},"qualification":null},{"reference":{"builtinModule":"System.IO.Error"},"usedName":{"valueName":{"identifier":"modifyIOError"}},"qualification":null},{"reference":{"builtinModule":"System.IO.Error"},"usedName":{"valueName":{"identifier":"catchIOError"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":6397591018606682036},"usedName":{"valueName":{"identifier":"getSymbolicLinkMetadata"}},"qualification":null},{"reference":{"otherSlice":7747430897778143402},"usedName":{"valueName":{"identifier":"fileTypeFromMetadata"}},"qualification":null},{"reference":{"otherSlice":3622322768801000623},"usedName":{"constructorName":{"identifier":"DirectoryLink"},"constructorTypeName":{"identifier":"FileType"}},"qualification":null},{"reference":{"otherSlice":2442692966488138646},"usedName":{"valueName":{"identifier":"removeDirectory"}},"qualification":null},{"reference":{"otherSlice":3622322768801000623},"usedName":{"constructorName":{"identifier":"Directory"},"constructorTypeName":{"identifier":"FileType"}},"qualification":null},{"reference":{"otherSlice":1217988371225679537},"usedName":{"valueName":{"identifier":"listDirectory"}},"qualification":null},{"reference":{"otherSlice":179086586840781475},"usedName":{"valueName":{"identifier":"sequenceWithIOErrors_"}},"qualification":null},{"reference":{"otherSlice":3970690690701501968},"usedName":{"valueName":{"operator":"</>"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"++"}},"qualification":null},{"reference":{"otherSlice":1517911374496032575},"usedName":{"valueName":{"identifier":"removeFile"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null},{"reference":{"otherSlice":2072594538463747399},"usedName":{"valueName":{"identifier":"tryIOErrorType"}},"qualification":null},{"reference":{"builtinModule":"System.IO.Error"},"usedName":{"valueName":{"identifier":"isDoesNotExistError"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO"},"usedName":{"typeName":{"identifier":"FilePath"}},"qualification":null},{"reference":{"otherSlice":7508098659145538599},"usedName":{"valueName":{"identifier":"getPermissions"}},"qualification":null},{"reference":{"otherSlice":546116987256987500},"usedName":{"valueName":{"identifier":"setPermissions"}},"qualification":null},{"reference":{"otherSlice":6786505681718492491},"usedName":{"valueName":{"identifier":"readable"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"True"},"constructorTypeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"otherSlice":6786505681718492491},"usedName":{"valueName":{"identifier":"searchable"}},"qualification":null},{"reference":{"otherSlice":6786505681718492491},"usedName":{"valueName":{"identifier":"writable"}},"qualification":null}],"fragment":["removePathForcibly :: FilePath -> IO ()","removePathForcibly path\n  = (`ioeAddLocation` \"removePathForcibly\") `modifyIOError`\n      do makeRemovable path `catchIOError` \\ _ -> return ()\n         ignoreDoesNotExistError $\n           do m <- getSymbolicLinkMetadata path\n              case fileTypeFromMetadata m of\n                  DirectoryLink -> removeDirectory path\n                  Directory -> do names <- listDirectory path\n                                  sequenceWithIOErrors_ $\n                                    [removePathForcibly (path </> name) | name <- names] ++\n                                      [removeDirectory path]\n                  _ -> removeFile path\n  where ignoreDoesNotExistError :: IO () -> IO ()\n        ignoreDoesNotExistError action\n          = do _ <- tryIOErrorType isDoesNotExistError action\n               return ()\n        \n        makeRemovable :: FilePath -> IO ()\n        makeRemovable p\n          = do perms <- getPermissions p\n               setPermissions path\n                 perms{readable = True, searchable = True, writable = True}"],"instances":[],"language":{"extensions":["MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}