{"sliceID":6337943052895394421,"uses":[{"reference":{"otherSlice":2342896079295405067},"usedName":{"valueName":{"identifier":"fromDistinctAscList"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"typeName":{"identifier":"Eq"}},"qualification":null},{"reference":{"otherSlice":1435151082723044833},"usedName":{"typeName":{"identifier":"Set"}},"qualification":null}],"fragment":["fromAscList :: Eq a => [a] -> Set a","fromAscList xs = fromDistinctAscList (combineEq xs)\n  where combineEq xs'\n          = case xs' of\n                [] -> []\n                [x] -> [x]\n                (x : xx) -> combineEq' x xx\n        combineEq' z [] = [z]\n        combineEq' z (x : xs')\n          | z == x = combineEq' z xs'\n          | otherwise = z : combineEq' x xs'"],"instances":[],"language":{"extensions":["DeriveDataTypeable","StandaloneDeriving","RoleAnnotations","TypeFamilies","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}