{"sliceID":7783759572229412990,"uses":[{"reference":{"otherSlice":4010822550476529195},"usedName":{"typeName":{"identifier":"ByteString"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Char"}},"qualification":null},{"reference":{"otherSlice":7202692338078551997},"usedName":{"valueName":{"identifier":"null"}},"qualification":"B"},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"||"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"otherSlice":6858812427947353084},"usedName":{"valueName":{"identifier":"unsafeHead"}},"qualification":null},{"reference":{"otherSlice":1053797585940503682},"usedName":{"valueName":{"identifier":"unsafeTail"}},"qualification":"B"}],"fragment":["zip :: ByteString -> ByteString -> [(Char, Char)]","zip ps qs\n  | B.null ps || B.null qs = []\n  | otherwise =\n    (unsafeHead ps, unsafeHead qs) :\n      zip (B.unsafeTail ps) (B.unsafeTail qs)"],"instances":[],"language":{"extensions":["BangPatterns","MagicHash","UnboxedTuples","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}