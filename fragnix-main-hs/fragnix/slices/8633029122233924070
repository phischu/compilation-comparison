{"sliceID":8633029122233924070,"uses":[{"reference":{"otherSlice":6856618864151171204},"usedName":{"constructorName":{"identifier":"One"},"constructorTypeName":{"identifier":"Digit"}},"qualification":null},{"reference":{"otherSlice":8087767551287683313},"usedName":{"constructorName":{"identifier":"Split"},"constructorTypeName":{"identifier":"Split"}},"qualification":null},{"reference":{"otherSlice":2103754850612341338},"usedName":{"constructorName":{"identifier":"EmptyT"},"constructorTypeName":{"identifier":"FingerTree"}},"qualification":null},{"reference":{"otherSlice":1630285581489176614},"usedName":{"valueName":{"identifier":"pullL"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"-"}},"qualification":null},{"reference":{"otherSlice":2658389187921074114},"usedName":{"valueName":{"identifier":"size"}},"qualification":null},{"reference":{"otherSlice":6856618864151171204},"usedName":{"constructorName":{"identifier":"Two"},"constructorTypeName":{"identifier":"Digit"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"<"}},"qualification":null},{"reference":{"otherSlice":2103754850612341338},"usedName":{"constructorName":{"identifier":"Deep"},"constructorTypeName":{"identifier":"FingerTree"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"otherSlice":2103754850612341338},"usedName":{"constructorName":{"identifier":"Single"},"constructorTypeName":{"identifier":"FingerTree"}},"qualification":null},{"reference":{"otherSlice":6856618864151171204},"usedName":{"constructorName":{"identifier":"Three"},"constructorTypeName":{"identifier":"Digit"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"otherSlice":6856618864151171204},"usedName":{"constructorName":{"identifier":"Four"},"constructorTypeName":{"identifier":"Digit"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null},{"reference":{"otherSlice":6856618864151171204},"usedName":{"typeName":{"identifier":"Digit"}},"qualification":null},{"reference":{"otherSlice":1673753023314990609},"usedName":{"typeName":{"identifier":"Node"}},"qualification":null},{"reference":{"otherSlice":2103754850612341338},"usedName":{"typeName":{"identifier":"FingerTree"}},"qualification":null},{"reference":{"otherSlice":8087767551287683313},"usedName":{"typeName":{"identifier":"Split"}},"qualification":null}],"fragment":["splitPrefixN ::\n             Int ->\n               Int ->\n                 Digit (Node a) ->\n                   FingerTree (Node (Node a)) -> Digit (Node a) -> Split a","splitPrefixN !_i !s (One a) m sf\n  = Split EmptyT a (pullL (s - size a) m sf)\nsplitPrefixN i s (Two a b) m sf\n  | i < sa = Split EmptyT a (Deep (s - sa) (One b) m sf)\n  | otherwise = Split (Single a) b (pullL (s - sa - size b) m sf)\n  where sa = size a\nsplitPrefixN i s (Three a b c) m sf\n  | i < sa = Split EmptyT a (Deep (s - sa) (Two b c) m sf)\n  | i < sab = Split (Single a) b (Deep (s - sab) (One c) m sf)\n  | otherwise =\n    Split (Deep sab (One a) EmptyT (One b)) c\n      (pullL (s - sab - size c) m sf)\n  where sa = size a\n        sab = sa + size b\nsplitPrefixN i s (Four a b c d) m sf\n  | i < sa = Split EmptyT a $ Deep (s - sa) (Three b c d) m sf\n  | i < sab = Split (Single a) b $ Deep (s - sab) (Two c d) m sf\n  | i < sabc =\n    Split (Deep sab (One a) EmptyT (One b)) c $\n      Deep (s - sabc) (One d) m sf\n  | otherwise =\n    Split (Deep sabc (Two a b) EmptyT (One c)) d $\n      pullL (s - sabc - size d) m sf\n  where sa = size a\n        sab = sa + size b\n        sabc = sab + size c"],"instances":[],"language":{"extensions":["BangPatterns","DeriveDataTypeable","StandaloneDeriving","FlexibleInstances","ScopedTypeVariables","DeriveGeneric","TypeFamilies","PatternSynonyms","ViewPatterns","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}