{"sliceID":6955279006002130219,"uses":[{"reference":{"builtinModule":"GHC.Enum"},"usedName":{"typeName":{"identifier":"Enum"}},"qualification":null},{"reference":{"otherSlice":6302721137776123793},"usedName":{"typeName":{"identifier":"IPv6"}},"qualification":null},{"reference":{"builtinModule":"GHC.Enum"},"usedName":{"valueName":{"identifier":"fromEnum"}},"qualification":null},{"reference":{"otherSlice":6302721137776123793},"usedName":{"constructorName":{"identifier":"IP6"},"constructorTypeName":{"identifier":"IPv6"}},"qualification":null},{"reference":{"builtinModule":"Data.Bits"},"usedName":{"valueName":{"identifier":"shift"}},"qualification":null},{"reference":{"builtinModule":"Data.Bits"},"usedName":{"valueName":{"operator":".|."}},"qualification":null},{"reference":{"builtinModule":"GHC.Enum"},"usedName":{"valueName":{"identifier":"toEnum"}},"qualification":null},{"reference":{"builtinModule":"GHC.Real"},"usedName":{"valueName":{"identifier":"fromIntegral"}},"qualification":null},{"reference":{"builtinModule":"GHC.Integer.GMP.Internals"},"usedName":{"typeName":{"identifier":"Integer"}},"qualification":null},{"reference":{"builtinModule":"Data.Bits"},"usedName":{"valueName":{"identifier":"shiftR"}},"qualification":null},{"reference":{"builtinModule":"Data.Bits"},"usedName":{"valueName":{"operator":".&."}},"qualification":null},{"reference":{"builtinModule":"GHC.Enum"},"usedName":{"valueName":{"identifier":"succ"}},"qualification":null},{"reference":{"builtinModule":"GHC.Enum"},"usedName":{"valueName":{"identifier":"succError"}},"qualification":null},{"reference":{"builtinModule":"GHC.Enum"},"usedName":{"valueName":{"identifier":"pred"}},"qualification":null},{"reference":{"builtinModule":"GHC.Enum"},"usedName":{"valueName":{"identifier":"predError"}},"qualification":null},{"reference":{"builtinModule":"GHC.Enum"},"usedName":{"valueName":{"identifier":"enumFrom"}},"qualification":null},{"reference":{"builtinModule":"GHC.Enum"},"usedName":{"valueName":{"identifier":"enumFromTo"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"builtinModule":"GHC.Enum"},"usedName":{"valueName":{"identifier":"enumFromThen"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"fmap"}},"qualification":null},{"reference":{"otherSlice":867577319990924866},"usedName":{"valueName":{"identifier":"integerToIP6"}},"qualification":null},{"reference":{"otherSlice":390180825033540616},"usedName":{"valueName":{"identifier":"ip6ToInteger"}},"qualification":null},{"reference":{"builtinModule":"GHC.Enum"},"usedName":{"valueName":{"identifier":"enumFromThenTo"}},"qualification":null}],"fragment":["instance Enum IPv6 where\n        fromEnum (IP6 (a, b, c, d))\n          = let a' = fromEnum a `shift` 96\n                b' = fromEnum b `shift` 64\n                c' = fromEnum c `shift` 32\n                d' = fromEnum d\n              in a' .|. b' .|. c' .|. d'\n        toEnum i\n          = let i' = fromIntegral i :: Integer\n                a = fromIntegral (i' `shiftR` 96 .&. 4294967295)\n                b = fromIntegral (i' `shiftR` 64 .&. 4294967295)\n                c = fromIntegral (i' `shiftR` 32 .&. 4294967295)\n                d = fromIntegral (i' .&. 4294967295)\n              in IP6 (a, b, c, d)\n        succ (IP6 (4294967295, 4294967295, 4294967295, 4294967295))\n          = succError \"IPv6\"\n        succ (IP6 (a, 4294967295, 4294967295, 4294967295))\n          = IP6 (succ a, 0, 0, 0)\n        succ (IP6 (a, b, 4294967295, 4294967295)) = IP6 (a, succ b, 0, 0)\n        succ (IP6 (a, b, c, 4294967295)) = IP6 (a, b, succ c, 0)\n        succ (IP6 (a, b, c, d)) = IP6 (a, b, c, succ d)\n        pred (IP6 (0, 0, 0, 0)) = predError \"IPv6\"\n        pred (IP6 (a, 0, 0, 0))\n          = IP6 (pred a, 4294967295, 4294967295, 4294967295)\n        pred (IP6 (a, b, 0, 0)) = IP6 (a, pred b, 4294967295, 4294967295)\n        pred (IP6 (a, b, c, 0)) = IP6 (a, b, pred c, 4294967295)\n        pred (IP6 (a, b, c, d)) = IP6 (a, b, c, pred d)\n        enumFrom ip = ip : gen ip\n          where gen i = let i' = succ i in i' : gen i'\n        enumFromTo ip ip' = ip : gen ip\n          where gen i\n                  | i == ip' = []\n                  | otherwise = let i' = succ i in i' : gen i'\n        enumFromThen ip ip'\n          = fmap integerToIP6 [ip6ToInteger ip, ip6ToInteger ip' ..]\n        enumFromThenTo ip inc fin\n          = fmap integerToIP6\n              [ip6ToInteger ip, ip6ToInteger inc .. ip6ToInteger fin]"],"instances":[],"language":{"extensions":["DeriveDataTypeable","DeriveGeneric","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":true}}