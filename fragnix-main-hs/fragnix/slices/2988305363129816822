{"sliceID":2988305363129816822,"uses":[{"reference":{"otherSlice":2392723070956752342},"usedName":{"typeName":{"identifier":"Unbox"}},"qualification":null},{"reference":{"otherSlice":8934491602005769172},"usedName":{"typeName":{"identifier":"Vector"}},"qualification":"G"},{"reference":{"otherSlice":5287775303299591169},"usedName":{"typeName":{"identifier":"Vector"}},"qualification":null},{"reference":{"otherSlice":8934491602005769172},"usedName":{"valueName":{"identifier":"basicUnsafeFreeze"}},"qualification":"G"},{"reference":{"otherSlice":2757734702229692550},"usedName":{"constructorName":{"identifier":"MV_6"},"constructorTypeName":{"identifier":"MVector"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":5287775303299591169},"usedName":{"constructorName":{"identifier":"V_6"},"constructorTypeName":{"identifier":"Vector"}},"qualification":null},{"reference":{"otherSlice":8934491602005769172},"usedName":{"valueName":{"identifier":"basicUnsafeThaw"}},"qualification":"G"},{"reference":{"otherSlice":8934491602005769172},"usedName":{"valueName":{"identifier":"basicLength"}},"qualification":"G"},{"reference":{"otherSlice":8934491602005769172},"usedName":{"valueName":{"identifier":"basicUnsafeSlice"}},"qualification":"G"},{"reference":{"otherSlice":8934491602005769172},"usedName":{"valueName":{"identifier":"basicUnsafeIndexM"}},"qualification":"G"},{"reference":{"otherSlice":8934491602005769172},"usedName":{"valueName":{"identifier":"basicUnsafeCopy"}},"qualification":"G"},{"reference":{"otherSlice":8934491602005769172},"usedName":{"valueName":{"identifier":"elemseq"}},"qualification":"G"},{"reference":{"builtinModule":"GHC.Err"},"usedName":{"valueName":{"identifier":"undefined"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null}],"fragment":["instance (Unbox a, Unbox b, Unbox c, Unbox d, Unbox e, Unbox f) =>\n         G.Vector Vector (a, b, c, d, e, f) where\n        {-# INLINE basicUnsafeFreeze #-}\n        basicUnsafeFreeze (MV_6 n_ as bs cs ds es fs)\n          = do as' <- G.basicUnsafeFreeze as\n               bs' <- G.basicUnsafeFreeze bs\n               cs' <- G.basicUnsafeFreeze cs\n               ds' <- G.basicUnsafeFreeze ds\n               es' <- G.basicUnsafeFreeze es\n               fs' <- G.basicUnsafeFreeze fs\n               return $ V_6 n_ as' bs' cs' ds' es' fs'\n        \n        {-# INLINE basicUnsafeThaw #-}\n        basicUnsafeThaw (V_6 n_ as bs cs ds es fs)\n          = do as' <- G.basicUnsafeThaw as\n               bs' <- G.basicUnsafeThaw bs\n               cs' <- G.basicUnsafeThaw cs\n               ds' <- G.basicUnsafeThaw ds\n               es' <- G.basicUnsafeThaw es\n               fs' <- G.basicUnsafeThaw fs\n               return $ MV_6 n_ as' bs' cs' ds' es' fs'\n        \n        {-# INLINE basicLength #-}\n        basicLength (V_6 n_ as bs cs ds es fs) = n_\n        \n        {-# INLINE basicUnsafeSlice #-}\n        basicUnsafeSlice i_ m_ (V_6 n_ as bs cs ds es fs)\n          = V_6 m_ (G.basicUnsafeSlice i_ m_ as)\n              (G.basicUnsafeSlice i_ m_ bs)\n              (G.basicUnsafeSlice i_ m_ cs)\n              (G.basicUnsafeSlice i_ m_ ds)\n              (G.basicUnsafeSlice i_ m_ es)\n              (G.basicUnsafeSlice i_ m_ fs)\n        \n        {-# INLINE basicUnsafeIndexM #-}\n        basicUnsafeIndexM (V_6 n_ as bs cs ds es fs) i_\n          = do a <- G.basicUnsafeIndexM as i_\n               b <- G.basicUnsafeIndexM bs i_\n               c <- G.basicUnsafeIndexM cs i_\n               d <- G.basicUnsafeIndexM ds i_\n               e <- G.basicUnsafeIndexM es i_\n               f <- G.basicUnsafeIndexM fs i_\n               return (a, b, c, d, e, f)\n        \n        {-# INLINE basicUnsafeCopy #-}\n        basicUnsafeCopy (MV_6 n_1 as1 bs1 cs1 ds1 es1 fs1)\n          (V_6 n_2 as2 bs2 cs2 ds2 es2 fs2)\n          = do G.basicUnsafeCopy as1 as2\n               G.basicUnsafeCopy bs1 bs2\n               G.basicUnsafeCopy cs1 cs2\n               G.basicUnsafeCopy ds1 ds2\n               G.basicUnsafeCopy es1 es2\n               G.basicUnsafeCopy fs1 fs2\n        \n        {-# INLINE elemseq #-}\n        elemseq _ (a, b, c, d, e, f)\n          = G.elemseq (undefined :: Vector a) a .\n              G.elemseq (undefined :: Vector b) b .\n                G.elemseq (undefined :: Vector c) c .\n                  G.elemseq (undefined :: Vector d) d .\n                    G.elemseq (undefined :: Vector e) e .\n                      G.elemseq (undefined :: Vector f) f"],"instances":[],"language":{"extensions":["DeriveDataTypeable","BangPatterns","MultiParamTypeClasses","TypeFamilies","FlexibleContexts","StandaloneDeriving","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":true}}