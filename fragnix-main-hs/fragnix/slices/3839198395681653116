{"sliceID":3839198395681653116,"uses":[{"reference":{"otherSlice":1455325973321552685},"usedName":{"valueName":{"identifier":"compNewline"}},"qualification":null},{"reference":{"builtinModule":"Data.Bits"},"usedName":{"valueName":{"operator":".|."}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"id"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null},{"reference":{"otherSlice":5921463955545102723},"usedName":{"valueName":{"identifier":"compIgnoreCase"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":8189780573700009176},"usedName":{"valueName":{"identifier":"compExtended"}},"qualification":null},{"reference":{"otherSlice":2332792786326895280},"usedName":{"valueName":{"identifier":"makeRegexOpts"}},"qualification":null},{"reference":{"otherSlice":7328676810814699044},"usedName":{"valueName":{"identifier":"defaultExecOpt"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"String"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"otherSlice":1541402738797772585},"usedName":{"typeName":{"identifier":"Regex"}},"qualification":null}],"fragment":["mkRegexWithOpts :: String -> Bool -> Bool -> Regex","mkRegexWithOpts s single_line case_sensitive\n  = let opt\n          = (if single_line then (compNewline .|.) else id) .\n              (if case_sensitive then id else (compIgnoreCase .|.))\n              $ compExtended\n      in makeRegexOpts opt defaultExecOpt s"],"instances":[],"language":{"extensions":["MultiParamTypeClasses","FunctionalDependencies","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}