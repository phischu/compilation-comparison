{"sliceID":8695458108676976927,"uses":[{"reference":{"otherSlice":343153260723659741},"usedName":{"valueName":{"identifier":"zipWithM_"}},"qualification":"M"},{"reference":{"otherSlice":8190307605777436853},"usedName":{"valueName":{"identifier":"liftStream"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Monad"}},"qualification":null},{"reference":{"otherSlice":963393349676107981},"usedName":{"typeName":{"identifier":"Stream"}},"qualification":null}],"fragment":["zipWithM_ ::\n            Monad m => (a -> b -> m c) -> Stream a -> Stream b -> m ()","zipWithM_ f as bs = M.zipWithM_ f (liftStream as) (liftStream bs)"],"instances":[],"language":{"extensions":["DeriveDataTypeable","FlexibleInstances","Rank2Types","BangPatterns","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}