{"sliceID":1246080663157542059,"uses":[{"reference":{"otherSlice":4830827366515580039},"usedName":{"typeName":{"identifier":"BoundedPrim"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Char"}},"qualification":null},{"reference":{"otherSlice":859157912124004177},"usedName":{"valueName":{"identifier":"boudedPrim"}},"qualification":null},{"reference":{"otherSlice":8987298745853552498},"usedName":{"valueName":{"identifier":"encodeCharUtf8"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":">>"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"GHC.Ptr"},"usedName":{"valueName":{"identifier":"plusPtr"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"Foreign.Storable"},"usedName":{"valueName":{"identifier":"pokeByteOff"}},"qualification":null}],"fragment":["charUtf8 :: BoundedPrim Char","charUtf8 = boudedPrim 4 (encodeCharUtf8 f1 f2 f3 f4)\n  where pokeN n io op = io op >> return (op `plusPtr` n)\n        f1 x1 = pokeN 1 $ \\ op -> do pokeByteOff op 0 x1\n        f2 x1 x2\n          = pokeN 2 $\n              \\ op ->\n                do pokeByteOff op 0 x1\n                   pokeByteOff op 1 x2\n        f3 x1 x2 x3\n          = pokeN 3 $\n              \\ op ->\n                do pokeByteOff op 0 x1\n                   pokeByteOff op 1 x2\n                   pokeByteOff op 2 x3\n        f4 x1 x2 x3 x4\n          = pokeN 4 $\n              \\ op ->\n                do pokeByteOff op 0 x1\n                   pokeByteOff op 1 x2\n                   pokeByteOff op 2 x3\n                   pokeByteOff op 3 x4"],"instances":[],"language":{"extensions":["BangPatterns","ScopedTypeVariables","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}