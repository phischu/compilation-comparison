{"sliceID":5600279747580928461,"uses":[{"reference":{"otherSlice":7973921184972124162},"usedName":{"valueName":{"identifier":"size"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"<"}},"qualification":null},{"reference":{"builtinModule":"Foreign.Storable"},"usedName":{"valueName":{"identifier":"sizeOf"}},"qualification":null},{"reference":{"builtinModule":"GHC.Err"},"usedName":{"valueName":{"identifier":"undefined"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Float"}},"qualification":null},{"reference":{"builtinModule":"GHC.Err"},"usedName":{"valueName":{"identifier":"error"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"otherSlice":2650548634663014814},"usedName":{"valueName":{"identifier":"fixedPrim"}},"qualification":null},{"reference":{"builtinModule":"Foreign.Storable"},"usedName":{"valueName":{"identifier":"poke"}},"qualification":null},{"reference":{"builtinModule":"GHC.Ptr"},"usedName":{"valueName":{"identifier":"castPtr"}},"qualification":null},{"reference":{"builtinModule":"Foreign.Storable"},"usedName":{"valueName":{"identifier":"peek"}},"qualification":null},{"reference":{"otherSlice":4944293556139178086},"usedName":{"valueName":{"identifier":"runF"}},"qualification":null},{"reference":{"otherSlice":3481068573703498558},"usedName":{"typeName":{"identifier":"FixedPrim"}},"qualification":null},{"reference":{"builtinModule":"GHC.Word"},"usedName":{"typeName":{"identifier":"Word32"}},"qualification":null}],"fragment":["encodeFloatViaWord32F :: FixedPrim Word32 -> FixedPrim Float","encodeFloatViaWord32F w32fe\n  | size w32fe < sizeOf (undefined :: Float) =\n    error $ \"encodeFloatViaWord32F: encoding not wide enough\"\n  | otherwise =\n    fixedPrim (size w32fe) $\n      \\ x op ->\n        do poke (castPtr op) x\n           x' <- peek (castPtr op)\n           runF w32fe x' op"],"instances":[],"language":{"extensions":["ScopedTypeVariables","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}