{"sliceID":3916728615848335064,"uses":[{"reference":{"otherSlice":7352349056474573366},"usedName":{"valueName":{"identifier":"hash"}},"qualification":null},{"reference":{"otherSlice":1013433531415570027},"usedName":{"constructorName":{"identifier":"Empty"},"constructorTypeName":{"identifier":"HashMap"}},"qualification":null},{"reference":{"otherSlice":1013433531415570027},"usedName":{"constructorName":{"identifier":"Leaf"},"constructorTypeName":{"identifier":"HashMap"}},"qualification":null},{"reference":{"otherSlice":9205917895425065335},"usedName":{"constructorName":{"identifier":"L"},"constructorTypeName":{"identifier":"Leaf"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"otherSlice":7574141262701362909},"usedName":{"valueName":{"identifier":"ptrEq"}},"qualification":null},{"reference":{"otherSlice":8844330196170481334},"usedName":{"valueName":{"identifier":"collision"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"otherSlice":501141487880085792},"usedName":{"valueName":{"identifier":"runST"}},"qualification":null},{"reference":{"otherSlice":2190050577187834567},"usedName":{"valueName":{"identifier":"two"}},"qualification":null},{"reference":{"otherSlice":1013433531415570027},"usedName":{"constructorName":{"identifier":"BitmapIndexed"},"constructorTypeName":{"identifier":"HashMap"}},"qualification":null},{"reference":{"builtinModule":"Data.Bits"},"usedName":{"valueName":{"operator":".&."}},"qualification":null},{"reference":{"otherSlice":6439745779903433820},"usedName":{"valueName":{"identifier":"insert"}},"qualification":"A"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$!"}},"qualification":null},{"reference":{"otherSlice":7892838395515891626},"usedName":{"valueName":{"identifier":"bitmapIndexedOrFull"}},"qualification":null},{"reference":{"builtinModule":"Data.Bits"},"usedName":{"valueName":{"operator":".|."}},"qualification":null},{"reference":{"otherSlice":7169929954465792251},"usedName":{"valueName":{"identifier":"index"}},"qualification":"A"},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"otherSlice":5699939631341628310},"usedName":{"valueName":{"identifier":"bitsPerSubkey"}},"qualification":null},{"reference":{"otherSlice":6823621386513732780},"usedName":{"valueName":{"identifier":"update"}},"qualification":"A"},{"reference":{"otherSlice":7149195466254759117},"usedName":{"valueName":{"identifier":"mask"}},"qualification":null},{"reference":{"otherSlice":1653876775134029804},"usedName":{"valueName":{"identifier":"sparseIndex"}},"qualification":null},{"reference":{"otherSlice":1013433531415570027},"usedName":{"constructorName":{"identifier":"Full"},"constructorTypeName":{"identifier":"HashMap"}},"qualification":null},{"reference":{"otherSlice":5838501498766126452},"usedName":{"valueName":{"identifier":"update16"}},"qualification":null},{"reference":{"otherSlice":3166271543971936421},"usedName":{"valueName":{"identifier":"index"}},"qualification":null},{"reference":{"otherSlice":1013433531415570027},"usedName":{"constructorName":{"identifier":"Collision"},"constructorTypeName":{"identifier":"HashMap"}},"qualification":null},{"reference":{"otherSlice":7834368323676979314},"usedName":{"valueName":{"identifier":"updateOrSnocWith"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"const"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":4644205366462752616},"usedName":{"valueName":{"identifier":"singleton"}},"qualification":"A"},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"typeName":{"identifier":"Eq"}},"qualification":null},{"reference":{"otherSlice":2051332017860334620},"usedName":{"typeName":{"identifier":"Hashable"}},"qualification":null},{"reference":{"otherSlice":1013433531415570027},"usedName":{"typeName":{"identifier":"HashMap"}},"qualification":null}],"fragment":["insert ::\n         (Eq k, Hashable k) => k -> v -> HashMap k v -> HashMap k v","insert k0 v0 m0 = go h0 k0 v0 0 m0\n  where h0 = hash k0\n        go !h !k x !_ Empty = Leaf h (L k x)\n        go h k x s t@(Leaf hy l@(L ky y))\n          | hy == h =\n            if ky == k then if x `ptrEq` y then t else Leaf h (L k x) else\n              collision h l (L k x)\n          | otherwise = runST (two s h k x hy ky y)\n        go h k x s t@(BitmapIndexed b ary)\n          | b .&. m == 0 =\n            let !ary' = A.insert ary i $! Leaf h (L k x) in\n              bitmapIndexedOrFull (b .|. m) ary'\n          | otherwise =\n            let !st = A.index ary i\n                !st' = go h k x (s + bitsPerSubkey) st\n              in\n              if st' `ptrEq` st then t else BitmapIndexed b (A.update ary i st')\n          where m = mask h s\n                i = sparseIndex b m\n        go h k x s t@(Full ary)\n          = let !st = A.index ary i\n                !st' = go h k x (s + bitsPerSubkey) st\n              in if st' `ptrEq` st then t else Full (update16 ary i st')\n          where i = index h s\n        go h k x s t@(Collision hy v)\n          | h == hy = Collision h (updateOrSnocWith const k x v)\n          | otherwise =\n            go h k x s $ BitmapIndexed (mask hy s) (A.singleton t)"],"instances":[],"language":{"extensions":["BangPatterns","DeriveDataTypeable","MagicHash","ScopedTypeVariables","PatternGuards","RoleAnnotations","TypeFamilies","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll"],"isInstance":false}}