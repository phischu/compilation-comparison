{"sliceID":4160196552154051944,"uses":[{"reference":{"otherSlice":2824110155630133856},"usedName":{"typeName":{"identifier":"MonadError"}},"qualification":null},{"reference":{"otherSlice":7158232503314572113},"usedName":{"typeName":{"identifier":"MaybeT"}},"qualification":null},{"reference":{"otherSlice":2824110155630133856},"usedName":{"valueName":{"identifier":"throwError"}},"qualification":null},{"reference":{"otherSlice":1800817309688667062},"usedName":{"valueName":{"identifier":"lift"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null},{"reference":{"otherSlice":2824110155630133856},"usedName":{"valueName":{"identifier":"catchError"}},"qualification":null},{"reference":{"otherSlice":7902435296095949799},"usedName":{"valueName":{"identifier":"liftCatch"}},"qualification":"Maybe"}],"fragment":["instance MonadError e m => MonadError e (MaybeT m) where\n        throwError = lift . throwError\n        catchError = Maybe.liftCatch catchError"],"instances":[],"language":{"extensions":["MultiParamTypeClasses","FunctionalDependencies","FlexibleInstances","UndecidableInstances","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":true}}