{"sliceID":4647894532582226665,"uses":[{"reference":{"otherSlice":6927386841403917495},"usedName":{"typeName":{"identifier":"Async"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null},{"reference":{"builtinModule":"Data.Either"},"usedName":{"typeName":{"identifier":"Either"}},"qualification":null},{"reference":{"otherSlice":3788200034527650649},"usedName":{"valueName":{"identifier":"waitEither"}},"qualification":null},{"reference":{"builtinModule":"Control.Exception.Base"},"usedName":{"valueName":{"identifier":"finally"}},"qualification":null},{"reference":{"otherSlice":4505560726611857566},"usedName":{"valueName":{"identifier":"cancel"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":">>"}},"qualification":null}],"fragment":["waitEitherCancel :: Async a -> Async b -> IO (Either a b)","waitEitherCancel left right\n  = waitEither left right `finally` (cancel left >> cancel right)"],"instances":[],"language":{"extensions":["MagicHash","UnboxedTuples","RankNTypes","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}