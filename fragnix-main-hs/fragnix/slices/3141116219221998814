{"sliceID":3141116219221998814,"uses":[{"reference":{"otherSlice":3191844957948247487},"usedName":{"valueName":{"identifier":"bounds"}},"qualification":null},{"reference":{"otherSlice":3191844957948247487},"usedName":{"valueName":{"identifier":"numElements"}},"qualification":null},{"reference":{"otherSlice":3191844957948247487},"usedName":{"valueName":{"identifier":"unsafeArray"}},"qualification":null},{"reference":{"otherSlice":3191844957948247487},"usedName":{"valueName":{"identifier":"unsafeAt"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"-"}},"qualification":null},{"reference":{"otherSlice":3191844957948247487},"usedName":{"typeName":{"identifier":"IArray"}},"qualification":null},{"reference":{"builtinModule":"GHC.Arr"},"usedName":{"typeName":{"identifier":"Ix"}},"qualification":null}],"fragment":["amap ::\n       (IArray a e', IArray a e, Ix i) => (e' -> e) -> a i e' -> a i e","amap f arr\n  = case bounds arr of\n        (l, u) -> let n = numElements arr in\n                    unsafeArray (l, u) [(i, f (unsafeAt arr i)) | i <- [0 .. n - 1]]"],"instances":[],"language":{"extensions":["BangPatterns","RankNTypes","MagicHash","UnboxedTuples","MultiParamTypeClasses","FlexibleInstances","FlexibleContexts","DeriveDataTypeable","UnliftedFFITypes","RoleAnnotations","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}