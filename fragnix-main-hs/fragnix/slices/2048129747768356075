{"sliceID":2048129747768356075,"uses":[{"reference":{"otherSlice":5080856506030649257},"usedName":{"valueName":{"identifier":"unfoldrM"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Monad"}},"qualification":null},{"reference":{"builtinModule":"Data.Maybe"},"usedName":{"typeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":9209112058599157037},"usedName":{"typeName":{"identifier":"Stream"}},"qualification":null}],"fragment":["unfoldr :: Monad m => (s -> Maybe (a, s)) -> s -> Stream m a","unfoldr f = unfoldrM (return . f)"],"instances":[],"language":{"extensions":["DeriveDataTypeable","ExistentialQuantification","Rank2Types","BangPatterns","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}