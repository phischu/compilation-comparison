{"sliceID":6380346323920005064,"uses":[{"reference":{"otherSlice":6366556555504853542},"usedName":{"typeName":{"identifier":"Family"}},"qualification":null},{"reference":{"builtinModule":"GHC.Ptr"},"usedName":{"typeName":{"identifier":"Ptr"}},"qualification":null},{"reference":{"otherSlice":3812070640366845611},"usedName":{"typeName":{"identifier":"SockAddr"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null},{"reference":{"otherSlice":3571188117088414292},"usedName":{"valueName":{"identifier":"sizeOfSockAddrByFamily"}},"qualification":null},{"reference":{"builtinModule":"Foreign.Marshal.Alloc"},"usedName":{"valueName":{"identifier":"allocaBytes"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null}],"fragment":["withNewSockAddr :: Family -> (Ptr SockAddr -> Int -> IO a) -> IO a","withNewSockAddr family f\n  = do let sz = sizeOfSockAddrByFamily family\n       allocaBytes sz $ \\ ptr -> f ptr sz"],"instances":[],"language":{"extensions":["DeriveDataTypeable","ForeignFunctionInterface","TypeSynonymInstances","FlexibleInstances","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}