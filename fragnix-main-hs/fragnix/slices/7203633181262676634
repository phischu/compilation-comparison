{"sliceID":7203633181262676634,"uses":[{"reference":{"otherSlice":4225927731506146159},"usedName":{"valueName":{"identifier":"fromBuildStepCont"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":2921932848836490295},"usedName":{"constructorName":{"identifier":"BufRange"},"constructorTypeName":{"identifier":"BufRange"}},"qualification":null},{"reference":{"builtinModule":"GHC.Ptr"},"usedName":{"valueName":{"identifier":"plusPtr"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"<="}},"qualification":null},{"reference":{"otherSlice":8627977680109043678},"usedName":{"valueName":{"identifier":"runPoke"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"otherSlice":2719835477628140216},"usedName":{"valueName":{"identifier":"bufferFull"}},"qualification":null},{"reference":{"otherSlice":7634829019090806275},"usedName":{"constructorName":{"identifier":"Write"},"constructorTypeName":{"identifier":"Write"}},"qualification":null},{"reference":{"otherSlice":7634829019090806275},"usedName":{"typeName":{"identifier":"Write"}},"qualification":null},{"reference":{"otherSlice":6766449275992946084},"usedName":{"typeName":{"identifier":"Builder"}},"qualification":null}],"fragment":["fromWriteList :: (a -> Write) -> [a] -> Builder","fromWriteList write = makeBuilder\n  where makeBuilder xs0 = fromBuildStepCont $ step xs0\n          where step xs1 k !(BufRange op0 ope0) = go xs1 op0\n                  where go [] !op\n                          = do let !br' = BufRange op ope0\n                               k br'\n                        go xs@(x' : xs') !op\n                          | op `plusPtr` maxSize <= ope0 =\n                            do !op' <- runPoke wio op\n                               go xs' op'\n                          | otherwise = return $ bufferFull maxSize op (step xs k)\n                          where Write maxSize wio = write x'"],"instances":[],"language":{"extensions":["BangPatterns","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}