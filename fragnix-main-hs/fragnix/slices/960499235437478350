{"sliceID":960499235437478350,"uses":[{"reference":{"otherSlice":3934872489478287384},"usedName":{"constructorName":{"identifier":"MkSocket"},"constructorTypeName":{"identifier":"Socket"}},"qualification":null},{"reference":{"builtinModule":"Control.Concurrent.MVar"},"usedName":{"valueName":{"identifier":"modifyMVar_"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"/="}},"qualification":null},{"reference":{"otherSlice":1501835090509313249},"usedName":{"constructorName":{"identifier":"NotConnected"},"constructorTypeName":{"identifier":"SocketStatus"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"&&"}},"qualification":null},{"reference":{"otherSlice":1501835090509313249},"usedName":{"constructorName":{"identifier":"Bound"},"constructorTypeName":{"identifier":"SocketStatus"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO.Exception"},"usedName":{"valueName":{"identifier":"ioError"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO.Exception"},"usedName":{"valueName":{"identifier":"userError"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"++"}},"qualification":null},{"reference":{"builtinModule":"GHC.Show"},"usedName":{"valueName":{"identifier":"show"}},"qualification":null},{"reference":{"otherSlice":1888368554605747765},"usedName":{"valueName":{"identifier":"withSockAddr"}},"qualification":null},{"reference":{"otherSlice":4582307802206818549},"usedName":{"valueName":{"identifier":"c_connect"}},"qualification":null},{"reference":{"builtinModule":"GHC.Real"},"usedName":{"valueName":{"identifier":"fromIntegral"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"builtinModule":"Foreign.C.Error"},"usedName":{"valueName":{"identifier":"getErrno"}},"qualification":null},{"reference":{"builtinModule":"Foreign.C.Error"},"usedName":{"valueName":{"identifier":"eINTR"}},"qualification":null},{"reference":{"builtinModule":"Foreign.C.Error"},"usedName":{"valueName":{"identifier":"eINPROGRESS"}},"qualification":null},{"reference":{"otherSlice":1482843223855322719},"usedName":{"valueName":{"identifier":"throwSocketError"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"GHC.Conc.IO"},"usedName":{"valueName":{"identifier":"threadWaitWrite"}},"qualification":null},{"reference":{"otherSlice":3348739133931540599},"usedName":{"valueName":{"identifier":"getSocketOption"}},"qualification":null},{"reference":{"otherSlice":1193574024344381829},"usedName":{"constructorName":{"identifier":"SoError"},"constructorTypeName":{"identifier":"SocketOption"}},"qualification":null},{"reference":{"otherSlice":7868445115801688332},"usedName":{"valueName":{"identifier":"throwSocketErrorCode"}},"qualification":null},{"reference":{"otherSlice":1501835090509313249},"usedName":{"constructorName":{"identifier":"Connected"},"constructorTypeName":{"identifier":"SocketStatus"}},"qualification":null},{"reference":{"otherSlice":3934872489478287384},"usedName":{"typeName":{"identifier":"Socket"}},"qualification":null},{"reference":{"otherSlice":5051683172608853772},"usedName":{"typeName":{"identifier":"SockAddr"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null}],"fragment":["connect :: Socket -> SockAddr -> IO ()","connect sock@(MkSocket s _family _stype _protocol socketStatus)\n  addr\n  = do modifyMVar_ socketStatus $\n         \\ currentStatus ->\n           do if currentStatus /= NotConnected && currentStatus /= Bound then\n                ioError\n                  (userError\n                     (\"connect: can't peform connect on socket in status \" ++\n                        show currentStatus))\n                else\n                do withSockAddr addr $\n                     \\ p_addr sz ->\n                       do let connectLoop\n                                = do r <- c_connect s p_addr (fromIntegral sz)\n                                     if r == (-1) then\n                                       do err <- getErrno\n                                          case () of\n                                              _ | err == eINTR -> connectLoop\n                                              _ | err == eINPROGRESS -> connectBlocked\n                                              _otherwise -> throwSocketError \"connect\"\n                                       else return ()\n                              connectBlocked\n                                = do threadWaitWrite (fromIntegral s)\n                                     err <- getSocketOption sock SoError\n                                     if (err == 0) then return () else\n                                       throwSocketErrorCode \"connect\" (fromIntegral err)\n                          connectLoop\n                          return Connected"],"instances":[],"language":{"extensions":["DeriveDataTypeable","ForeignFunctionInterface","TypeSynonymInstances","ScopedTypeVariables","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}