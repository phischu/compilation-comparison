{"sliceID":3157536234954847594,"uses":[{"reference":{"otherSlice":2921449568316915535},"usedName":{"typeName":{"identifier":"Parser"}},"qualification":null},{"reference":{"otherSlice":8838403415977070196},"usedName":{"typeName":{"identifier":"Value"}},"qualification":null},{"reference":{"otherSlice":9102435058156373170},"usedName":{"typeName":{"identifier":"IResult"}},"qualification":null},{"reference":{"otherSlice":4010822550476529195},"usedName":{"typeName":{"identifier":"ByteString"}},"qualification":"B"},{"reference":{"builtinModule":"Data.Either"},"usedName":{"typeName":{"identifier":"Either"}},"qualification":null},{"reference":{"otherSlice":2431639079978755785},"usedName":{"typeName":{"identifier":"JSONPath"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"String"}},"qualification":null},{"reference":{"builtinModule":"Data.Either"},"usedName":{"valueName":{"identifier":"either"}},"qualification":null},{"reference":{"otherSlice":9102435058156373170},"usedName":{"constructorName":{"identifier":"IError"},"constructorTypeName":{"identifier":"IResult"}},"qualification":null},{"reference":{"otherSlice":7438056866939328753},"usedName":{"valueName":{"identifier":"parseOnly"}},"qualification":"A"},{"reference":{"otherSlice":9102435058156373170},"usedName":{"constructorName":{"identifier":"ISuccess"},"constructorTypeName":{"identifier":"IResult"}},"qualification":null},{"reference":{"builtinModule":"Data.Either"},"usedName":{"constructorName":{"identifier":"Right"},"constructorTypeName":{"identifier":"Either"}},"qualification":null},{"reference":{"builtinModule":"Data.Either"},"usedName":{"constructorName":{"identifier":"Left"},"constructorTypeName":{"identifier":"Either"}},"qualification":null}],"fragment":["eitherDecodeStrictWith ::\n                       Parser Value ->\n                         (Value -> IResult a) -> B.ByteString -> Either (JSONPath, String) a","eitherDecodeStrictWith p to s\n  = case either (IError []) to (A.parseOnly p s) of\n        ISuccess a -> Right a\n        IError path msg -> Left (path, msg)"],"instances":[],"language":{"extensions":["BangPatterns","OverloadedStrings","MagicHash","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}