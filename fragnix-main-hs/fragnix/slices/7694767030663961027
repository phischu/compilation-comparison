{"sliceID":7694767030663961027,"uses":[{"reference":{"otherSlice":5462232557626609601},"usedName":{"valueName":{"identifier":"matchOnceText"}},"qualification":null},{"reference":{"builtinModule":"Data.Maybe"},"usedName":{"constructorName":{"identifier":"Nothing"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":8374994100290386},"usedName":{"valueName":{"identifier":"regexFailed"}},"qualification":null},{"reference":{"builtinModule":"Data.Maybe"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"otherSlice":5462232557626609601},"usedName":{"typeName":{"identifier":"RegexLike"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Monad"}},"qualification":null},{"reference":{"otherSlice":7990091112320757662},"usedName":{"typeName":{"identifier":"MatchText"}},"qualification":null}],"fragment":["actOn ::\n        (RegexLike r s, Monad m) =>\n        ((s, MatchText s, s) -> t) -> r -> s -> m t","actOn f r s\n  = case matchOnceText r s of\n        Nothing -> regexFailed\n        Just preMApost -> return (f preMApost)"],"instances":[],"language":{"extensions":["MultiParamTypeClasses","FunctionalDependencies","TypeSynonymInstances","FlexibleInstances","FlexibleContexts","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}