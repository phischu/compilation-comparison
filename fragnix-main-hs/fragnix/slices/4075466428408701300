{"sliceID":4075466428408701300,"uses":[{"reference":{"builtinModule":"GHC.Real"},"usedName":{"typeName":{"identifier":"Fractional"}},"qualification":null},{"reference":{"otherSlice":3500322218702681625},"usedName":{"typeName":{"identifier":"Number"}},"qualification":null},{"reference":{"builtinModule":"GHC.Real"},"usedName":{"valueName":{"identifier":"fromRational"}},"qualification":null},{"reference":{"otherSlice":3500322218702681625},"usedName":{"constructorName":{"identifier":"D"},"constructorTypeName":{"identifier":"Number"}},"qualification":null},{"reference":{"builtinModule":"Prelude"},"usedName":{"valueName":{"operator":"$!"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null},{"reference":{"builtinModule":"GHC.Real"},"usedName":{"valueName":{"operator":"/"}},"qualification":null},{"reference":{"otherSlice":1811416144014097453},"usedName":{"valueName":{"identifier":"binop"}},"qualification":null},{"reference":{"builtinModule":"Data.Function"},"usedName":{"valueName":{"identifier":"on"}},"qualification":null},{"reference":{"builtinModule":"GHC.Real"},"usedName":{"valueName":{"identifier":"fromIntegral"}},"qualification":null},{"reference":{"builtinModule":"GHC.Real"},"usedName":{"valueName":{"identifier":"recip"}},"qualification":null},{"reference":{"otherSlice":3500322218702681625},"usedName":{"constructorName":{"identifier":"I"},"constructorTypeName":{"identifier":"Number"}},"qualification":null}],"fragment":["instance Fractional Number where\n        fromRational = (D $!) . fromRational\n        \n        {-# INLINE fromRational #-}\n        (/) = binop (((D $!) .) . (/) `on` fromIntegral) (((D $!) .) . (/))\n        \n        {-# INLINE (/) #-}\n        recip (I a) = D $! recip (fromIntegral a)\n        recip (D a) = D $! recip a\n        \n        {-# INLINE recip #-}"],"instances":[],"language":{"extensions":["DeriveDataTypeable","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":true}}