{"sliceID":7672148721398107783,"uses":[{"reference":{"otherSlice":6648703537753746294},"usedName":{"constructorName":{"identifier":"PriorityQueue"},"constructorTypeName":{"identifier":"PriorityQueue"}},"qualification":null},{"reference":{"otherSlice":6648703537753746294},"usedName":{"valueName":{"identifier":"baseDeficit"}},"qualification":null},{"reference":{"otherSlice":6648703537753746294},"usedName":{"valueName":{"identifier":"queue"}},"qualification":null},{"reference":{"otherSlice":1543787085560373111},"usedName":{"valueName":{"identifier":"alter"}},"qualification":"P"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":2493646306119173299},"usedName":{"valueName":{"identifier":"minView"}},"qualification":"P"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Nothing"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Err"},"usedName":{"valueName":{"identifier":"error"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"otherSlice":269795606805388831},"usedName":{"valueName":{"identifier":"deficit"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"otherSlice":1147202051748983015},"usedName":{"typeName":{"identifier":"Key"}},"qualification":null},{"reference":{"otherSlice":6648703537753746294},"usedName":{"typeName":{"identifier":"PriorityQueue"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Maybe"}},"qualification":null}],"fragment":["delete :: Key -> PriorityQueue a -> (Maybe a, PriorityQueue a)","delete k q@PriorityQueue{..}\n  = case P.alter f k queue of\n        (mv@(Just _), queue') -> case P.minView queue of\n                                     Nothing -> error \"delete\"\n                                     Just (k', p', _, _) | k' == k ->\n                                                           (mv, PriorityQueue (deficit p') queue')\n                                                         | otherwise ->\n                                                           (mv, PriorityQueue baseDeficit queue')\n        (Nothing, _) -> (Nothing, q)\n  where f Nothing = (Nothing, Nothing)\n        f (Just (_, v)) = (Just v, Nothing)"],"instances":[],"language":{"extensions":["BangPatterns","RecordWildCards","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}