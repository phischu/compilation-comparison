{"sliceID":337789671610782896,"uses":[{"reference":{"otherSlice":4416762670829438500},"usedName":{"valueName":{"identifier":"discard"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null},{"reference":{"otherSlice":3610122759948170507},"usedName":{"valueName":{"identifier":"fold1M"}},"qualification":"Stream"},{"reference":{"otherSlice":2700673456966481432},"usedName":{"valueName":{"identifier":"stream"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Monad"}},"qualification":null},{"reference":{"otherSlice":8934491602005769172},"usedName":{"typeName":{"identifier":"Vector"}},"qualification":null}],"fragment":["fold1M_ :: (Monad m, Vector v a) => (a -> a -> m a) -> v a -> m ()","fold1M_ m = discard . Stream.fold1M m . stream"],"instances":[],"language":{"extensions":["DeriveDataTypeable","Rank2Types","MultiParamTypeClasses","FlexibleContexts","TypeFamilies","ScopedTypeVariables","BangPatterns","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}