{"sliceID":1844643238259959125,"uses":[{"reference":{"otherSlice":6108689765555821659},"usedName":{"valueName":{"identifier":"scanl1M'"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Monad"}},"qualification":null},{"reference":{"otherSlice":1254073128444822395},"usedName":{"typeName":{"identifier":"Stream"}},"qualification":null}],"fragment":["scanl1' :: Monad m => (a -> a -> a) -> Stream m a -> Stream m a","scanl1' f = scanl1M' (\\ x y -> return (f x y))"],"instances":[],"language":{"extensions":["ExistentialQuantification","MultiParamTypeClasses","FlexibleInstances","Rank2Types","BangPatterns","KindSignatures","GADTs","ScopedTypeVariables","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}