{"sliceID":4985177721144154280,"uses":[{"reference":{"builtinModule":"GHC.Exception"},"usedName":{"typeName":{"identifier":"SomeException"}},"qualification":null},{"reference":{"otherSlice":8587154504401928891},"usedName":{"typeName":{"identifier":"MonadCatch"}},"qualification":null},{"reference":{"builtinModule":"Data.Either"},"usedName":{"typeName":{"identifier":"Either"}},"qualification":null},{"reference":{"otherSlice":8587154504401928891},"usedName":{"valueName":{"identifier":"catch"}},"qualification":null},{"reference":{"builtinModule":"Data.Either"},"usedName":{"constructorName":{"identifier":"Left"},"constructorTypeName":{"identifier":"Either"}},"qualification":null},{"reference":{"builtinModule":"GHC.Exception"},"usedName":{"valueName":{"identifier":"fromException"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Nothing"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"Data.Either"},"usedName":{"constructorName":{"identifier":"Right"},"constructorTypeName":{"identifier":"Either"}},"qualification":null}],"fragment":["instance e ~ SomeException => MonadCatch (Either e) where\n        catch (Left e) f\n          = case fromException e of\n                Nothing -> Left e\n                Just e' -> f e'\n        catch x@(Right _) _ = x"],"instances":[],"language":{"extensions":["ExistentialQuantification","GeneralizedNewtypeDeriving","RankNTypes","FlexibleInstances","MultiParamTypeClasses","UndecidableInstances","TypeFamilies","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":true}}