{"sliceID":7168965227150803339,"uses":[{"reference":{"otherSlice":1546470151414195006},"usedName":{"constructorName":{"identifier":"MkSocket"},"constructorTypeName":{"identifier":"Socket"}},"qualification":null},{"reference":{"otherSlice":4674243622065387603},"usedName":{"valueName":{"identifier":"withSocketsDo"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"Control.Concurrent.MVar"},"usedName":{"valueName":{"identifier":"modifyMVar_"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"/="}},"qualification":null},{"reference":{"otherSlice":7451797085728876607},"usedName":{"constructorName":{"identifier":"NotConnected"},"constructorTypeName":{"identifier":"SocketStatus"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"&&"}},"qualification":null},{"reference":{"otherSlice":7451797085728876607},"usedName":{"constructorName":{"identifier":"Bound"},"constructorTypeName":{"identifier":"SocketStatus"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO.Exception"},"usedName":{"valueName":{"identifier":"ioError"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO.Exception"},"usedName":{"valueName":{"identifier":"userError"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"++"}},"qualification":null},{"reference":{"builtinModule":"GHC.Show"},"usedName":{"valueName":{"identifier":"show"}},"qualification":null},{"reference":{"otherSlice":8837161020737982135},"usedName":{"valueName":{"identifier":"withSockAddr"}},"qualification":null},{"reference":{"otherSlice":6315291917825301610},"usedName":{"valueName":{"identifier":"c_connect"}},"qualification":null},{"reference":{"builtinModule":"GHC.Real"},"usedName":{"valueName":{"identifier":"fromIntegral"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"builtinModule":"Foreign.C.Error"},"usedName":{"valueName":{"identifier":"getErrno"}},"qualification":null},{"reference":{"builtinModule":"Foreign.C.Error"},"usedName":{"valueName":{"identifier":"eINTR"}},"qualification":null},{"reference":{"builtinModule":"Foreign.C.Error"},"usedName":{"valueName":{"identifier":"eINPROGRESS"}},"qualification":null},{"reference":{"otherSlice":7930713671093111365},"usedName":{"valueName":{"identifier":"throwSocketError"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"GHC.Conc.IO"},"usedName":{"valueName":{"identifier":"threadWaitWrite"}},"qualification":null},{"reference":{"otherSlice":5525337662895700347},"usedName":{"valueName":{"identifier":"getSocketOption"}},"qualification":null},{"reference":{"otherSlice":5653121259726360349},"usedName":{"constructorName":{"identifier":"SoError"},"constructorTypeName":{"identifier":"SocketOption"}},"qualification":null},{"reference":{"otherSlice":5644307078726295751},"usedName":{"valueName":{"identifier":"throwSocketErrorCode"}},"qualification":null},{"reference":{"otherSlice":7451797085728876607},"usedName":{"constructorName":{"identifier":"Connected"},"constructorTypeName":{"identifier":"SocketStatus"}},"qualification":null},{"reference":{"otherSlice":1546470151414195006},"usedName":{"typeName":{"identifier":"Socket"}},"qualification":null},{"reference":{"otherSlice":3812070640366845611},"usedName":{"typeName":{"identifier":"SockAddr"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null}],"fragment":["connect :: Socket -> SockAddr -> IO ()","connect sock@(MkSocket s _family _stype _protocol socketStatus)\n  addr\n  = withSocketsDo $\n      do modifyMVar_ socketStatus $\n           \\ currentStatus ->\n             do if currentStatus /= NotConnected && currentStatus /= Bound then\n                  ioError $\n                    userError $\n                      errLoc ++\n                        \": can't connect to socket with status \" ++ show currentStatus\n                  else\n                  do withSockAddr addr $\n                       \\ p_addr sz ->\n                         do let connectLoop\n                                  = do r <- c_connect s p_addr (fromIntegral sz)\n                                       if r == (-1) then\n                                         do err <- getErrno\n                                            case () of\n                                                _ | err == eINTR -> connectLoop\n                                                _ | err == eINPROGRESS -> connectBlocked\n                                                _otherwise -> throwSocketError errLoc\n                                         else return ()\n                                connectBlocked\n                                  = do threadWaitWrite (fromIntegral s)\n                                       err <- getSocketOption sock SoError\n                                       if (err == 0) then return () else\n                                         throwSocketErrorCode errLoc (fromIntegral err)\n                            connectLoop\n                            return Connected\n  where errLoc = \"Network.Socket.connect: \" ++ show sock"],"instances":[],"language":{"extensions":["DeriveDataTypeable","ForeignFunctionInterface","TypeSynonymInstances","ScopedTypeVariables","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}