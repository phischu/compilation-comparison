{"sliceID":4546827604698691366,"uses":[{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Monoid"}},"qualification":null},{"reference":{"builtinModule":"Control.Monad.Zip"},"usedName":{"typeName":{"identifier":"MonadZip"}},"qualification":null},{"reference":{"otherSlice":2225101369868176100},"usedName":{"typeName":{"identifier":"WriterT"}},"qualification":null},{"reference":{"builtinModule":"Control.Monad.Zip"},"usedName":{"valueName":{"identifier":"mzipWith"}},"qualification":null},{"reference":{"otherSlice":2225101369868176100},"usedName":{"constructorName":{"identifier":"WriterT"},"constructorTypeName":{"identifier":"WriterT"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"mappend"}},"qualification":null}],"fragment":["instance (Monoid w, MonadZip m) => MonadZip (WriterT w m) where\n        mzipWith f (WriterT x) (WriterT y)\n          = WriterT $\n              mzipWith (\\ ~(a, w) ~(b, w') -> (f a b, w `mappend` w')) x y\n        \n        {-# INLINE mzipWith #-}"],"instances":[],"language":{"extensions":["AutoDeriveTypeable","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":true}}