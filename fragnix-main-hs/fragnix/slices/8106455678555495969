{"sliceID":8106455678555495969,"uses":[{"reference":{"otherSlice":3786418068262660356},"usedName":{"typeName":{"identifier":"MonadThrow"}},"qualification":null},{"reference":{"builtinModule":"Data.Monoid"},"usedName":{"typeName":{"identifier":"Monoid"}},"qualification":null},{"reference":{"otherSlice":1010722195463586032},"usedName":{"typeName":{"identifier":"RWST"}},"qualification":"StrictRWS"},{"reference":{"otherSlice":3786418068262660356},"usedName":{"valueName":{"identifier":"throwM"}},"qualification":null},{"reference":{"otherSlice":1800817309688667062},"usedName":{"valueName":{"identifier":"lift"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null}],"fragment":["instance (MonadThrow m, Monoid w) => MonadThrow\n         (StrictRWS.RWST r w s m) where\n        throwM e = lift $ throwM e"],"instances":[],"language":{"extensions":["ExistentialQuantification","GeneralizedNewtypeDeriving","RankNTypes","FlexibleInstances","MultiParamTypeClasses","UndecidableInstances","TypeFamilies","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":true}}