{"sliceID":6197787627895986354,"uses":[{"reference":{"otherSlice":6856618864151171204},"usedName":{"constructorName":{"identifier":"One"},"constructorTypeName":{"identifier":"Digit"}},"qualification":null},{"reference":{"otherSlice":8898262701515362974},"usedName":{"constructorName":{"identifier":"Place"},"constructorTypeName":{"identifier":"Place"}},"qualification":null},{"reference":{"otherSlice":6856618864151171204},"usedName":{"constructorName":{"identifier":"Two"},"constructorTypeName":{"identifier":"Digit"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"<"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"-"}},"qualification":null},{"reference":{"otherSlice":2658389187921074114},"usedName":{"valueName":{"identifier":"size"}},"qualification":null},{"reference":{"otherSlice":6856618864151171204},"usedName":{"constructorName":{"identifier":"Three"},"constructorTypeName":{"identifier":"Digit"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"otherSlice":6856618864151171204},"usedName":{"constructorName":{"identifier":"Four"},"constructorTypeName":{"identifier":"Digit"}},"qualification":null},{"reference":{"otherSlice":2658389187921074114},"usedName":{"typeName":{"identifier":"Sized"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null},{"reference":{"otherSlice":6856618864151171204},"usedName":{"typeName":{"identifier":"Digit"}},"qualification":null},{"reference":{"otherSlice":8898262701515362974},"usedName":{"typeName":{"identifier":"Place"}},"qualification":null}],"fragment":["lookupDigit :: Sized a => Int -> Digit a -> Place a","lookupDigit i (One a) = Place i a\nlookupDigit i (Two a b)\n  | i < sa = Place i a\n  | otherwise = Place (i - sa) b\n  where sa = size a\nlookupDigit i (Three a b c)\n  | i < sa = Place i a\n  | i < sab = Place (i - sa) b\n  | otherwise = Place (i - sab) c\n  where sa = size a\n        sab = sa + size b\nlookupDigit i (Four a b c d)\n  | i < sa = Place i a\n  | i < sab = Place (i - sa) b\n  | i < sabc = Place (i - sab) c\n  | otherwise = Place (i - sabc) d\n  where sa = size a\n        sab = sa + size b\n        sabc = sab + size c"],"instances":[],"language":{"extensions":["BangPatterns","DeriveDataTypeable","StandaloneDeriving","FlexibleInstances","ScopedTypeVariables","DeriveGeneric","TypeFamilies","PatternSynonyms","ViewPatterns","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}