{"sliceID":7259264462605168986,"uses":[{"reference":{"otherSlice":7281902249350019939},"usedName":{"typeName":{"identifier":"FromJSON"}},"qualification":null},{"reference":{"otherSlice":7281902249350019939},"usedName":{"valueName":{"identifier":"parseJSON"}},"qualification":null},{"reference":{"otherSlice":5330493319902345863},"usedName":{"valueName":{"identifier":"withArray"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":6708001900488435128},"usedName":{"valueName":{"identifier":"length"}},"qualification":"V"},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"builtinModule":"Data.Functor"},"usedName":{"valueName":{"operator":"<$>"}},"qualification":null},{"reference":{"otherSlice":2494651675846515900},"usedName":{"valueName":{"identifier":"unsafeIndex"}},"qualification":"V"},{"reference":{"builtinModule":"Control.Applicative"},"usedName":{"valueName":{"operator":"<*>"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"fail"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"++"}},"qualification":null},{"reference":{"builtinModule":"GHC.Show"},"usedName":{"valueName":{"identifier":"show"}},"qualification":null}],"fragment":["instance (FromJSON a, FromJSON b) => FromJSON (a, b) where\n        parseJSON\n          = withArray \"(a,b)\" $\n              \\ ab ->\n                let n = V.length ab in\n                  if n == 2 then\n                    (,) <$> parseJSON (V.unsafeIndex ab 0) <*>\n                      parseJSON (V.unsafeIndex ab 1)\n                    else\n                    fail $ \"cannot unpack array of length \" ++ show n ++ \" into a pair\"\n        \n        {-# INLINE parseJSON #-}"],"instances":[],"language":{"extensions":["DeriveDataTypeable","FlexibleContexts","FlexibleInstances","GeneralizedNewtypeDeriving","IncoherentInstances","OverlappingInstances","OverloadedStrings","UndecidableInstances","ViewPatterns","DefaultSignatures","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":true}}