{"sliceID":109953164703501094,"uses":[{"reference":{"builtinModule":"GHC.List"},"usedName":{"valueName":{"identifier":"break"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"builtinModule":"GHC.List"},"usedName":{"valueName":{"identifier":"dropWhile"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"GHC.List"},"usedName":{"valueName":{"identifier":"drop"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"String"}},"qualification":null}],"fragment":["splitCommas :: String -> [String]","splitCommas [] = []\nsplitCommas x\n  = let (y, z) = break (== ',') x in\n      y : splitCommas (dropWhile (== ' ') $ drop 1 z)"],"instances":[],"language":{"extensions":["Rank2Types","ScopedTypeVariables","OverloadedStrings","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}