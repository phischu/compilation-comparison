{"sliceID":5165856219548030866,"uses":[{"reference":{"builtinModule":"GHC.IO"},"usedName":{"valueName":{"identifier":"throwIO"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":8547266307614062940},"usedName":{"constructorName":{"identifier":"NotEnoughLines"},"constructorTypeName":{"identifier":"InvalidRequest"}},"qualification":null},{"reference":{"otherSlice":1365426199307062554},"usedName":{"valueName":{"identifier":"parseRequestLine"}},"qualification":null},{"reference":{"otherSlice":1528208678980426459},"usedName":{"valueName":{"identifier":"extractPath"}},"qualification":"H"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"map"}},"qualification":null},{"reference":{"otherSlice":7617450091792405198},"usedName":{"valueName":{"identifier":"parseHeader"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"otherSlice":8642306666063513779},"usedName":{"typeName":{"identifier":"ByteString"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null},{"reference":{"otherSlice":3271949581132027504},"usedName":{"typeName":{"identifier":"Method"}},"qualification":"H"},{"reference":{"otherSlice":9081086120732775883},"usedName":{"typeName":{"identifier":"HttpVersion"}},"qualification":"H"},{"reference":{"otherSlice":5638978814917881164},"usedName":{"typeName":{"identifier":"RequestHeaders"}},"qualification":"H"}],"fragment":["parseHeaderLines ::\n                 [ByteString] ->\n                   IO\n                     (H.Method, ByteString, ByteString, ByteString, H.HttpVersion,\n                      H.RequestHeaders)","parseHeaderLines [] = throwIO $ NotEnoughLines []\nparseHeaderLines (firstLine : otherLines)\n  = do (method, path', query, httpversion) <- parseRequestLine\n                                                firstLine\n       let path = H.extractPath path'\n           hdr = map parseHeader otherLines\n       return (method, path', path, query, httpversion, hdr)"],"instances":[],"language":{"extensions":["OverloadedStrings","BangPatterns","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}