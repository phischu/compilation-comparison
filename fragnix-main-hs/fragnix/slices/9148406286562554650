{"sliceID":9148406286562554650,"uses":[{"reference":{"otherSlice":4010822550476529195},"usedName":{"typeName":{"identifier":"ByteString"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null},{"reference":{"otherSlice":7202692338078551997},"usedName":{"valueName":{"identifier":"null"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"otherSlice":7235567377809295464},"usedName":{"valueName":{"identifier":"length"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":">"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"-"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"||"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"otherSlice":3972053472185432094},"usedName":{"valueName":{"identifier":"breakSubstring"}},"qualification":null},{"reference":{"otherSlice":188135503957969977},"usedName":{"valueName":{"identifier":"unsafeDrop"}},"qualification":null}],"fragment":["findSubstrings :: ByteString -> ByteString -> [Int]","findSubstrings pat src\n  | null pat = [0 .. ls]\n  | otherwise = search 0\n  where lp = length pat\n        ls = length src\n        search !n\n          | (n > ls - lp) || null b = []\n          | otherwise = let k = n + length a in k : search (k + lp)\n          where (a, b) = breakSubstring pat (unsafeDrop n src)"],"instances":[],"language":{"extensions":["MagicHash","UnboxedTuples","NamedFieldPuns","BangPatterns","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}