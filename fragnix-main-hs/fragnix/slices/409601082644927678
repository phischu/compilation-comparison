{"sliceID":409601082644927678,"uses":[{"reference":{"builtinModule":"GHC.Prim"},"usedName":{"valueName":{"identifier":"seq"}},"qualification":null},{"reference":{"otherSlice":7169308240080232539},"usedName":{"constructorName":{"identifier":"Bin"},"constructorTypeName":{"identifier":"IntSet"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"<"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":">="}},"qualification":null},{"reference":{"otherSlice":7169308240080232539},"usedName":{"constructorName":{"identifier":"Nil"},"constructorTypeName":{"identifier":"IntSet"}},"qualification":null},{"reference":{"otherSlice":4827782982542234419},"usedName":{"valueName":{"identifier":"nomatch"}},"qualification":null},{"reference":{"otherSlice":8355008480003683202},"usedName":{"valueName":{"identifier":"unsafeFindMin"}},"qualification":null},{"reference":{"otherSlice":1307774649002359079},"usedName":{"valueName":{"identifier":"zero"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"otherSlice":7169308240080232539},"usedName":{"constructorName":{"identifier":"Tip"},"constructorTypeName":{"identifier":"IntSet"}},"qualification":null},{"reference":{"otherSlice":7373941855936521997},"usedName":{"valueName":{"identifier":"prefixOf"}},"qualification":null},{"reference":{"builtinModule":"Data.Maybe"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"otherSlice":6042438110475447782},"usedName":{"valueName":{"identifier":"lowestBitSet"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"&&"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"/="}},"qualification":null},{"reference":{"otherSlice":2867430951789216942},"usedName":{"valueName":{"identifier":"bitmapOf"}},"qualification":null},{"reference":{"builtinModule":"Data.Bits"},"usedName":{"valueName":{"operator":".&."}},"qualification":null},{"reference":{"otherSlice":937490584395345141},"usedName":{"typeName":{"identifier":"Key"}},"qualification":null},{"reference":{"otherSlice":7169308240080232539},"usedName":{"typeName":{"identifier":"IntSet"}},"qualification":null},{"reference":{"builtinModule":"Data.Maybe"},"usedName":{"typeName":{"identifier":"Maybe"}},"qualification":null}],"fragment":["lookupGE :: Key -> IntSet -> Maybe Key","lookupGE x t\n  = x `seq`\n      case t of\n          Bin _ m l r | m < 0 -> if x >= 0 then go Nil l else go l r\n          _ -> go Nil t\n  where go def (Bin p m l r)\n          | nomatch x p m =\n            if x < p then unsafeFindMin l else unsafeFindMin def\n          | zero x m = go r l\n          | otherwise = go def r\n        go def (Tip kx bm)\n          | prefixOf x < kx = Just $ kx + lowestBitSet bm\n          | prefixOf x == kx && maskGE /= 0 = Just $ kx + lowestBitSet maskGE\n          | otherwise = unsafeFindMin def\n          where maskGE = (-(bitmapOf x)) .&. bm\n        go def Nil = unsafeFindMin def"],"instances":[],"language":{"extensions":["MagicHash","BangPatterns","DeriveDataTypeable","StandaloneDeriving","TypeFamilies","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}