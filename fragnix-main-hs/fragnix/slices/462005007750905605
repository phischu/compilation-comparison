{"sliceID":462005007750905605,"uses":[{"reference":{"otherSlice":2017157197715432884},"usedName":{"valueName":{"identifier":"runSTArray"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":456988961920531281},"usedName":{"valueName":{"identifier":"newArray"}},"qualification":null},{"reference":{"builtinModule":"Data.Maybe"},"usedName":{"constructorName":{"identifier":"Nothing"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"Control.Monad"},"usedName":{"valueName":{"identifier":"mapM_"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"otherSlice":6578203383066225842},"usedName":{"valueName":{"identifier":"writeArray"}},"qualification":null},{"reference":{"builtinModule":"Data.Maybe"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":8905389599795140769},"usedName":{"typeName":{"identifier":"Header"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null},{"reference":{"otherSlice":4835840013569357733},"usedName":{"typeName":{"identifier":"HeaderName"}},"qualification":null},{"reference":{"otherSlice":8986303668099301941},"usedName":{"typeName":{"identifier":"IndexedHeader"}},"qualification":null}],"fragment":["traverseHeader ::\n               [Header] -> Int -> (HeaderName -> Int) -> IndexedHeader","traverseHeader hdr maxidx getIndex\n  = runSTArray $\n      do arr <- newArray (0, maxidx) Nothing\n         mapM_ (insert arr) hdr\n         return arr\n  where insert arr (key, val)\n          | idx == (-1) = return ()\n          | otherwise = writeArray arr idx (Just val)\n          where idx = getIndex key"],"instances":[],"language":{"extensions":["OverloadedStrings","FlexibleContexts","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}