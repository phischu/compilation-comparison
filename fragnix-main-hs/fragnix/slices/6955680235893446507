{"sliceID":6955680235893446507,"uses":[{"reference":{"builtinModule":"Control.Exception.Base"},"usedName":{"valueName":{"identifier":"bracket"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":4461192714385402799},"usedName":{"valueName":{"identifier":"newTimeCache"}},"qualification":null},{"reference":{"otherSlice":2467538606024526634},"usedName":{"valueName":{"identifier":"simpleTimeFormat"}},"qualification":null},{"reference":{"otherSlice":6517936429686700920},"usedName":{"valueName":{"identifier":"initLogger"}},"qualification":null},{"reference":{"otherSlice":1168132997310288640},"usedName":{"constructorName":{"identifier":"FromFallback"},"constructorTypeName":{"identifier":"IPAddrSource"}},"qualification":null},{"reference":{"otherSlice":243636928150449734},"usedName":{"constructorName":{"identifier":"LogStdout"},"constructorTypeName":{"identifier":"LogType"}},"qualification":null},{"reference":{"otherSlice":1330543919888618360},"usedName":{"valueName":{"identifier":"apacheLogger"}},"qualification":null},{"reference":{"otherSlice":1330543919888618360},"usedName":{"valueName":{"identifier":"logRemover"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"Data.Functor"},"usedName":{"valueName":{"identifier":"void"}},"qualification":null},{"reference":{"otherSlice":5640182399688641050},"usedName":{"typeName":{"identifier":"ApacheLogger"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null}],"fragment":["withStdoutLogger :: (ApacheLogger -> IO a) -> IO a","withStdoutLogger app\n  = bracket setup teardown $ \\ (aplogger, _) -> app aplogger\n  where setup\n          = do tgetter <- newTimeCache simpleTimeFormat\n               apf <- initLogger FromFallback (LogStdout 4096) tgetter\n               let aplogger = apacheLogger apf\n                   remover = logRemover apf\n               return (aplogger, remover)\n        teardown (_, remover) = void remover"],"instances":[],"language":{"extensions":["MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}