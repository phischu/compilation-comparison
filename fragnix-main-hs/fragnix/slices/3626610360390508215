{"sliceID":3626610360390508215,"uses":[{"reference":{"otherSlice":8413007277180029656},"usedName":{"constructorName":{"identifier":"Nil"},"constructorTypeName":{"identifier":"IntPSQ"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Nothing"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":8413007277180029656},"usedName":{"constructorName":{"identifier":"Tip"},"constructorTypeName":{"identifier":"IntPSQ"}},"qualification":null},{"reference":{"otherSlice":8413007277180029656},"usedName":{"constructorName":{"identifier":"Bin"},"constructorTypeName":{"identifier":"IntPSQ"}},"qualification":null},{"reference":{"otherSlice":6056057948688620316},"usedName":{"valueName":{"identifier":"merge"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"/="}},"qualification":null},{"reference":{"otherSlice":8571221585682856599},"usedName":{"valueName":{"identifier":"insert"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"<="}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"otherSlice":4504079687626536797},"usedName":{"valueName":{"identifier":"unsafeInsertNew"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"typeName":{"identifier":"Ord"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null},{"reference":{"otherSlice":8413007277180029656},"usedName":{"typeName":{"identifier":"IntPSQ"}},"qualification":null}],"fragment":["alterMin ::\n           Ord p =>\n           (Maybe (Int, p, v) -> (b, Maybe (Int, p, v))) ->\n             IntPSQ p v -> (b, IntPSQ p v)","alterMin f t\n  = case t of\n        Nil -> case f Nothing of\n                   (b, Nothing) -> (b, Nil)\n                   (b, Just (k', p', x')) -> (b, Tip k' p' x')\n        Tip k p x -> case f (Just (k, p, x)) of\n                         (b, Nothing) -> (b, Nil)\n                         (b, Just (k', p', x')) -> (b, Tip k' p' x')\n        Bin k p x m l r -> case f (Just (k, p, x)) of\n                               (b, Nothing) -> (b, merge m l r)\n                               (b, Just (k', p', x')) | k /= k' ->\n                                                        (b, insert k' p' x' (merge m l r))\n                                                      | p' <= p -> (b, Bin k p' x' m l r)\n                                                      | otherwise ->\n                                                        (b, unsafeInsertNew k p' x' (merge m l r))"],"instances":[],"language":{"extensions":["BangPatterns","DeriveFoldable","DeriveFunctor","DeriveTraversable","UnboxedTuples","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}