{"sliceID":447444343824386276,"uses":[{"reference":{"builtinModule":"GHC.Err"},"usedName":{"valueName":{"identifier":"undefined"}},"qualification":null},{"reference":{"builtinModule":"Foreign.Storable"},"usedName":{"typeName":{"identifier":"Storable"}},"qualification":null},{"reference":{"otherSlice":2385146024156182908},"usedName":{"typeName":{"identifier":"Parser"}},"qualification":null},{"reference":{"otherSlice":3432369085417884637},"usedName":{"valueName":{"identifier":"toForeignPtr"}},"qualification":"B"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"fmap"}},"qualification":null},{"reference":{"otherSlice":6676654716346214403},"usedName":{"valueName":{"identifier":"take"}},"qualification":null},{"reference":{"builtinModule":"Foreign.Storable"},"usedName":{"valueName":{"identifier":"sizeOf"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null},{"reference":{"otherSlice":4640371534066560564},"usedName":{"valueName":{"identifier":"inlinePerformIO"}},"qualification":"B"},{"reference":{"builtinModule":"Foreign.ForeignPtr"},"usedName":{"valueName":{"identifier":"withForeignPtr"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"Foreign.Storable"},"usedName":{"valueName":{"identifier":"peek"}},"qualification":null},{"reference":{"builtinModule":"GHC.Ptr"},"usedName":{"valueName":{"identifier":"castPtr"}},"qualification":null},{"reference":{"builtinModule":"GHC.Ptr"},"usedName":{"valueName":{"identifier":"plusPtr"}},"qualification":null}],"fragment":["storable :: Storable a => Parser a","storable = hack undefined\n  where hack :: Storable b => b -> Parser b\n        hack dummy\n          = do (fp, o, _) <- B.toForeignPtr `fmap` take (sizeOf dummy)\n               return . B.inlinePerformIO . withForeignPtr fp $\n                 \\ p -> peek (castPtr $ p `plusPtr` o)"],"instances":[],"language":{"extensions":["BangPatterns","GADTs","OverloadedStrings","RecordWildCards","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}