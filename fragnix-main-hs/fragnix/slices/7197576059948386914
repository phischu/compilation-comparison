{"sliceID":7197576059948386914,"uses":[{"reference":{"otherSlice":8184865101111560075},"usedName":{"constructorName":{"identifier":"Parser"},"constructorTypeName":{"identifier":"Parser"}},"qualification":"T"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":8558997129001179577},"usedName":{"valueName":{"identifier":"substring"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"-"}},"qualification":null},{"reference":{"otherSlice":8184865101111560075},"usedName":{"valueName":{"identifier":"runParser"}},"qualification":null},{"reference":{"otherSlice":1318512042216165404},"usedName":{"typeName":{"identifier":"Parser"}},"qualification":null},{"reference":{"otherSlice":6742866475076404776},"usedName":{"typeName":{"identifier":"Text"}},"qualification":null}],"fragment":["match :: Parser a -> Parser (Text, a)","match p\n  = T.Parser $\n      \\ t pos more lose succ ->\n        let succ' t' pos' more' a\n              = succ t' pos' more' (substring pos (pos' - pos) t', a)\n          in runParser p t pos more lose succ'"],"instances":[],"language":{"extensions":["BangPatterns","FlexibleInstances","GADTs","OverloadedStrings","Rank2Types","RecordWildCards","TypeFamilies","TypeSynonymInstances","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}