{"sliceID":3226953795796972732,"uses":[{"reference":{"otherSlice":6443513858346703826},"usedName":{"typeName":{"identifier":"Catch"}},"qualification":null},{"reference":{"otherSlice":956119367104656861},"usedName":{"typeName":{"identifier":"AccumT"}},"qualification":null},{"reference":{"otherSlice":956119367104656861},"usedName":{"constructorName":{"identifier":"AccumT"},"constructorTypeName":{"identifier":"AccumT"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":1719551204349862948},"usedName":{"valueName":{"identifier":"runAccumT"}},"qualification":null}],"fragment":["liftCatch :: Catch e m (a, w) -> Catch e (AccumT w m) a","liftCatch catchE m h\n  = AccumT $ \\ w -> runAccumT m w `catchE` \\ e -> runAccumT (h e) w"],"instances":[],"language":{"extensions":["AutoDeriveTypeable","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}