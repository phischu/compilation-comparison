{"sliceID":7105981654672313106,"uses":[{"reference":{"builtinModule":"GHC.IO.Handle.Types"},"usedName":{"typeName":{"identifier":"Handle__"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO.Buffer"},"usedName":{"typeName":{"identifier":"CharBuffer"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO.Handle.Types"},"usedName":{"constructorName":{"identifier":"Handle__"},"constructorTypeName":{"identifier":"Handle__"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO.Handle.Types"},"usedName":{"valueName":{"identifier":"haBufferMode"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO.Handle.Types"},"usedName":{"valueName":{"identifier":"haBuffers"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO.Handle.Types"},"usedName":{"valueName":{"identifier":"haByteBuffer"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO.Handle.Types"},"usedName":{"valueName":{"identifier":"haCharBuffer"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO.Handle.Types"},"usedName":{"valueName":{"identifier":"haCodec"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO.Handle.Types"},"usedName":{"valueName":{"identifier":"haDecoder"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO.Handle.Types"},"usedName":{"valueName":{"identifier":"haDevice"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO.Handle.Types"},"usedName":{"valueName":{"identifier":"haEncoder"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO.Handle.Types"},"usedName":{"valueName":{"identifier":"haInputNL"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO.Handle.Types"},"usedName":{"valueName":{"identifier":"haLastDecode"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO.Handle.Types"},"usedName":{"valueName":{"identifier":"haOtherSide"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO.Handle.Types"},"usedName":{"valueName":{"identifier":"haOutputNL"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO.Handle.Types"},"usedName":{"valueName":{"identifier":"haType"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO.Buffer"},"usedName":{"constructorName":{"identifier":"Buffer"},"constructorTypeName":{"identifier":"Buffer"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO.Buffer"},"usedName":{"valueName":{"identifier":"bufL"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO.Buffer"},"usedName":{"valueName":{"identifier":"bufR"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO.Buffer"},"usedName":{"valueName":{"identifier":"bufRaw"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO.Buffer"},"usedName":{"valueName":{"identifier":"bufSize"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO.Buffer"},"usedName":{"valueName":{"identifier":"bufState"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO.Buffer"},"usedName":{"valueName":{"identifier":"bufferElems"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO.Handle.Internals"},"usedName":{"valueName":{"identifier":"readTextDevice"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"builtinModule":"GHC.IO.Handle.Types"},"usedName":{"constructorName":{"identifier":"CRLF"},"constructorTypeName":{"identifier":"Newline"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO.Buffer"},"usedName":{"valueName":{"identifier":"readCharBuf"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO.Buffer"},"usedName":{"valueName":{"identifier":"writeCharBuf"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null}],"fragment":["getSomeCharacters :: Handle__ -> CharBuffer -> IO CharBuffer","getSomeCharacters handle_@Handle__{..} buf@Buffer{..}\n  = case bufferElems buf of\n        0 -> {-# SCC \"readTextDevice\" #-} readTextDevice handle_ buf\n        1 | haInputNL == CRLF ->\n            do (c, _) <- readCharBuf bufRaw bufL\n               if c == '\\r' then\n                 do _ <- writeCharBuf bufRaw 0 '\\r'\n                    let buf' = buf{bufL = 0, bufR = 1}\n                    readTextDevice handle_ buf'\n                 else do return buf\n        _otherwise -> {-# SCC \"otherwise\" #-} return buf"],"instances":[],"language":{"extensions":["BangPatterns","RecordWildCards","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}