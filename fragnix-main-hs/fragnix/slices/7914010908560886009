{"sliceID":7914010908560886009,"uses":[{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":">="}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"&&"}},"qualification":null},{"reference":{"otherSlice":2763276265893976414},"usedName":{"valueName":{"identifier":"mul64_"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"builtinModule":"GHC.Int"},"usedName":{"typeName":{"identifier":"Int64"}},"qualification":null}],"fragment":["mul64 :: Int64 -> Int64 -> Int64","mul64 a b\n  | a >= 0 && b >= 0 = mul64_ a b\n  | a >= 0 = -mul64_ a (-b)\n  | b >= 0 = -mul64_ (-a) b\n  | otherwise = mul64_ (-a) (-b)","infixl 7 `mul64`"],"instances":[],"language":{"extensions":["DeriveDataTypeable","UnboxedTuples","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}