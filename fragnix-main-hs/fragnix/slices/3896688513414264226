{"sliceID":3896688513414264226,"uses":[{"reference":{"otherSlice":5870957229726868888},"usedName":{"valueName":{"identifier":"foldl'"}},"qualification":"Stream"},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null},{"reference":{"otherSlice":2700673456966481432},"usedName":{"valueName":{"identifier":"stream"}},"qualification":null},{"reference":{"otherSlice":8934491602005769172},"usedName":{"typeName":{"identifier":"Vector"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"typeName":{"identifier":"Num"}},"qualification":null}],"fragment":["sum :: (Vector v a, Num a) => v a -> a","sum = Stream.foldl' (+) 0 . stream"],"instances":[],"language":{"extensions":["DeriveDataTypeable","Rank2Types","MultiParamTypeClasses","FlexibleContexts","TypeFamilies","ScopedTypeVariables","BangPatterns","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}