{"sliceID":9125347383692204165,"uses":[{"reference":{"otherSlice":1324664974482336540},"usedName":{"valueName":{"identifier":"update_stream"}},"qualification":null},{"reference":{"otherSlice":474531255003761427},"usedName":{"valueName":{"identifier":"zipWith"}},"qualification":"Stream"},{"reference":{"otherSlice":2700673456966481432},"usedName":{"valueName":{"identifier":"stream"}},"qualification":null},{"reference":{"otherSlice":8934491602005769172},"usedName":{"typeName":{"identifier":"Vector"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null}],"fragment":["update_ :: (Vector v a, Vector v Int) => v a -> v Int -> v a -> v a","update_ v is w\n  = update_stream v (Stream.zipWith (,) (stream is) (stream w))"],"instances":[],"language":{"extensions":["DeriveDataTypeable","Rank2Types","MultiParamTypeClasses","FlexibleContexts","TypeFamilies","ScopedTypeVariables","BangPatterns","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}