{"sliceID":6104739131787421583,"uses":[{"reference":{"builtinModule":"GHC.Prim"},"usedName":{"valueName":{"identifier":"seq"}},"qualification":null},{"reference":{"otherSlice":3215441896288524948},"usedName":{"constructorName":{"identifier":"Bin"},"constructorTypeName":{"identifier":"IntMap"}},"qualification":null},{"reference":{"otherSlice":2654114007802303743},"usedName":{"valueName":{"identifier":"nomatch"}},"qualification":null},{"reference":{"otherSlice":9197541295180993364},"usedName":{"valueName":{"identifier":"link"}},"qualification":null},{"reference":{"otherSlice":6838613344523031563},"usedName":{"valueName":{"identifier":"singleton"}},"qualification":null},{"reference":{"otherSlice":4724247418787711009},"usedName":{"valueName":{"identifier":"zero"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"otherSlice":3215441896288524948},"usedName":{"constructorName":{"identifier":"Tip"},"constructorTypeName":{"identifier":"IntMap"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"builtinModule":"Prelude"},"usedName":{"valueName":{"operator":"$!"}},"qualification":null},{"reference":{"otherSlice":3215441896288524948},"usedName":{"constructorName":{"identifier":"Nil"},"constructorTypeName":{"identifier":"IntMap"}},"qualification":null},{"reference":{"otherSlice":937490584395345141},"usedName":{"typeName":{"identifier":"Key"}},"qualification":null},{"reference":{"otherSlice":3215441896288524948},"usedName":{"typeName":{"identifier":"IntMap"}},"qualification":null}],"fragment":["insertWithKey ::\n              (Key -> a -> a -> a) -> Key -> a -> IntMap a -> IntMap a","insertWithKey f k x t\n  = k `seq`\n      case t of\n          Bin p m l r | nomatch k p m -> link k (singleton k x) p t\n                      | zero k m -> Bin p m (insertWithKey f k x l) r\n                      | otherwise -> Bin p m l (insertWithKey f k x r)\n          Tip ky y | k == ky -> Tip k $! f k x y\n                   | otherwise -> link k (singleton k x) ky t\n          Nil -> singleton k x"],"instances":[],"language":{"extensions":["MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}