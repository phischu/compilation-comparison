{"sliceID":5077515184140906964,"uses":[{"reference":{"otherSlice":675696118971413715},"usedName":{"valueName":{"identifier":"null"}},"qualification":null},{"reference":{"builtinModule":"Data.Maybe"},"usedName":{"constructorName":{"identifier":"Nothing"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"otherSlice":3837783939365562731},"usedName":{"valueName":{"identifier":"unsafeHead"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"True"},"constructorTypeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"otherSlice":2291042143385708565},"usedName":{"valueName":{"identifier":"unsafeTail"}},"qualification":"B"},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"False"},"constructorTypeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null},{"reference":{"otherSlice":8642306666063513779},"usedName":{"typeName":{"identifier":"ByteString"}},"qualification":null},{"reference":{"builtinModule":"Data.Maybe"},"usedName":{"typeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Prim"},"usedName":{"valueName":{"identifier":"seq"}},"qualification":null},{"reference":{"builtinModule":"GHC.Err"},"usedName":{"valueName":{"identifier":"undefined"}},"qualification":null},{"reference":{"otherSlice":4261797841410981906},"usedName":{"valueName":{"identifier":"unsafeHead"}},"qualification":"B"},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":">="}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"&&"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"<="}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"*"}},"qualification":null},{"reference":{"builtinModule":"GHC.Real"},"usedName":{"valueName":{"identifier":"fromIntegral"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"-"}},"qualification":null},{"reference":{"builtinModule":"Data.Maybe"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"identifier":"negate"}},"qualification":null}],"fragment":["readInt :: ByteString -> Maybe (Int, ByteString)","readInt as\n  | null as = Nothing\n  | otherwise =\n    case unsafeHead as of\n        '-' -> loop True 0 0 (B.unsafeTail as)\n        '+' -> loop False 0 0 (B.unsafeTail as)\n        _ -> loop False 0 0 as\n  where loop ::\n             Bool -> Int -> Int -> ByteString -> Maybe (Int, ByteString)\n        loop a b c d | a `seq` b `seq` c `seq` d `seq` False = undefined\n        loop neg i n ps\n          | null ps = end neg i n ps\n          | otherwise =\n            case B.unsafeHead ps of\n                w | w >= 48 && w <= 57 ->\n                    loop neg (i + 1) (n * 10 + (fromIntegral w - 48)) (B.unsafeTail ps)\n                  | otherwise -> end neg i n ps\n        end _ 0 _ _ = Nothing\n        end True _ n ps = Just (negate n, ps)\n        end _ _ n ps = Just (n, ps)"],"instances":[],"language":{"extensions":["MagicHash","UnboxedTuples","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}