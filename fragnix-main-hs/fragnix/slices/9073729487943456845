{"sliceID":9073729487943456845,"uses":[{"reference":{"otherSlice":6330763764213190359},"usedName":{"constructorName":{"identifier":"Rigid"},"constructorTypeName":{"identifier":"Rigid"}},"qualification":null},{"reference":{"otherSlice":3432119687286972000},"usedName":{"constructorName":{"identifier":"DeepTh"},"constructorTypeName":{"identifier":"Thin"}},"qualification":null},{"reference":{"otherSlice":2103754850612341338},"usedName":{"constructorName":{"identifier":"Deep"},"constructorTypeName":{"identifier":"FingerTree"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"*"}},"qualification":null},{"reference":{"otherSlice":3528317801391865059},"usedName":{"valueName":{"identifier":"digit12ToDigit"}},"qualification":null},{"reference":{"otherSlice":1348526264301144068},"usedName":{"valueName":{"identifier":"squashL"}},"qualification":null},{"reference":{"otherSlice":8367654937553799926},"usedName":{"valueName":{"identifier":"squashR"}},"qualification":null},{"reference":{"otherSlice":3432119687286972000},"usedName":{"constructorName":{"identifier":"EmptyTh"},"constructorTypeName":{"identifier":"Thin"}},"qualification":null},{"reference":{"otherSlice":8624209003781892825},"usedName":{"valueName":{"identifier":"deep"}},"qualification":null},{"reference":{"otherSlice":6856618864151171204},"usedName":{"constructorName":{"identifier":"One"},"constructorTypeName":{"identifier":"Digit"}},"qualification":null},{"reference":{"builtinModule":"Data.Functor.Identity"},"usedName":{"valueName":{"identifier":"runIdentity"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":1317558539536400938},"usedName":{"valueName":{"identifier":"applicativeTree"}},"qualification":null},{"reference":{"builtinModule":"Data.Functor.Identity"},"usedName":{"constructorName":{"identifier":"Identity"},"constructorTypeName":{"identifier":"Identity"}},"qualification":null},{"reference":{"otherSlice":4520913892942188981},"usedName":{"valueName":{"identifier":"node2"}},"qualification":null},{"reference":{"otherSlice":3432119687286972000},"usedName":{"constructorName":{"identifier":"SingleTh"},"constructorTypeName":{"identifier":"Thin"}},"qualification":null},{"reference":{"otherSlice":6856618864151171204},"usedName":{"constructorName":{"identifier":"Two"},"constructorTypeName":{"identifier":"Digit"}},"qualification":null},{"reference":{"otherSlice":6843874425638804520},"usedName":{"valueName":{"identifier":"node3"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null},{"reference":{"otherSlice":6330763764213190359},"usedName":{"typeName":{"identifier":"Rigid"}},"qualification":null},{"reference":{"otherSlice":2103754850612341338},"usedName":{"typeName":{"identifier":"FingerTree"}},"qualification":null},{"reference":{"otherSlice":1673753023314990609},"usedName":{"typeName":{"identifier":"Node"}},"qualification":null}],"fragment":["cycleNMiddle :: Int -> Rigid c -> FingerTree (Node c)","cycleNMiddle !n (Rigid s pr (DeepTh sm prm mm sfm) sf)\n  = Deep (sm + s * (n + 1)) (digit12ToDigit prm)\n      (cycleNMiddle n (Rigid s (squashL pr prm) mm (squashR sfm sf)))\n      (digit12ToDigit sfm)\ncycleNMiddle n (Rigid s pr EmptyTh sf)\n  = deep (One sf)\n      (runIdentity $ applicativeTree n s (Identity converted))\n      (One pr)\n  where converted = node2 pr sf\ncycleNMiddle n (Rigid s pr (SingleTh q) sf)\n  = deep (Two q sf)\n      (runIdentity $ applicativeTree n s (Identity converted))\n      (Two pr q)\n  where converted = node3 pr q sf"],"instances":[],"language":{"extensions":["BangPatterns","DeriveDataTypeable","StandaloneDeriving","FlexibleInstances","ScopedTypeVariables","DeriveGeneric","TypeFamilies","PatternSynonyms","ViewPatterns","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}