{"sliceID":4174281402067640031,"uses":[{"reference":{"otherSlice":2508142706766052700},"usedName":{"valueName":{"identifier":"discard"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null},{"reference":{"otherSlice":3050029751274405942},"usedName":{"valueName":{"identifier":"fold1M'"}},"qualification":"Bundle"},{"reference":{"otherSlice":5483074428067105677},"usedName":{"valueName":{"identifier":"stream"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Monad"}},"qualification":null},{"reference":{"otherSlice":8572689894313737623},"usedName":{"typeName":{"identifier":"Vector"}},"qualification":null}],"fragment":["fold1M'_ :: (Monad m, Vector v a) => (a -> a -> m a) -> v a -> m ()","fold1M'_ m = discard . Bundle.fold1M' m . stream"],"instances":[],"language":{"extensions":["Rank2Types","MultiParamTypeClasses","FlexibleContexts","TypeFamilies","ScopedTypeVariables","BangPatterns","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}