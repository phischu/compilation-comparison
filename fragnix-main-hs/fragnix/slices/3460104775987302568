{"sliceID":3460104775987302568,"uses":[{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"<="}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null},{"reference":{"builtinModule":"GHC.List"},"usedName":{"valueName":{"identifier":"reverse"}},"qualification":"L"},{"reference":{"otherSlice":2748894467369396023},"usedName":{"valueName":{"identifier":"toChunks"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":3206583878039194784},"usedName":{"valueName":{"identifier":"empty"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":">="}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"-"}},"qualification":null},{"reference":{"otherSlice":2463393331440758816},"usedName":{"valueName":{"identifier":"fromChunks"}},"qualification":null},{"reference":{"otherSlice":2988998096717060941},"usedName":{"valueName":{"identifier":"dropEnd"}},"qualification":"T"},{"reference":{"builtinModule":"GHC.Real"},"usedName":{"valueName":{"identifier":"fromIntegral"}},"qualification":null},{"reference":{"otherSlice":3696497047475397211},"usedName":{"valueName":{"identifier":"length"}},"qualification":"T"},{"reference":{"builtinModule":"GHC.Int"},"usedName":{"typeName":{"identifier":"Int64"}},"qualification":null},{"reference":{"otherSlice":3835980439088584228},"usedName":{"typeName":{"identifier":"Text"}},"qualification":null}],"fragment":["dropEnd :: Int64 -> Text -> Text","dropEnd n t0\n  | n <= 0 = t0\n  | otherwise = dropChunk n . L.reverse . toChunks $ t0\n  where dropChunk _ [] = empty\n        dropChunk m (t : ts)\n          | m >= l = dropChunk (m - l) ts\n          | otherwise =\n            fromChunks . L.reverse $ T.dropEnd (fromIntegral m) t : ts\n          where l = fromIntegral (T.length t)"],"instances":[],"language":{"extensions":["BangPatterns","MagicHash","TypeFamilies","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}