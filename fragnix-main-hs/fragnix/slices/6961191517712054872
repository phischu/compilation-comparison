{"sliceID":6961191517712054872,"uses":[{"reference":{"otherSlice":995397253627000848},"usedName":{"valueName":{"identifier":"zipWith5M"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Monad"}},"qualification":null},{"reference":{"otherSlice":9209112058599157037},"usedName":{"typeName":{"identifier":"Stream"}},"qualification":null}],"fragment":["zipWith5 ::\n           Monad m =>\n           (a -> b -> c -> d -> e -> f) ->\n             Stream m a ->\n               Stream m b -> Stream m c -> Stream m d -> Stream m e -> Stream m f","zipWith5 f = zipWith5M (\\ a b c d e -> return (f a b c d e))"],"instances":[],"language":{"extensions":["DeriveDataTypeable","ExistentialQuantification","Rank2Types","BangPatterns","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}