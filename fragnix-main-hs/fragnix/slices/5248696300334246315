{"sliceID":5248696300334246315,"uses":[{"reference":{"otherSlice":8571418189210019692},"usedName":{"valueName":{"identifier":"toJulianYearAndDay"}},"qualification":null},{"reference":{"otherSlice":5090175635020298350},"usedName":{"valueName":{"identifier":"dayOfYearToMonthAndDay"}},"qualification":null},{"reference":{"otherSlice":1437312324165757214},"usedName":{"valueName":{"identifier":"isJulianLeapYear"}},"qualification":null},{"reference":{"otherSlice":3513222745602344190},"usedName":{"typeName":{"identifier":"Day"}},"qualification":null},{"reference":{"builtinModule":"GHC.Integer"},"usedName":{"typeName":{"identifier":"Integer"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null}],"fragment":["toJulian :: Day -> (Integer, Int, Int)","toJulian date = (year, month, day)\n  where (year, yd) = toJulianYearAndDay date\n        (month, day) = dayOfYearToMonthAndDay (isJulianLeapYear year) yd"],"instances":[],"language":{"extensions":["Rank2Types","DeriveDataTypeable","StandaloneDeriving","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}