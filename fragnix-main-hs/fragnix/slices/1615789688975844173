{"sliceID":1615789688975844173,"uses":[{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Char"}},"qualification":null},{"reference":{"otherSlice":2186011155846212713},"usedName":{"typeName":{"identifier":"Stream"}},"qualification":null},{"reference":{"otherSlice":2186011155846212713},"usedName":{"constructorName":{"identifier":"Stream"},"constructorTypeName":{"identifier":"Stream"}},"qualification":null},{"reference":{"otherSlice":899429663293461015},"usedName":{"constructorName":{"identifier":"Skip"},"constructorTypeName":{"identifier":"Step"}},"qualification":null},{"reference":{"otherSlice":899429663293461015},"usedName":{"constructorName":{"identifier":"Yield"},"constructorTypeName":{"identifier":"Step"}},"qualification":null},{"reference":{"otherSlice":899429663293461015},"usedName":{"constructorName":{"identifier":"Done"},"constructorTypeName":{"identifier":"Step"}},"qualification":null},{"reference":{"otherSlice":801328474084262687},"usedName":{"valueName":{"identifier":"emptyError"}},"qualification":null}],"fragment":["foldl1 :: (Char -> Char -> Char) -> Stream Char -> Char","foldl1 f (Stream next s0 _len) = loop0_foldl1 s0\n  where loop0_foldl1 !s\n          = case next s of\n                Skip s' -> loop0_foldl1 s'\n                Yield x s' -> loop_foldl1 x s'\n                Done -> emptyError \"foldl1\"\n        loop_foldl1 z !s\n          = case next s of\n                Done -> z\n                Skip s' -> loop_foldl1 z s'\n                Yield x s' -> loop_foldl1 (f z x) s'"],"instances":[],"language":{"extensions":["BangPatterns","MagicHash","Rank2Types","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}