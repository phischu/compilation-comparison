{"sliceID":3248246370786306135,"uses":[{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null},{"reference":{"builtinModule":"Control.Exception.Base"},"usedName":{"valueName":{"identifier":"catch"}},"qualification":"Control.Exception"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"GHC.Exception"},"usedName":{"valueName":{"identifier":"throw"}},"qualification":null},{"reference":{"builtinModule":"GHC.Exception"},"usedName":{"typeName":{"identifier":"SomeException"}},"qualification":null}],"fragment":["catchSome :: IO a -> IO a","catchSome act\n  = Control.Exception.catch act $\n      \\ e -> return $ throw (e :: SomeException)"],"instances":[],"language":{"extensions":["MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}