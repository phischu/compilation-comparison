{"sliceID":2978270274247228783,"uses":[{"reference":{"otherSlice":13410505313944458},"usedName":{"constructorName":{"identifier":"Bin"},"constructorTypeName":{"identifier":"IntMap"}},"qualification":null},{"reference":{"otherSlice":2715173166319551379},"usedName":{"valueName":{"identifier":"nomatch"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Nothing"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":3388317860341888410},"usedName":{"valueName":{"identifier":"link"}},"qualification":null},{"reference":{"otherSlice":13410505313944458},"usedName":{"constructorName":{"identifier":"Tip"},"constructorTypeName":{"identifier":"IntMap"}},"qualification":null},{"reference":{"otherSlice":4717645055143425729},"usedName":{"valueName":{"identifier":"zero"}},"qualification":null},{"reference":{"otherSlice":9180391119564462737},"usedName":{"valueName":{"identifier":"binCheckLeft"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"otherSlice":8523020784116684802},"usedName":{"valueName":{"identifier":"binCheckRight"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"otherSlice":13410505313944458},"usedName":{"constructorName":{"identifier":"Nil"},"constructorTypeName":{"identifier":"IntMap"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":879198285250991989},"usedName":{"typeName":{"identifier":"Key"}},"qualification":null},{"reference":{"otherSlice":13410505313944458},"usedName":{"typeName":{"identifier":"IntMap"}},"qualification":null}],"fragment":["alter :: (Maybe a -> Maybe a) -> Key -> IntMap a -> IntMap a","alter f !k t@(Bin p m l r)\n  | nomatch k p m =\n    case f Nothing of\n        Nothing -> t\n        Just x -> link k (Tip k x) p t\n  | zero k m = binCheckLeft p m (alter f k l) r\n  | otherwise = binCheckRight p m l (alter f k r)\nalter f k t@(Tip ky y)\n  | k == ky =\n    case f (Just y) of\n        Just x -> Tip ky x\n        Nothing -> Nil\n  | otherwise =\n    case f Nothing of\n        Just x -> link k (Tip k x) ky t\n        Nothing -> Tip ky y\nalter f k Nil\n  = case f Nothing of\n        Just x -> Tip k x\n        Nothing -> Nil"],"instances":[],"language":{"extensions":["BangPatterns","MagicHash","DeriveDataTypeable","StandaloneDeriving","ScopedTypeVariables","TypeFamilies","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}