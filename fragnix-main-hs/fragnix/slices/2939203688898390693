{"sliceID":2939203688898390693,"uses":[{"reference":{"otherSlice":5700351957984311116},"usedName":{"constructorName":{"identifier":"Chunk"},"constructorTypeName":{"identifier":"Text"}},"qualification":null},{"reference":{"otherSlice":7142520751761560312},"usedName":{"valueName":{"identifier":"replicate"}},"qualification":"T"},{"reference":{"otherSlice":7968985296749735510},"usedName":{"valueName":{"identifier":"smallChunkSize"}},"qualification":null},{"reference":{"otherSlice":7436571465247511073},"usedName":{"valueName":{"identifier":"singleton"}},"qualification":"T"},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Char"}},"qualification":null},{"reference":{"otherSlice":5700351957984311116},"usedName":{"typeName":{"identifier":"Text"}},"qualification":null}],"fragment":["repeat :: Char -> Text","repeat c\n  = let t = Chunk (T.replicate smallChunkSize (T.singleton c)) t in t"],"instances":[],"language":{"extensions":["BangPatterns","MagicHash","TypeFamilies","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}