{"sliceID":1719992591707048686,"uses":[{"reference":{"builtinModule":"GHC.List"},"usedName":{"valueName":{"identifier":"lookup"}},"qualification":null},{"reference":{"builtinModule":"Data.Maybe"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":7449822292869344379},"usedName":{"valueName":{"identifier":"gzipCheckMime"}},"qualification":null},{"reference":{"otherSlice":7516153301787523715},"usedName":{"valueName":{"identifier":"fixHeaders"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":5340415407179471851},"usedName":{"valueName":{"identifier":"responseStream"}},"qualification":null},{"reference":{"otherSlice":3864479888619181519},"usedName":{"valueName":{"identifier":"newBlazeRecv"}},"qualification":"B"},{"reference":{"otherSlice":7386880620466625322},"usedName":{"valueName":{"identifier":"defaultStrategy"}},"qualification":"B"},{"reference":{"otherSlice":184671893887354157},"usedName":{"valueName":{"identifier":"initDeflate"}},"qualification":"Z"},{"reference":{"otherSlice":4078057851335063508},"usedName":{"constructorName":{"identifier":"WindowBits"},"constructorTypeName":{"identifier":"WindowBits"}},"qualification":"Z"},{"reference":{"builtinModule":"Data.Function"},"usedName":{"valueName":{"identifier":"fix"}},"qualification":null},{"reference":{"builtinModule":"Control.Monad"},"usedName":{"valueName":{"identifier":"unless"}},"qualification":null},{"reference":{"otherSlice":675696118971413715},"usedName":{"valueName":{"identifier":"null"}},"qualification":"S"},{"reference":{"otherSlice":3626847660757632280},"usedName":{"valueName":{"identifier":"feedDeflate"}},"qualification":"Z"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":">>="}},"qualification":null},{"reference":{"otherSlice":1251236928786591586},"usedName":{"valueName":{"identifier":"flush"}},"qualification":"Blaze"},{"reference":{"otherSlice":1295872978589787055},"usedName":{"valueName":{"identifier":"flushDeflate"}},"qualification":"Z"},{"reference":{"otherSlice":3778424219183185417},"usedName":{"constructorName":{"identifier":"PRDone"},"constructorTypeName":{"identifier":"PopperRes"}},"qualification":"Z"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"otherSlice":3778424219183185417},"usedName":{"constructorName":{"identifier":"PRNext"},"constructorTypeName":{"identifier":"PopperRes"}},"qualification":"Z"},{"reference":{"otherSlice":5870116409610916390},"usedName":{"valueName":{"identifier":"fromByteString"}},"qualification":null},{"reference":{"otherSlice":3778424219183185417},"usedName":{"constructorName":{"identifier":"PRError"},"constructorTypeName":{"identifier":"PopperRes"}},"qualification":"Z"},{"reference":{"builtinModule":"GHC.IO"},"usedName":{"valueName":{"identifier":"throwIO"}},"qualification":null},{"reference":{"otherSlice":7929488564272851439},"usedName":{"valueName":{"identifier":"finishDeflate"}},"qualification":"Z"},{"reference":{"otherSlice":498737198033065716},"usedName":{"valueName":{"identifier":"responseToStream"}},"qualification":null},{"reference":{"otherSlice":7449822292869344379},"usedName":{"typeName":{"identifier":"GzipSettings"}},"qualification":null},{"reference":{"otherSlice":4388261176215324957},"usedName":{"typeName":{"identifier":"Response"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null}],"fragment":["compressE :: GzipSettings -> Response -> (Response -> IO a) -> IO a","compressE set res sendResponse\n  = case lookup \"content-type\" hs of\n        Just m | gzipCheckMime set m ->\n                 let hs' = fixHeaders hs in\n                   wb $\n                     \\ body ->\n                       sendResponse $\n                         responseStream s hs' $\n                           \\ sendChunk flush ->\n                             do (blazeRecv, blazeFinish) <- B.newBlazeRecv B.defaultStrategy\n                                deflate <- Z.initDeflate 1 (Z.WindowBits 31)\n                                let sendBuilder builder\n                                      = do popper <- blazeRecv builder\n                                           fix $\n                                             \\ loop ->\n                                               do bs <- popper\n                                                  unless (S.null bs) $\n                                                    do sendBS bs\n                                                       loop\n                                    sendBS bs = Z.feedDeflate deflate bs >>= deflatePopper\n                                    flushBuilder\n                                      = do sendBuilder Blaze.flush\n                                           deflatePopper $ Z.flushDeflate deflate\n                                           flush\n                                    deflatePopper popper\n                                      = fix $\n                                          \\ loop ->\n                                            do res <- popper\n                                               case res of\n                                                   Z.PRDone -> return ()\n                                                   Z.PRNext bs' -> do sendChunk $ fromByteString bs'\n                                                                      loop\n                                                   Z.PRError e -> throwIO e\n                                body sendBuilder flushBuilder\n                                sendBuilder Blaze.flush\n                                deflatePopper $ Z.finishDeflate deflate\n        _ -> sendResponse res\n  where (s, hs, wb) = responseToStream res"],"instances":[],"language":{"extensions":["Rank2Types","ScopedTypeVariables","OverloadedStrings","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}