{"sliceID":1781729464755261329,"uses":[{"reference":{"otherSlice":9025559142516147699},"usedName":{"valueName":{"identifier":"requestBody"}},"qualification":null},{"reference":{"otherSlice":7202692338078551997},"usedName":{"valueName":{"identifier":"null"}},"qualification":"S8"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"id"}},"qualification":null},{"reference":{"otherSlice":8674753700518513804},"usedName":{"valueName":{"identifier":"newIORef"}},"qualification":null},{"reference":{"otherSlice":3181616987806966080},"usedName":{"valueName":{"identifier":"atomicModifyIORef"}},"qualification":null},{"reference":{"otherSlice":7459617743278403755},"usedName":{"valueName":{"identifier":"empty"}},"qualification":"S8"},{"reference":{"otherSlice":9025559142516147699},"usedName":{"typeName":{"identifier":"Request"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null},{"reference":{"otherSlice":4010822550476529195},"usedName":{"typeName":{"identifier":"ByteString"}},"qualification":"S8"}],"fragment":["getRequestBody :: Request -> IO (Request, [S8.ByteString])","getRequestBody req\n  = do let loop front\n             = do bs <- requestBody req\n                  if S8.null bs then return $ front [] else loop $ front . (bs :)\n       body <- loop id\n       ichunks <- newIORef body\n       let rbody\n             = atomicModifyIORef ichunks $\n                 \\ chunks ->\n                   case chunks of\n                       [] -> ([], S8.empty)\n                       x : y -> (y, x)\n       let req' = req{requestBody = rbody}\n       return (req', body)"],"instances":[],"language":{"extensions":["OverloadedStrings","RecordWildCards","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}