{"sliceID":456829821694774674,"uses":[{"reference":{"otherSlice":284481157781237912},"usedName":{"typeName":{"identifier":"TypeSubst"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":4736479591626875393},"usedName":{"valueName":{"identifier":"findWithDefault"}},"qualification":"M"}],"fragment":["substType :: TypeSubst -> Type -> Type","substType subs (ForallT v c t) = ForallT v c $ substType subs t\nsubstType subs t@(VarT n) = M.findWithDefault t n subs\nsubstType subs (AppT t1 t2)\n  = AppT (substType subs t1) (substType subs t2)\nsubstType subs (SigT t k)\n  = SigT (substType subs t) (substType subs k)\nsubstType _ t = t"],"instances":[],"language":{"extensions":["BangPatterns","FlexibleInstances","NamedFieldPuns","NoImplicitPrelude","UndecidableInstances","TemplateHaskellQuotes","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards","TemplateHaskell"],"isInstance":false}}