{"sliceID":8897574676242718366,"uses":[{"reference":{"otherSlice":4505010152272368627},"usedName":{"constructorName":{"identifier":"One"},"constructorTypeName":{"identifier":"Some"}},"qualification":null},{"reference":{"otherSlice":500033095907108573},"usedName":{"constructorName":{"identifier":"FdEntry"},"constructorTypeName":{"identifier":"FdEntry"}},"qualification":null},{"reference":{"otherSlice":7157059904219679814},"usedName":{"valueName":{"identifier":"status"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":">>="}},"qualification":null},{"reference":{"otherSlice":1729583433124255084},"usedName":{"constructorName":{"identifier":"Active"},"constructorTypeName":{"identifier":"Status"}},"qualification":null},{"reference":{"otherSlice":5880580779830694176},"usedName":{"valueName":{"identifier":"inactive"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":">>"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"otherSlice":1729583433124255084},"usedName":{"constructorName":{"identifier":"Inactive"},"constructorTypeName":{"identifier":"Status"}},"qualification":null},{"reference":{"otherSlice":2786243375536321209},"usedName":{"valueName":{"identifier":"closeFd"}},"qualification":null},{"reference":{"otherSlice":4505010152272368627},"usedName":{"constructorName":{"identifier":"Tom"},"constructorTypeName":{"identifier":"Some"}},"qualification":null},{"reference":{"builtinModule":"GHC.Err"},"usedName":{"valueName":{"identifier":"error"}},"qualification":null},{"reference":{"otherSlice":4505010152272368627},"usedName":{"typeName":{"identifier":"Some"}},"qualification":null},{"reference":{"otherSlice":500033095907108573},"usedName":{"typeName":{"identifier":"FdEntry"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null}],"fragment":["prune :: t -> Some FdEntry -> IO [(t, Some FdEntry)]","prune k v@(One (FdEntry _ fd mst)) = status mst >>= prune'\n  where prune' Active = inactive mst >> return [(k, v)]\n        prune' Inactive = closeFd fd >> return []\nprune k (Tom ent@(FdEntry _ fd mst) vs) = status mst >>= prune'\n  where prune' Active\n          = do inactive mst\n               zs <- prune k vs\n               case zs of\n                   [] -> return [(k, One ent)]\n                   [(_, zvs)] -> return [(k, Tom ent zvs)]\n                   _ -> error \"prune\"\n        prune' Inactive = closeFd fd >> prune k vs"],"instances":[],"language":{"extensions":["BangPatterns","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}