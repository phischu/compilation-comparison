{"sliceID":1594958064710786806,"uses":[{"reference":{"otherSlice":8702195797637396388},"usedName":{"typeName":{"identifier":"Prim"}},"qualification":null},{"reference":{"otherSlice":3867849288792351978},"usedName":{"typeName":{"identifier":"MVector"}},"qualification":"G"},{"reference":{"otherSlice":367137517244952458},"usedName":{"typeName":{"identifier":"MVector"}},"qualification":null},{"reference":{"otherSlice":3867849288792351978},"usedName":{"valueName":{"identifier":"basicLength"}},"qualification":"G"},{"reference":{"otherSlice":367137517244952458},"usedName":{"constructorName":{"identifier":"MVector"},"constructorTypeName":{"identifier":"MVector"}},"qualification":null},{"reference":{"otherSlice":3867849288792351978},"usedName":{"valueName":{"identifier":"basicUnsafeSlice"}},"qualification":"G"},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"otherSlice":3867849288792351978},"usedName":{"valueName":{"identifier":"basicOverlaps"}},"qualification":"G"},{"reference":{"otherSlice":6394232019035100809},"usedName":{"valueName":{"identifier":"sameMutableByteArray"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"&&"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"||"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":">="}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"<"}},"qualification":null},{"reference":{"otherSlice":3867849288792351978},"usedName":{"valueName":{"identifier":"basicUnsafeNew"}},"qualification":"G"},{"reference":{"builtinModule":"Control.Monad"},"usedName":{"valueName":{"identifier":"liftM"}},"qualification":null},{"reference":{"otherSlice":5011610965484703882},"usedName":{"valueName":{"identifier":"newByteArray"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"*"}},"qualification":null},{"reference":{"otherSlice":4016320471968770110},"usedName":{"valueName":{"identifier":"sizeOf"}},"qualification":null},{"reference":{"builtinModule":"GHC.Err"},"usedName":{"valueName":{"identifier":"undefined"}},"qualification":null},{"reference":{"otherSlice":3867849288792351978},"usedName":{"valueName":{"identifier":"basicUnsafeRead"}},"qualification":"G"},{"reference":{"otherSlice":7844944118029772510},"usedName":{"valueName":{"identifier":"readByteArray"}},"qualification":null},{"reference":{"otherSlice":3867849288792351978},"usedName":{"valueName":{"identifier":"basicUnsafeWrite"}},"qualification":"G"},{"reference":{"otherSlice":3244980804657041044},"usedName":{"valueName":{"identifier":"writeByteArray"}},"qualification":null},{"reference":{"otherSlice":3867849288792351978},"usedName":{"valueName":{"identifier":"basicUnsafeCopy"}},"qualification":"G"},{"reference":{"otherSlice":409645073200369127},"usedName":{"valueName":{"identifier":"copyMutableByteArray"}},"qualification":null},{"reference":{"otherSlice":3867849288792351978},"usedName":{"valueName":{"identifier":"basicUnsafeMove"}},"qualification":"G"},{"reference":{"otherSlice":6068553537658911990},"usedName":{"valueName":{"identifier":"moveByteArray"}},"qualification":null},{"reference":{"otherSlice":3867849288792351978},"usedName":{"valueName":{"identifier":"basicSet"}},"qualification":"G"},{"reference":{"otherSlice":4420368990718054371},"usedName":{"valueName":{"identifier":"setByteArray"}},"qualification":null}],"fragment":["instance Prim a => G.MVector MVector a where\n        basicLength (MVector _ n _) = n\n        basicUnsafeSlice j m (MVector i n arr) = MVector (i + j) m arr\n        \n        {-# INLINE basicOverlaps #-}\n        basicOverlaps (MVector i m arr1) (MVector j n arr2)\n          = sameMutableByteArray arr1 arr2 &&\n              (between i j (j + n) || between j i (i + m))\n          where between x y z = x >= y && x < z\n        \n        {-# INLINE basicUnsafeNew #-}\n        basicUnsafeNew n\n          = MVector 0 n `liftM` newByteArray (n * sizeOf (undefined :: a))\n        \n        {-# INLINE basicUnsafeRead #-}\n        basicUnsafeRead (MVector i n arr) j = readByteArray arr (i + j)\n        \n        {-# INLINE basicUnsafeWrite #-}\n        basicUnsafeWrite (MVector i n arr) j x\n          = writeByteArray arr (i + j) x\n        \n        {-# INLINE basicUnsafeCopy #-}\n        basicUnsafeCopy (MVector i n dst) (MVector j _ src)\n          = copyMutableByteArray dst (i * sz) src (j * sz) (n * sz)\n          where sz = sizeOf (undefined :: a)\n        \n        {-# INLINE basicUnsafeMove #-}\n        basicUnsafeMove (MVector i n dst) (MVector j _ src)\n          = moveByteArray dst (i * sz) src (j * sz) (n * sz)\n          where sz = sizeOf (undefined :: a)\n        \n        {-# INLINE basicSet #-}\n        basicSet (MVector i n arr) x = setByteArray arr i n x"],"instances":[],"language":{"extensions":["DeriveDataTypeable","MultiParamTypeClasses","FlexibleInstances","ScopedTypeVariables","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":true}}