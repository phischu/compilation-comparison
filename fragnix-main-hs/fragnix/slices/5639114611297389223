{"sliceID":5639114611297389223,"uses":[{"reference":{"otherSlice":5288367503661172006},"usedName":{"constructorName":{"identifier":"UArray"},"constructorTypeName":{"identifier":"UArray"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"EQ"},"constructorTypeName":{"identifier":"Ordering"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"LT"},"constructorTypeName":{"identifier":"Ordering"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"GT"},"constructorTypeName":{"identifier":"Ordering"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"identifier":"compare"}},"qualification":null},{"reference":{"builtinModule":"Data.Foldable"},"usedName":{"valueName":{"identifier":"foldr"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"identifier":"min"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"-"}},"qualification":null},{"reference":{"otherSlice":3191844957948247487},"usedName":{"valueName":{"identifier":"unsafeAt"}},"qualification":null},{"reference":{"otherSlice":3191844957948247487},"usedName":{"typeName":{"identifier":"IArray"}},"qualification":null},{"reference":{"otherSlice":5288367503661172006},"usedName":{"typeName":{"identifier":"UArray"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"typeName":{"identifier":"Ord"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Ordering"}},"qualification":null}],"fragment":["cmpIntUArray ::\n               (IArray UArray e, Ord e) =>\n               UArray Int e -> UArray Int e -> Ordering","cmpIntUArray arr1@(UArray l1 u1 n1 _) arr2@(UArray l2 u2 n2 _)\n  = if n1 == 0 then if n2 == 0 then EQ else LT else\n      if n2 == 0 then GT else\n        case compare l1 l2 of\n            EQ -> foldr cmp (compare u1 u2) [0 .. (n1 `min` n2) - 1]\n            other -> other\n  where cmp i rest\n          = case compare (unsafeAt arr1 i) (unsafeAt arr2 i) of\n                EQ -> rest\n                other -> other"],"instances":[],"language":{"extensions":["BangPatterns","RankNTypes","MagicHash","UnboxedTuples","MultiParamTypeClasses","FlexibleInstances","FlexibleContexts","DeriveDataTypeable","UnliftedFFITypes","RoleAnnotations","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}