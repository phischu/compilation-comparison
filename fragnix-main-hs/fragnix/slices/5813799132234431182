{"sliceID":5813799132234431182,"uses":[{"reference":{"builtinModule":"GHC.Natural"},"usedName":{"typeName":{"identifier":"Natural"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"<"}},"qualification":null},{"reference":{"builtinModule":"GHC.Err"},"usedName":{"valueName":{"identifier":"error"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"I#"},"constructorTypeName":{"identifier":"Int"}},"qualification":null},{"reference":{"otherSlice":8632662648046727972},"usedName":{"valueName":{"identifier":"naturalLog2#"}},"qualification":null}],"fragment":["naturalLog2 :: Natural -> Int","naturalLog2 n\n  | n < 1 =\n    error\n      \"Math.NumberTheory.Logarithms.naturalLog2: argument must be non-zero\"\n  | otherwise = I# (naturalLog2# n)"],"instances":[],"language":{"extensions":["MagicHash","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}