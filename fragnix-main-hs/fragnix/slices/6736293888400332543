{"sliceID":6736293888400332543,"uses":[{"reference":{"builtinModule":"Data.Foldable"},"usedName":{"typeName":{"identifier":"Foldable"}},"qualification":null},{"reference":{"otherSlice":836250808765999032},"usedName":{"typeName":{"identifier":"Array"}},"qualification":null},{"reference":{"builtinModule":"Data.Foldable"},"usedName":{"valueName":{"identifier":"foldr"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"<"}},"qualification":null},{"reference":{"otherSlice":7297700151455758761},"usedName":{"valueName":{"identifier":"sizeofArray"}},"qualification":null},{"reference":{"otherSlice":7280415104757243858},"usedName":{"valueName":{"identifier":"indexArray"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"builtinModule":"Data.Foldable"},"usedName":{"valueName":{"identifier":"foldl"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"-"}},"qualification":null},{"reference":{"builtinModule":"Data.Foldable"},"usedName":{"valueName":{"identifier":"foldr1"}},"qualification":null},{"reference":{"otherSlice":5999148496770720081},"usedName":{"valueName":{"identifier":"die"}},"qualification":null},{"reference":{"builtinModule":"Data.Foldable"},"usedName":{"valueName":{"identifier":"foldl1"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"builtinModule":"Data.Foldable"},"usedName":{"valueName":{"identifier":"foldr'"}},"qualification":null},{"reference":{"builtinModule":"Data.Foldable"},"usedName":{"valueName":{"identifier":"foldl'"}},"qualification":null},{"reference":{"builtinModule":"Data.Foldable"},"usedName":{"valueName":{"identifier":"toList"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"build"}},"qualification":"Exts"},{"reference":{"builtinModule":"Data.Foldable"},"usedName":{"valueName":{"identifier":"null"}},"qualification":null},{"reference":{"builtinModule":"Data.Foldable"},"usedName":{"valueName":{"identifier":"length"}},"qualification":null},{"reference":{"builtinModule":"Data.Foldable"},"usedName":{"valueName":{"identifier":"maximum"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"identifier":"max"}},"qualification":null},{"reference":{"builtinModule":"Data.Foldable"},"usedName":{"valueName":{"identifier":"minimum"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"identifier":"min"}},"qualification":null},{"reference":{"builtinModule":"Data.Foldable"},"usedName":{"valueName":{"identifier":"sum"}},"qualification":null},{"reference":{"builtinModule":"Data.Foldable"},"usedName":{"valueName":{"identifier":"product"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"*"}},"qualification":null}],"fragment":["instance Foldable Array where\n        foldr f z a = go 0\n          where go i\n                  | i < sizeofArray a = f (indexArray a i) (go $ i + 1)\n                  | otherwise = z\n        \n        {-# INLINE foldr #-}\n        foldl f z a = go (sizeofArray a - 1)\n          where go i\n                  | i < 0 = z\n                  | otherwise = f (go $ i - 1) (indexArray a i)\n        \n        {-# INLINE foldl #-}\n        foldr1 f a\n          | sz < 0 = die \"foldr1\" \"empty array\"\n          | otherwise = go 0\n          where sz = sizeofArray a - 1\n                z = indexArray a sz\n                go i\n                  | i < sz = f (indexArray a i) (go $ i + 1)\n                  | otherwise = z\n        \n        {-# INLINE foldr1 #-}\n        foldl1 f a\n          | sz == 0 = die \"foldl1\" \"empty array\"\n          | otherwise = go $ sz - 1\n          where sz = sizeofArray a\n                z = indexArray a 0\n                go i\n                  | i < 1 = f (go $ i - 1) (indexArray a i)\n                  | otherwise = z\n        \n        {-# INLINE foldl1 #-}\n        foldr' f z a = go (sizeofArray a - 1) z\n          where go i !acc\n                  | i < 0 = acc\n                  | otherwise = go (i - 1) (f (indexArray a i) acc)\n        \n        {-# INLINE foldr' #-}\n        foldl' f z a = go 0 z\n          where go i !acc\n                  | i < sizeofArray a = go (i + 1) (f acc $ indexArray a i)\n                  | otherwise = acc\n        \n        {-# INLINE foldl' #-}\n        toList a\n          = Exts.build $\n              \\ c z ->\n                let sz = sizeofArray a\n                    go i\n                      | i < sz = c (indexArray a i) (go $ i + 1)\n                      | otherwise = z\n                  in go 0\n        \n        {-# INLINE toList #-}\n        null a = sizeofArray a == 0\n        \n        {-# INLINE null #-}\n        length = sizeofArray\n        \n        {-# INLINE length #-}\n        maximum a\n          | sz == 0 = die \"maximum\" \"empty array\"\n          | otherwise = go 1 (indexArray a 0)\n          where sz = sizeofArray a\n                go i !e\n                  | i < sz = go (i + 1) (max e $ indexArray a i)\n                  | otherwise = e\n        \n        {-# INLINE maximum #-}\n        minimum a\n          | sz == 0 = die \"minimum\" \"empty array\"\n          | otherwise = go 1 (indexArray a 0)\n          where sz = sizeofArray a\n                go i !e\n                  | i < sz = go (i + 1) (min e $ indexArray a i)\n                  | otherwise = e\n        \n        {-# INLINE minimum #-}\n        sum = foldl' (+) 0\n        \n        {-# INLINE sum #-}\n        product = foldl' (*) 1\n        \n        {-# INLINE product #-}"],"instances":[],"language":{"extensions":["MagicHash","UnboxedTuples","DeriveDataTypeable","BangPatterns","RankNTypes","TypeFamilies","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":true}}