{"sliceID":6556759799132966190,"uses":[{"reference":{"otherSlice":3289594752393879501},"usedName":{"valueName":{"identifier":"unstream"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null},{"reference":{"otherSlice":1746370529149665504},"usedName":{"valueName":{"identifier":"scanl'"}},"qualification":"Stream"},{"reference":{"otherSlice":2700673456966481432},"usedName":{"valueName":{"identifier":"stream"}},"qualification":null},{"reference":{"otherSlice":8934491602005769172},"usedName":{"typeName":{"identifier":"Vector"}},"qualification":null}],"fragment":["scanl' ::\n         (Vector v a, Vector v b) => (a -> b -> a) -> a -> v b -> v a","scanl' f z = unstream . Stream.scanl' f z . stream"],"instances":[],"language":{"extensions":["DeriveDataTypeable","Rank2Types","MultiParamTypeClasses","FlexibleContexts","TypeFamilies","ScopedTypeVariables","BangPatterns","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}