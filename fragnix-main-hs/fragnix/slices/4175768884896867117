{"sliceID":4175768884896867117,"uses":[{"reference":{"otherSlice":8956807621460794744},"usedName":{"typeName":{"identifier":"MonadThrow"}},"qualification":null},{"reference":{"otherSlice":994315449851869449},"usedName":{"typeName":{"identifier":"StateT"}},"qualification":"LazyS"},{"reference":{"otherSlice":8956807621460794744},"usedName":{"valueName":{"identifier":"throwM"}},"qualification":null},{"reference":{"otherSlice":3258704534657931563},"usedName":{"valueName":{"identifier":"lift"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null}],"fragment":["instance MonadThrow m => MonadThrow (LazyS.StateT s m) where\n        throwM e = lift $ throwM e"],"instances":[],"language":{"extensions":["ExistentialQuantification","GeneralizedNewtypeDeriving","RankNTypes","FlexibleInstances","MultiParamTypeClasses","UndecidableInstances","TypeFamilies","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":true}}