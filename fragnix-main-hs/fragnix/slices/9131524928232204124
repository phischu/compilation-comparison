{"sliceID":9131524928232204124,"uses":[{"reference":{"otherSlice":4730966649715802986},"usedName":{"typeName":{"identifier":"RegexMaker"}},"qualification":null},{"reference":{"otherSlice":6756606517105139295},"usedName":{"typeName":{"identifier":"Regex"}},"qualification":null},{"reference":{"otherSlice":1817819925747868260},"usedName":{"typeName":{"identifier":"CompOption"}},"qualification":null},{"reference":{"otherSlice":8309222215052791244},"usedName":{"typeName":{"identifier":"ExecOption"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"String"}},"qualification":null},{"reference":{"otherSlice":4730966649715802986},"usedName":{"valueName":{"identifier":"makeRegexOpts"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO"},"usedName":{"valueName":{"identifier":"unsafePerformIO"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":6375019888841895117},"usedName":{"valueName":{"identifier":"compile"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":">>="}},"qualification":null},{"reference":{"otherSlice":6680928787449620262},"usedName":{"valueName":{"identifier":"unwrap"}},"qualification":null},{"reference":{"otherSlice":4730966649715802986},"usedName":{"valueName":{"identifier":"makeRegexOptsM"}},"qualification":null},{"reference":{"builtinModule":"Data.Either"},"usedName":{"valueName":{"identifier":"either"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"fail"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null},{"reference":{"builtinModule":"GHC.Show"},"usedName":{"valueName":{"identifier":"show"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null}],"fragment":["instance RegexMaker Regex CompOption ExecOption String where\n        makeRegexOpts c e pattern\n          = unsafePerformIO $ (compile c e pattern >>= unwrap)\n        makeRegexOptsM c e pattern\n          = either (fail . show) return $\n              unsafePerformIO $ (compile c e pattern)"],"instances":[],"language":{"extensions":["MultiParamTypeClasses","FunctionalDependencies","ForeignFunctionInterface","GeneralizedNewtypeDeriving","FlexibleContexts","TypeSynonymInstances","FlexibleInstances","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":true}}