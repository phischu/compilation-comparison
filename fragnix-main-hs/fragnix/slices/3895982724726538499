{"sliceID":3895982724726538499,"uses":[{"reference":{"otherSlice":2508142706766052700},"usedName":{"valueName":{"identifier":"discard"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null},{"reference":{"otherSlice":1020303219121790489},"usedName":{"valueName":{"identifier":"foldM'"}},"qualification":"Bundle"},{"reference":{"otherSlice":5483074428067105677},"usedName":{"valueName":{"identifier":"stream"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Monad"}},"qualification":null},{"reference":{"otherSlice":8572689894313737623},"usedName":{"typeName":{"identifier":"Vector"}},"qualification":null}],"fragment":["foldM'_ ::\n          (Monad m, Vector v b) => (a -> b -> m a) -> a -> v b -> m ()","foldM'_ m z = discard . Bundle.foldM' m z . stream"],"instances":[],"language":{"extensions":["Rank2Types","MultiParamTypeClasses","FlexibleContexts","TypeFamilies","ScopedTypeVariables","BangPatterns","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}