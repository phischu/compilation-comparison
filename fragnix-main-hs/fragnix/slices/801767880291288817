{"sliceID":801767880291288817,"uses":[{"reference":{"otherSlice":3289594752393879501},"usedName":{"valueName":{"identifier":"unstream"}},"qualification":null},{"reference":{"otherSlice":9039059914202115560},"usedName":{"valueName":{"identifier":"flatten"}},"qualification":"Stream"},{"reference":{"otherSlice":3501924119519436030},"usedName":{"constructorName":{"identifier":"Exact"},"constructorTypeName":{"identifier":"Size"}},"qualification":null},{"reference":{"otherSlice":7754505474727498078},"usedName":{"valueName":{"identifier":"fromList"}},"qualification":"Stream"},{"reference":{"builtinModule":"Data.List"},"usedName":{"valueName":{"identifier":"foldl'"}},"qualification":"List"},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"otherSlice":7763721027765810954},"usedName":{"valueName":{"identifier":"length"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"<"}},"qualification":null},{"reference":{"otherSlice":1177568965115693950},"usedName":{"valueName":{"identifier":"unsafeIndexM"}},"qualification":null},{"reference":{"otherSlice":891349225261059366},"usedName":{"constructorName":{"identifier":"Box"},"constructorTypeName":{"identifier":"Box"}},"qualification":null},{"reference":{"otherSlice":6240008831363963322},"usedName":{"constructorName":{"identifier":"Yield"},"constructorTypeName":{"identifier":"Step"}},"qualification":"Stream"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"otherSlice":6240008831363963322},"usedName":{"constructorName":{"identifier":"Done"},"constructorTypeName":{"identifier":"Step"}},"qualification":"Stream"},{"reference":{"builtinModule":"GHC.Prim"},"usedName":{"valueName":{"identifier":"seq"}},"qualification":null},{"reference":{"otherSlice":8934491602005769172},"usedName":{"typeName":{"identifier":"Vector"}},"qualification":null}],"fragment":["concat :: Vector v a => [v a] -> v a","concat vs\n  = unstream (Stream.flatten mk step (Exact n) (Stream.fromList vs))\n  where n = List.foldl' (\\ k v -> k + length v) 0 vs\n        \n        {-# INLINE [0] step #-}\n        step (v, i, k)\n          | i < k =\n            case unsafeIndexM v i of\n                Box x -> Stream.Yield x (v, i + 1, k)\n          | otherwise = Stream.Done\n        \n        {-# INLINE mk #-}\n        mk v = let k = length v in k `seq` (v, 0, k)"],"instances":[],"language":{"extensions":["DeriveDataTypeable","Rank2Types","MultiParamTypeClasses","FlexibleContexts","TypeFamilies","ScopedTypeVariables","BangPatterns","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}