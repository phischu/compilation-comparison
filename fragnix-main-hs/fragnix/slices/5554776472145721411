{"sliceID":5554776472145721411,"uses":[{"reference":{"otherSlice":2103754850612341338},"usedName":{"constructorName":{"identifier":"Deep"},"constructorTypeName":{"identifier":"FingerTree"}},"qualification":null},{"reference":{"otherSlice":2658389187921074114},"usedName":{"valueName":{"identifier":"size"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"*"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"otherSlice":6856618864151171204},"usedName":{"constructorName":{"identifier":"Three"},"constructorTypeName":{"identifier":"Digit"}},"qualification":null},{"reference":{"otherSlice":3555949835188142327},"usedName":{"constructorName":{"identifier":"Elem"},"constructorTypeName":{"identifier":"Elem"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":5383474548869591997},"usedName":{"valueName":{"identifier":"mapMulFT"}},"qualification":null},{"reference":{"otherSlice":1673753023314990609},"usedName":{"constructorName":{"identifier":"Node3"},"constructorTypeName":{"identifier":"Node"}},"qualification":null},{"reference":{"otherSlice":2103754850612341338},"usedName":{"typeName":{"identifier":"FingerTree"}},"qualification":null},{"reference":{"otherSlice":3555949835188142327},"usedName":{"typeName":{"identifier":"Elem"}},"qualification":null}],"fragment":["ap3FT ::\n      (a -> b) ->\n        FingerTree (Elem (a -> b)) ->\n          (a -> b) -> (a, a, a) -> FingerTree (Elem b)","ap3FT firstf fs lastf (x, y, z)\n  = Deep (size fs * 3 + 6)\n      (Three (Elem $ firstf x) (Elem $ firstf y) (Elem $ firstf z))\n      (mapMulFT 3\n         (\\ (Elem f) -> Node3 3 (Elem (f x)) (Elem (f y)) (Elem (f z)))\n         fs)\n      (Three (Elem $ lastf x) (Elem $ lastf y) (Elem $ lastf z))"],"instances":[],"language":{"extensions":["BangPatterns","DeriveDataTypeable","StandaloneDeriving","FlexibleInstances","ScopedTypeVariables","DeriveGeneric","TypeFamilies","PatternSynonyms","ViewPatterns","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}