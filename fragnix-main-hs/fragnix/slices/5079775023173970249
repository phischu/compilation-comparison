{"sliceID":5079775023173970249,"uses":[{"reference":{"otherSlice":5700351957984311116},"usedName":{"constructorName":{"identifier":"Empty"},"constructorTypeName":{"identifier":"Text"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Nothing"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":5700351957984311116},"usedName":{"constructorName":{"identifier":"Chunk"},"constructorTypeName":{"identifier":"Text"}},"qualification":null},{"reference":{"otherSlice":257242900272862120},"usedName":{"valueName":{"identifier":"commonPrefixes"}},"qualification":"T"},{"reference":{"otherSlice":1423595995722349223},"usedName":{"valueName":{"identifier":"null"}},"qualification":"T"},{"reference":{"otherSlice":3184837019436048138},"usedName":{"valueName":{"identifier":"chunk"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"otherSlice":6160848297510348402},"usedName":{"valueName":{"identifier":"fromChunks"}},"qualification":null},{"reference":{"builtinModule":"GHC.List"},"usedName":{"valueName":{"identifier":"reverse"}},"qualification":"L"},{"reference":{"otherSlice":5700351957984311116},"usedName":{"typeName":{"identifier":"Text"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Maybe"}},"qualification":null}],"fragment":["commonPrefixes :: Text -> Text -> Maybe (Text, Text, Text)","commonPrefixes Empty _ = Nothing\ncommonPrefixes _ Empty = Nothing\ncommonPrefixes a0 b0 = Just (go a0 b0 [])\n  where go t0@(Chunk x xs) t1@(Chunk y ys) ps\n          = case T.commonPrefixes x y of\n                Just (p, a, b) | T.null a -> go xs (chunk b ys) (p : ps)\n                               | T.null b -> go (chunk a xs) ys (p : ps)\n                               | otherwise ->\n                                 (fromChunks (L.reverse (p : ps)), chunk a xs, chunk b ys)\n                Nothing -> (fromChunks (L.reverse ps), t0, t1)\n        go t0 t1 ps = (fromChunks (L.reverse ps), t0, t1)"],"instances":[],"language":{"extensions":["BangPatterns","MagicHash","TypeFamilies","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}