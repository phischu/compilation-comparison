{"sliceID":8661493477738394914,"uses":[{"reference":{"builtinModule":"GHC.Types"},"usedName":{"valueName":{"identifier":"isTrue#"}},"qualification":null},{"reference":{"builtinModule":"GHC.Prim"},"usedName":{"valueName":{"identifier":"eqWord#"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"builtinModule":"GHC.Integer.Logarithms"},"usedName":{"valueName":{"identifier":"wordLog2#"}},"qualification":null},{"reference":{"builtinModule":"GHC.Prim"},"usedName":{"valueName":{"operator":"-#"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"*"}},"qualification":null},{"reference":{"builtinModule":"GHC.Prim"},"usedName":{"valueName":{"identifier":"and#"}},"qualification":null},{"reference":{"otherSlice":1859721217377383882},"usedName":{"valueName":{"identifier":"hasBit#"}},"qualification":null},{"reference":{"builtinModule":"GHC.Integer"},"usedName":{"typeName":{"identifier":"Integer"}},"qualification":null},{"reference":{"builtinModule":"GHC.Prim"},"usedName":{"typeName":{"identifier":"Word#"}},"qualification":null}],"fragment":["power :: Integer -> Word# -> Integer","power b w#\n  | isTrue# (w# `eqWord#` 0##) = 1\n  | isTrue# (w# `eqWord#` 1##) = b\n  | otherwise = go (wordLog2# w# -# 1#) b (b * b)\n  where go 0# l h\n          = if isTrue# ((w# `and#` 1##) `eqWord#` 0##) then l * l else\n              (l * h)\n        go i# l h\n          | w# `hasBit#` i# = go (i# -# 1#) (l * h) (h * h)\n          | otherwise = go (i# -# 1#) (l * l) (l * h)"],"instances":[],"language":{"extensions":["MagicHash","UnboxedTuples","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}