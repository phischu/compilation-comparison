{"sliceID":9157502735304106731,"uses":[{"reference":{"builtinModule":"GHC.IO"},"usedName":{"typeName":{"identifier":"FilePath"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null},{"reference":{"otherSlice":1517911374496032575},"usedName":{"valueName":{"identifier":"removeFile"}},"qualification":null},{"reference":{"builtinModule":"Control.Exception.Base"},"usedName":{"valueName":{"identifier":"catch"}},"qualification":"E"},{"reference":{"builtinModule":"System.IO.Error"},"usedName":{"valueName":{"identifier":"isDoesNotExistError"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO"},"usedName":{"valueName":{"identifier":"throwIO"}},"qualification":null}],"fragment":["removeFileSafe :: FilePath -> IO ()","removeFileSafe path = removeFile path `E.catch` handleExists\n  where handleExists e\n          | isDoesNotExistError e = return ()\n          | otherwise = throwIO e"],"instances":[],"language":{"extensions":["ScopedTypeVariables","BangPatterns","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}