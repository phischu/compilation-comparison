{"sliceID":6433527891046492750,"uses":[{"reference":{"otherSlice":1776344282554687497},"usedName":{"constructorName":{"identifier":"ErrorT"},"constructorTypeName":{"identifier":"ErrorT"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"Data.Either"},"usedName":{"constructorName":{"identifier":"Left"},"constructorTypeName":{"identifier":"Either"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Monad"}},"qualification":null},{"reference":{"otherSlice":8979303205475815826},"usedName":{"typeName":{"identifier":"Error"}},"qualification":null},{"reference":{"otherSlice":1776344282554687497},"usedName":{"typeName":{"identifier":"ErrorT"}},"qualification":null}],"fragment":["throwError :: (Monad m, Error e) => e -> ErrorT e m a","throwError l = ErrorT $ return (Left l)"],"instances":[],"language":{"extensions":["MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}