{"sliceID":4128338846629374003,"uses":[{"reference":{"otherSlice":1435151082723044833},"usedName":{"constructorName":{"identifier":"Bin"},"constructorTypeName":{"identifier":"Set"}},"qualification":null},{"reference":{"otherSlice":1435151082723044833},"usedName":{"constructorName":{"identifier":"Tip"},"constructorTypeName":{"identifier":"Set"}},"qualification":null},{"reference":{"otherSlice":8505700077166092891},"usedName":{"valueName":{"identifier":"balanceR"}},"qualification":null},{"reference":{"builtinModule":"GHC.Err"},"usedName":{"valueName":{"identifier":"error"}},"qualification":null},{"reference":{"otherSlice":1435151082723044833},"usedName":{"typeName":{"identifier":"Set"}},"qualification":null}],"fragment":["deleteFindMin :: Set a -> (a, Set a)","deleteFindMin t\n  = case t of\n        Bin _ x Tip r -> (x, r)\n        Bin _ x l r -> let (xm, l') = deleteFindMin l in\n                         (xm, balanceR x l' r)\n        Tip -> (error\n                  \"Set.deleteFindMin: can not return the minimal element of an empty set\",\n                Tip)"],"instances":[],"language":{"extensions":["DeriveDataTypeable","StandaloneDeriving","RoleAnnotations","TypeFamilies","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}