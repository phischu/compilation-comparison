{"sliceID":2775954987741297398,"uses":[{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"<"}},"qualification":null},{"reference":{"builtinModule":"GHC.Err"},"usedName":{"valueName":{"identifier":"error"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"otherSlice":4375438339145620833},"usedName":{"valueName":{"identifier":"naturalLog2'"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"otherSlice":3816500397164869619},"usedName":{"valueName":{"identifier":"naturalLogBase'"}},"qualification":null},{"reference":{"builtinModule":"GHC.Natural"},"usedName":{"typeName":{"identifier":"Natural"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null}],"fragment":["naturalLogBase :: Natural -> Natural -> Int","naturalLogBase b n\n  | n < 1 =\n    error\n      \"Math.NumberTheory.Logarithms.naturalLogBase: argument must be positive.\"\n  | n < b = 0\n  | b == 2 = naturalLog2' n\n  | b < 2 =\n    error\n      \"Math.NumberTheory.Logarithms.naturalLogBase: base must be greater than one.\"\n  | otherwise = naturalLogBase' b n"],"instances":[],"language":{"extensions":["MagicHash","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}