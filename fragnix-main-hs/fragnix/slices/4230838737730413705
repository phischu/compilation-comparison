{"sliceID":4230838737730413705,"uses":[{"reference":{"otherSlice":8902960790069794891},"usedName":{"valueName":{"identifier":"bogus"}},"qualification":null},{"reference":{"builtinModule":"GHC.Prim"},"usedName":{"typeName":{"identifier":"Proxy#"}},"qualification":null},{"reference":{"otherSlice":4943433373121461571},"usedName":{"typeName":{"identifier":"BitQueue"}},"qualification":null},{"reference":{"otherSlice":4406277257444163371},"usedName":{"typeName":{"identifier":"Map"}},"qualification":null},{"reference":{"otherSlice":4406277257444163371},"usedName":{"constructorName":{"identifier":"Tip"},"constructorTypeName":{"identifier":"Map"}},"qualification":null},{"reference":{"otherSlice":4406277257444163371},"usedName":{"constructorName":{"identifier":"Bin"},"constructorTypeName":{"identifier":"Map"}},"qualification":null},{"reference":{"otherSlice":1582860830866057592},"usedName":{"valueName":{"identifier":"unconsQ"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"False"},"constructorTypeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"otherSlice":7128300501389607638},"usedName":{"valueName":{"identifier":"balanceR"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"True"},"constructorTypeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"otherSlice":611873764292850874},"usedName":{"valueName":{"identifier":"balanceL"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Nothing"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":1906275447382178356},"usedName":{"valueName":{"identifier":"glue"}},"qualification":null}],"fragment":["deleteAlong :: any -> BitQueue -> Map k a -> Map k a","deleteAlong old !q0 !m = go (bogus old) q0 m\n  where go :: Proxy# () -> BitQueue -> Map k a -> Map k a\n        go !_ !_ Tip = Tip\n        go foom q (Bin _ ky y l r)\n          = case unconsQ q of\n                Just (False, tl) -> balanceR ky y (go foom tl l) r\n                Just (True, tl) -> balanceL ky y l (go foom tl r)\n                Nothing -> glue l r"],"instances":[],"language":{"extensions":["BangPatterns","PatternGuards","DeriveDataTypeable","StandaloneDeriving","RoleAnnotations","TypeFamilies","MagicHash","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll"],"isInstance":false}}