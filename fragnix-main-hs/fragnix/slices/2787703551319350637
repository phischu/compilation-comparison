{"sliceID":2787703551319350637,"uses":[{"reference":{"otherSlice":1174079497962638576},"usedName":{"typeName":{"identifier":"Binary"}},"qualification":null},{"reference":{"otherSlice":9208044541903137161},"usedName":{"typeName":{"identifier":"Seq"}},"qualification":"Seq"},{"reference":{"otherSlice":1174079497962638576},"usedName":{"valueName":{"identifier":"put"}},"qualification":null},{"reference":{"otherSlice":7787832157326777448},"usedName":{"valueName":{"identifier":"length"}},"qualification":"Seq"},{"reference":{"builtinModule":"Data.Monoid"},"usedName":{"valueName":{"operator":"<>"}},"qualification":null},{"reference":{"builtinModule":"Data.Foldable"},"usedName":{"valueName":{"identifier":"mapM_"}},"qualification":"Fold"},{"reference":{"otherSlice":1174079497962638576},"usedName":{"valueName":{"identifier":"get"}},"qualification":null},{"reference":{"otherSlice":7949339268674780491},"usedName":{"typeName":{"identifier":"Get"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null},{"reference":{"otherSlice":7772613785600637975},"usedName":{"valueName":{"identifier":"empty"}},"qualification":"Seq"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$!"}},"qualification":null},{"reference":{"builtinModule":"GHC.Prim"},"usedName":{"valueName":{"identifier":"seq"}},"qualification":null},{"reference":{"otherSlice":5507254915546375839},"usedName":{"valueName":{"operator":"|>"}},"qualification":"Seq"},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"-"}},"qualification":null}],"fragment":["instance (Binary e) => Binary (Seq.Seq e) where\n        put s = put (Seq.length s) <> Fold.mapM_ put s\n        get\n          = do n <- get :: Get Int\n               rep Seq.empty n get\n          where rep xs 0 _ = return $! xs\n                rep xs n g\n                  = xs `seq`\n                      n `seq`\n                        do x <- g\n                           rep (xs Seq.|> x) (n - 1) g"],"instances":[],"language":{"extensions":["FlexibleContexts","DefaultSignatures","GADTs","ScopedTypeVariables","PatternGuards","PolyKinds","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll"],"isInstance":true}}