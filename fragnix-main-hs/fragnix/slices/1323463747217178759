{"sliceID":1323463747217178759,"uses":[{"reference":{"otherSlice":2198017240001515453},"usedName":{"valueName":{"identifier":"mask"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":6076035593432272440},"usedName":{"valueName":{"identifier":"onException"}},"qualification":null},{"reference":{"otherSlice":2198017240001515453},"usedName":{"typeName":{"identifier":"MonadMask"}},"qualification":null}],"fragment":["bracketOnError ::\n                 MonadMask m => m a -> (a -> m b) -> (a -> m c) -> m c","bracketOnError acquire release use\n  = mask $\n      \\ unmasked ->\n        do resource <- acquire\n           unmasked (use resource) `onException` release resource"],"instances":[],"language":{"extensions":["ExistentialQuantification","GeneralizedNewtypeDeriving","RankNTypes","FlexibleInstances","MultiParamTypeClasses","UndecidableInstances","TypeFamilies","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}