{"sliceID":6498077224932430307,"uses":[{"reference":{"otherSlice":8587154504401928891},"usedName":{"typeName":{"identifier":"MonadCatch"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Monoid"}},"qualification":null},{"reference":{"otherSlice":2225101369868176100},"usedName":{"typeName":{"identifier":"WriterT"}},"qualification":"LazyW"},{"reference":{"otherSlice":8587154504401928891},"usedName":{"valueName":{"identifier":"catch"}},"qualification":null},{"reference":{"otherSlice":2225101369868176100},"usedName":{"constructorName":{"identifier":"WriterT"},"constructorTypeName":{"identifier":"WriterT"}},"qualification":"LazyW"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":2225101369868176100},"usedName":{"valueName":{"identifier":"runWriterT"}},"qualification":"LazyW"}],"fragment":["instance (MonadCatch m, Monoid w) => MonadCatch (LazyW.WriterT w m)\n         where\n        catch (LazyW.WriterT m) h\n          = LazyW.WriterT $ m `catch` \\ e -> LazyW.runWriterT (h e)"],"instances":[],"language":{"extensions":["ExistentialQuantification","GeneralizedNewtypeDeriving","RankNTypes","FlexibleInstances","MultiParamTypeClasses","UndecidableInstances","TypeFamilies","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":true}}