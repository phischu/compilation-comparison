{"sliceID":5346297498441756655,"uses":[{"reference":{"otherSlice":8160419729831137275},"usedName":{"constructorName":{"identifier":"CompressInputRequired"},"constructorTypeName":{"identifier":"CompressStream"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":">>="}},"qualification":null},{"reference":{"otherSlice":8160419729831137275},"usedName":{"constructorName":{"identifier":"CompressOutputAvailable"},"constructorTypeName":{"identifier":"CompressStream"}},"qualification":null},{"reference":{"otherSlice":8160419729831137275},"usedName":{"constructorName":{"identifier":"CompressStreamEnd"},"constructorTypeName":{"identifier":"CompressStream"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Monad"}},"qualification":null},{"reference":{"otherSlice":4010822550476529195},"usedName":{"typeName":{"identifier":"ByteString"}},"qualification":"S"},{"reference":{"otherSlice":8160419729831137275},"usedName":{"typeName":{"identifier":"CompressStream"}},"qualification":null}],"fragment":["foldCompressStream ::\n                     Monad m =>\n                     ((S.ByteString -> m a) -> m a) ->\n                       (S.ByteString -> m a -> m a) -> m a -> CompressStream m -> m a","foldCompressStream input output end = fold\n  where fold (CompressInputRequired next)\n          = input (\\ x -> next x >>= fold)\n        fold (CompressOutputAvailable outchunk next)\n          = output outchunk (next >>= fold)\n        fold CompressStreamEnd = end"],"instances":[],"language":{"extensions":["RankNTypes","DeriveDataTypeable","BangPatterns","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}