{"sliceID":5000484295850303549,"uses":[{"reference":{"otherSlice":4010822550476529195},"usedName":{"typeName":{"identifier":"ByteString"}},"qualification":"B"},{"reference":{"otherSlice":2241541392207318616},"usedName":{"typeName":{"identifier":"Text"}},"qualification":null},{"reference":{"otherSlice":7265225742239055449},"usedName":{"typeName":{"identifier":"Query"}},"qualification":null},{"reference":{"otherSlice":3001491077528801909},"usedName":{"valueName":{"identifier":"breakByte"}},"qualification":"B"},{"reference":{"otherSlice":5901584132879337842},"usedName":{"valueName":{"identifier":"decodePathSegments"}},"qualification":null},{"reference":{"otherSlice":9016668032843075385},"usedName":{"valueName":{"identifier":"parseQuery"}},"qualification":null}],"fragment":["decodePath :: B.ByteString -> ([Text], Query)","decodePath b\n  = let (x, y) = B.breakByte 63 b in\n      (decodePathSegments x, parseQuery y)"],"instances":[],"language":{"extensions":["OverloadedStrings","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}