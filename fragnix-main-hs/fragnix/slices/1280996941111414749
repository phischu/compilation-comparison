{"sliceID":1280996941111414749,"uses":[{"reference":{"otherSlice":7572230209893385826},"usedName":{"valueName":{"identifier":"zipWith4M"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Monad"}},"qualification":null},{"reference":{"otherSlice":1254073128444822395},"usedName":{"typeName":{"identifier":"Stream"}},"qualification":null}],"fragment":["zipWith4 ::\n           Monad m =>\n           (a -> b -> c -> d -> e) ->\n             Stream m a -> Stream m b -> Stream m c -> Stream m d -> Stream m e","zipWith4 f = zipWith4M (\\ a b c d -> return (f a b c d))"],"instances":[],"language":{"extensions":["ExistentialQuantification","MultiParamTypeClasses","FlexibleInstances","Rank2Types","BangPatterns","KindSignatures","GADTs","ScopedTypeVariables","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}