{"sliceID":1102759295243746659,"uses":[{"reference":{"otherSlice":1024893273995336405},"usedName":{"valueName":{"identifier":"doesFileExist"}},"qualification":null},{"reference":{"otherSlice":2190948584135927019},"usedName":{"valueName":{"identifier":"createDirectoryIfMissing"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"True"},"constructorTypeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"builtinModule":"Control.Exception.Base"},"usedName":{"valueName":{"identifier":"try"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"System.IO"},"usedName":{"valueName":{"identifier":"withBinaryFile"}},"qualification":"IO"},{"reference":{"builtinModule":"GHC.IO.IOMode"},"usedName":{"constructorName":{"identifier":"ReadMode"},"constructorTypeName":{"identifier":"IOMode"}},"qualification":"IO"},{"reference":{"builtinModule":"GHC.IO.IOMode"},"usedName":{"constructorName":{"identifier":"WriteMode"},"constructorTypeName":{"identifier":"IOMode"}},"qualification":"IO"},{"reference":{"otherSlice":458652461124260253},"usedName":{"valueName":{"identifier":"initDeflate"}},"qualification":"Z"},{"reference":{"otherSlice":3729509523673286253},"usedName":{"constructorName":{"identifier":"WindowBits"},"constructorTypeName":{"identifier":"WindowBits"}},"qualification":"Z"},{"reference":{"builtinModule":"Data.Function"},"usedName":{"valueName":{"identifier":"fix"}},"qualification":null},{"reference":{"otherSlice":1396085430394202173},"usedName":{"constructorName":{"identifier":"PRDone"},"constructorTypeName":{"identifier":"PopperRes"}},"qualification":"Z"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"otherSlice":1396085430394202173},"usedName":{"constructorName":{"identifier":"PRNext"},"constructorTypeName":{"identifier":"PopperRes"}},"qualification":"Z"},{"reference":{"otherSlice":7122040331796438017},"usedName":{"valueName":{"identifier":"hPut"}},"qualification":"S"},{"reference":{"otherSlice":1396085430394202173},"usedName":{"constructorName":{"identifier":"PRError"},"constructorTypeName":{"identifier":"PopperRes"}},"qualification":"Z"},{"reference":{"builtinModule":"GHC.IO"},"usedName":{"valueName":{"identifier":"throwIO"}},"qualification":null},{"reference":{"otherSlice":6032818157466347107},"usedName":{"valueName":{"identifier":"hGetSome"}},"qualification":"S"},{"reference":{"otherSlice":2339530253348411513},"usedName":{"valueName":{"identifier":"defaultChunkSize"}},"qualification":null},{"reference":{"builtinModule":"Control.Monad"},"usedName":{"valueName":{"identifier":"unless"}},"qualification":null},{"reference":{"otherSlice":7202692338078551997},"usedName":{"valueName":{"identifier":"null"}},"qualification":"S"},{"reference":{"otherSlice":1188516316003903323},"usedName":{"valueName":{"identifier":"feedDeflate"}},"qualification":"Z"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":">>="}},"qualification":null},{"reference":{"otherSlice":294418608349543388},"usedName":{"valueName":{"identifier":"finishDeflate"}},"qualification":"Z"},{"reference":{"builtinModule":"Data.Either"},"usedName":{"valueName":{"identifier":"either"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"const"}},"qualification":null},{"reference":{"builtinModule":"Data.Either"},"usedName":{"typeName":{"identifier":"Either"}},"qualification":null},{"reference":{"builtinModule":"GHC.Exception"},"usedName":{"typeName":{"identifier":"SomeException"}},"qualification":null},{"reference":{"otherSlice":5741930653771503473},"usedName":{"valueName":{"identifier":"responseFile"}},"qualification":null},{"reference":{"otherSlice":6785525739144644351},"usedName":{"valueName":{"identifier":"fixHeaders"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Nothing"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"++"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"map"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"<="}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"&&"}},"qualification":null},{"reference":{"otherSlice":4798754932090144467},"usedName":{"typeName":{"identifier":"Status"}},"qualification":null},{"reference":{"otherSlice":2043161144754187370},"usedName":{"typeName":{"identifier":"Header"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO"},"usedName":{"typeName":{"identifier":"FilePath"}},"qualification":null},{"reference":{"otherSlice":8896971230885589368},"usedName":{"typeName":{"identifier":"Response"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null}],"fragment":["compressFile ::\n             Status ->\n               [Header] -> FilePath -> FilePath -> (Response -> IO a) -> IO a","compressFile s hs file cache sendResponse\n  = do e <- doesFileExist tmpfile\n       if e then onSucc else\n         do createDirectoryIfMissing True cache\n            x <- try $\n                   IO.withBinaryFile file IO.ReadMode $\n                     \\ inH ->\n                       IO.withBinaryFile tmpfile IO.WriteMode $\n                         \\ outH ->\n                           do deflate <- Z.initDeflate 7 $ Z.WindowBits 31\n                              let goPopper popper\n                                    = fix $\n                                        \\ loop ->\n                                          do res <- popper\n                                             case res of\n                                                 Z.PRDone -> return ()\n                                                 Z.PRNext bs -> do S.hPut outH bs\n                                                                   loop\n                                                 Z.PRError ex -> throwIO ex\n                              fix $\n                                \\ loop ->\n                                  do bs <- S.hGetSome inH defaultChunkSize\n                                     unless (S.null bs) $\n                                       do Z.feedDeflate deflate bs >>= goPopper\n                                          loop\n                              goPopper $ Z.finishDeflate deflate\n            either onErr (const onSucc) (x :: Either SomeException ())\n  where onSucc\n          = sendResponse $ responseFile s (fixHeaders hs) tmpfile Nothing\n        onErr _ = sendResponse $ responseFile s hs file Nothing\n        tmpfile = cache ++ '/' : map safe file\n        safe c\n          | 'A' <= c && c <= 'Z' = c\n          | 'a' <= c && c <= 'z' = c\n          | '0' <= c && c <= '9' = c\n        safe '-' = '-'\n        safe '_' = '_'\n        safe _ = '_'"],"instances":[],"language":{"extensions":["OverloadedStrings","Rank2Types","ScopedTypeVariables","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}