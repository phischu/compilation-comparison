{"sliceID":4496097384057683097,"uses":[{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"mempty"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"mconcat"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"map"}},"qualification":null},{"reference":{"otherSlice":3282150784634753100},"usedName":{"valueName":{"identifier":"copyByteString"}},"qualification":"Blaze"},{"reference":{"otherSlice":5709136867328459177},"usedName":{"valueName":{"identifier":"urlEncodeBuilder"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"True"},"constructorTypeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Nothing"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"mappend"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"otherSlice":7265225742239055449},"usedName":{"typeName":{"identifier":"Query"}},"qualification":null},{"reference":{"otherSlice":4322896446757888605},"usedName":{"typeName":{"identifier":"Builder"}},"qualification":"Blaze"}],"fragment":["renderQueryBuilder :: Bool -> Query -> Blaze.Builder","renderQueryBuilder _ [] = mempty\nrenderQueryBuilder qmark' (p : ps)\n  = mconcat $\n      go (if qmark' then qmark else mempty) p : map (go amp) ps\n  where qmark = Blaze.copyByteString \"?\"\n        amp = Blaze.copyByteString \"&\"\n        equal = Blaze.copyByteString \"=\"\n        go sep (k, mv)\n          = mconcat\n              [sep, urlEncodeBuilder True k,\n               case mv of\n                   Nothing -> mempty\n                   Just v -> equal `mappend` urlEncodeBuilder True v]"],"instances":[],"language":{"extensions":["OverloadedStrings","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}