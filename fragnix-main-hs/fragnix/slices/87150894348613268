{"sliceID":87150894348613268,"uses":[{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"typeName":{"identifier":"Ord"}},"qualification":null},{"reference":{"otherSlice":1904543910357874234},"usedName":{"typeName":{"identifier":"Set"}},"qualification":null},{"reference":{"otherSlice":1904543910357874234},"usedName":{"constructorName":{"identifier":"Tip"},"constructorTypeName":{"identifier":"Set"}},"qualification":null},{"reference":{"otherSlice":3990740009220156783},"usedName":{"valueName":{"identifier":"singleton"}},"qualification":null},{"reference":{"builtinModule":"GHC.Magic"},"usedName":{"valueName":{"identifier":"lazy"}},"qualification":null},{"reference":{"otherSlice":1904543910357874234},"usedName":{"constructorName":{"identifier":"Bin"},"constructorTypeName":{"identifier":"Set"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"identifier":"compare"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"LT"},"constructorTypeName":{"identifier":"Ordering"}},"qualification":null},{"reference":{"otherSlice":5593748703179870837},"usedName":{"valueName":{"identifier":"ptrEq"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"otherSlice":7188766351992959325},"usedName":{"valueName":{"identifier":"balanceL"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"GT"},"constructorTypeName":{"identifier":"Ordering"}},"qualification":null},{"reference":{"otherSlice":5670785418486259237},"usedName":{"valueName":{"identifier":"balanceR"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"EQ"},"constructorTypeName":{"identifier":"Ordering"}},"qualification":null},{"reference":{"builtinModule":"GHC.Prim"},"usedName":{"valueName":{"identifier":"seq"}},"qualification":null}],"fragment":["insert :: Ord a => a -> Set a -> Set a","insert x0 = go x0 x0\n  where go :: Ord a => a -> a -> Set a -> Set a\n        go orig !_ Tip = singleton (lazy orig)\n        go orig !x t@(Bin sz y l r)\n          = case compare x y of\n                LT | l' `ptrEq` l -> t\n                   | otherwise -> balanceL y l' r\n                  where !l' = go orig x l\n                GT | r' `ptrEq` r -> t\n                   | otherwise -> balanceR y l r'\n                  where !r' = go orig x r\n                EQ | lazy orig `seq` (orig `ptrEq` y) -> t\n                   | otherwise -> Bin sz (lazy orig) l r"],"instances":[],"language":{"extensions":["BangPatterns","PatternGuards","DeriveDataTypeable","StandaloneDeriving","RoleAnnotations","TypeFamilies","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll"],"isInstance":false}}