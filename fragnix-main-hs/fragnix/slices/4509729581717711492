{"sliceID":4509729581717711492,"uses":[{"reference":{"otherSlice":3480565206993838535},"usedName":{"valueName":{"identifier":"unstream"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null},{"reference":{"otherSlice":4898297951144986273},"usedName":{"valueName":{"identifier":"takeWhile"}},"qualification":"Bundle"},{"reference":{"otherSlice":5483074428067105677},"usedName":{"valueName":{"identifier":"stream"}},"qualification":null},{"reference":{"otherSlice":8572689894313737623},"usedName":{"typeName":{"identifier":"Vector"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Bool"}},"qualification":null}],"fragment":["takeWhile :: Vector v a => (a -> Bool) -> v a -> v a","takeWhile f = unstream . Bundle.takeWhile f . stream"],"instances":[],"language":{"extensions":["Rank2Types","MultiParamTypeClasses","FlexibleContexts","TypeFamilies","ScopedTypeVariables","BangPatterns","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}