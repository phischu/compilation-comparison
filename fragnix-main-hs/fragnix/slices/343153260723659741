{"sliceID":343153260723659741,"uses":[{"reference":{"otherSlice":2958434577590642154},"usedName":{"valueName":{"identifier":"consume"}},"qualification":null},{"reference":{"otherSlice":5876841121207984499},"usedName":{"valueName":{"identifier":"zipWithM"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Monad"}},"qualification":null},{"reference":{"otherSlice":9209112058599157037},"usedName":{"typeName":{"identifier":"Stream"}},"qualification":null}],"fragment":["zipWithM_ ::\n            Monad m => (a -> b -> m c) -> Stream m a -> Stream m b -> m ()","zipWithM_ f sa sb = consume (zipWithM f sa sb)"],"instances":[],"language":{"extensions":["DeriveDataTypeable","ExistentialQuantification","Rank2Types","BangPatterns","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}