{"sliceID":6280874928809225504,"uses":[{"reference":{"otherSlice":4875136916224806411},"usedName":{"typeName":{"identifier":"RegexLike"}},"qualification":null},{"reference":{"otherSlice":1541402738797772585},"usedName":{"typeName":{"identifier":"Regex"}},"qualification":null},{"reference":{"otherSlice":7233619382983855062},"usedName":{"typeName":{"identifier":"ByteString"}},"qualification":"L"},{"reference":{"otherSlice":4875136916224806411},"usedName":{"valueName":{"identifier":"matchTest"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO.Unsafe"},"usedName":{"valueName":{"identifier":"unsafePerformIO"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":8438995397452289051},"usedName":{"valueName":{"identifier":"asCString"}},"qualification":null},{"reference":{"otherSlice":841163542554592407},"usedName":{"valueName":{"identifier":"wrapTest"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":">>="}},"qualification":null},{"reference":{"otherSlice":4153463053231619764},"usedName":{"valueName":{"identifier":"unwrap"}},"qualification":null},{"reference":{"otherSlice":4875136916224806411},"usedName":{"valueName":{"identifier":"matchOnce"}},"qualification":null},{"reference":{"otherSlice":7168593872536697352},"usedName":{"valueName":{"identifier":"execute"}},"qualification":null},{"reference":{"otherSlice":4875136916224806411},"usedName":{"valueName":{"identifier":"matchAll"}},"qualification":null},{"reference":{"otherSlice":4844500896780252551},"usedName":{"valueName":{"identifier":"wrapMatchAll"}},"qualification":null},{"reference":{"otherSlice":4875136916224806411},"usedName":{"valueName":{"identifier":"matchCount"}},"qualification":null},{"reference":{"otherSlice":988382020100584811},"usedName":{"valueName":{"identifier":"wrapCount"}},"qualification":null}],"fragment":["instance RegexLike Regex L.ByteString where\n        matchTest regex bs\n          = unsafePerformIO $ asCString bs (wrapTest regex) >>= unwrap\n        matchOnce regex bs = unsafePerformIO $ execute regex bs >>= unwrap\n        matchAll regex bs\n          = unsafePerformIO $ asCString bs (wrapMatchAll regex) >>= unwrap\n        matchCount regex bs\n          = unsafePerformIO $ asCString bs (wrapCount regex) >>= unwrap"],"instances":[],"language":{"extensions":["MultiParamTypeClasses","FunctionalDependencies","ForeignFunctionInterface","GeneralizedNewtypeDeriving","FlexibleContexts","TypeSynonymInstances","FlexibleInstances","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":true}}