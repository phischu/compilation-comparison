{"sliceID":5500791236730896738,"uses":[{"reference":{"otherSlice":820103551778393357},"usedName":{"valueName":{"identifier":"joinDrive"}},"qualification":null},{"reference":{"otherSlice":6626152927613735523},"usedName":{"valueName":{"identifier":"normaliseDrive"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"++"}},"qualification":null},{"reference":{"otherSlice":5420831183488665985},"usedName":{"valueName":{"identifier":"pathSeparator"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"identifier":"not"}},"qualification":null},{"reference":{"builtinModule":"GHC.List"},"usedName":{"valueName":{"identifier":"null"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"&&"}},"qualification":null},{"reference":{"otherSlice":8761416048335766842},"usedName":{"valueName":{"identifier":"isPathSeparator"}},"qualification":null},{"reference":{"builtinModule":"GHC.List"},"usedName":{"valueName":{"identifier":"last"}},"qualification":null},{"reference":{"otherSlice":5875028618680878389},"usedName":{"valueName":{"identifier":"splitDrive"}},"qualification":null},{"reference":{"otherSlice":2614353257492824296},"usedName":{"valueName":{"identifier":"joinPath"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null},{"reference":{"otherSlice":2264448400937999354},"usedName":{"valueName":{"identifier":"splitDirectories"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"GHC.List"},"usedName":{"valueName":{"identifier":"reverse"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO"},"usedName":{"typeName":{"identifier":"FilePath"}},"qualification":null}],"fragment":["normalise :: FilePath -> FilePath","normalise path\n  = joinDrive (normaliseDrive drv) (f pth) ++\n      [pathSeparator | not (null pth) && isPathSeparator (last pth)]\n  where (drv, pth) = splitDrive path\n        f = joinPath . dropDots [] . splitDirectories . propSep\n        propSep (a : (b : xs))\n          | isPathSeparator a && isPathSeparator b = propSep (a : xs)\n        propSep (a : xs) | isPathSeparator a = pathSeparator : propSep xs\n        propSep (x : xs) = x : propSep xs\n        propSep [] = []\n        dropDots acc (\".\" : xs) | not $ null xs = dropDots acc xs\n        dropDots acc (x : xs) = dropDots (x : acc) xs\n        dropDots acc [] = reverse acc"],"instances":[],"language":{"extensions":["MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}