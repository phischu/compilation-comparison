{"sliceID":3586814984449716143,"uses":[{"reference":{"otherSlice":1254073128444822395},"usedName":{"constructorName":{"identifier":"Stream"},"constructorTypeName":{"identifier":"Stream"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"SPEC"},"constructorTypeName":{"identifier":"SPEC"}},"qualification":null},{"reference":{"otherSlice":2120320550836080743},"usedName":{"constructorName":{"identifier":"Yield"},"constructorTypeName":{"identifier":"Step"}},"qualification":null},{"reference":{"otherSlice":2120320550836080743},"usedName":{"constructorName":{"identifier":"Skip"},"constructorTypeName":{"identifier":"Step"}},"qualification":null},{"reference":{"otherSlice":2120320550836080743},"usedName":{"constructorName":{"identifier":"Done"},"constructorTypeName":{"identifier":"Step"}},"qualification":null},{"reference":{"otherSlice":6854859016888063541},"usedName":{"valueName":{"identifier":"error"}},"qualification":"Ck"},{"reference":{"otherSlice":5512440569757699109},"usedName":{"valueName":{"identifier":"emptyStream"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"=<<"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Monad"}},"qualification":null},{"reference":{"otherSlice":1254073128444822395},"usedName":{"typeName":{"identifier":"Stream"}},"qualification":null}],"fragment":["foldr1M :: Monad m => (a -> a -> m a) -> Stream m a -> m a","foldr1M f (Stream step t) = foldr1M_loop0 SPEC t\n  where foldr1M_loop0 !_ s\n          = do r <- step s\n               case r of\n                   Yield x s' -> foldr1M_loop1 SPEC x s'\n                   Skip s' -> foldr1M_loop0 SPEC s'\n                   Done -> (\\ state ->\n                              (Ck.error \"Data/Vector/Fusion/Stream/Monadic.hs\" 998) state\n                                emptyStream)\n                             \"foldr1M\"\n        foldr1M_loop1 !_ x s\n          = do r <- step s\n               case r of\n                   Yield y s' -> f x =<< foldr1M_loop1 SPEC y s'\n                   Skip s' -> foldr1M_loop1 SPEC x s'\n                   Done -> return x"],"instances":[],"language":{"extensions":["ExistentialQuantification","MultiParamTypeClasses","FlexibleInstances","Rank2Types","BangPatterns","KindSignatures","GADTs","ScopedTypeVariables","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}