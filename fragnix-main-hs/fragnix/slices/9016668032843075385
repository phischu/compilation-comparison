{"sliceID":9016668032843075385,"uses":[{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null},{"reference":{"otherSlice":5797786865840180786},"usedName":{"valueName":{"identifier":"uncons"}},"qualification":"B"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":7202692338078551997},"usedName":{"valueName":{"identifier":"null"}},"qualification":"B"},{"reference":{"otherSlice":3301589209915468858},"usedName":{"valueName":{"identifier":"breakDiscard"}},"qualification":null},{"reference":{"otherSlice":3836385395788278612},"usedName":{"valueName":{"identifier":"queryStringSeparators"}},"qualification":null},{"reference":{"otherSlice":3001491077528801909},"usedName":{"valueName":{"identifier":"breakByte"}},"qualification":"B"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":3640790779588491624},"usedName":{"valueName":{"identifier":"urlDecode"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"True"},"constructorTypeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Nothing"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":4010822550476529195},"usedName":{"typeName":{"identifier":"ByteString"}},"qualification":"B"},{"reference":{"otherSlice":7265225742239055449},"usedName":{"typeName":{"identifier":"Query"}},"qualification":null}],"fragment":["parseQuery :: B.ByteString -> Query","parseQuery = parseQueryString' . dropQuestion\n  where dropQuestion q\n          = case B.uncons q of\n                Just (63, q') -> q'\n                _ -> q\n        parseQueryString' q | B.null q = []\n        parseQueryString' q\n          = let (x, xs) = breakDiscard queryStringSeparators q in\n              parsePair x : parseQueryString' xs\n          where parsePair x\n                  = let (k, v) = B.breakByte 61 x\n                        v''\n                          = case B.uncons v of\n                                Just (_, v') -> Just $ urlDecode True v'\n                                _ -> Nothing\n                      in (urlDecode True k, v'')"],"instances":[],"language":{"extensions":["OverloadedStrings","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}