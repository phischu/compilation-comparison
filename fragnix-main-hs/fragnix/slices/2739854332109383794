{"sliceID":2739854332109383794,"uses":[{"reference":{"builtinModule":"GHC.IORef"},"usedName":{"valueName":{"identifier":"newIORef"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":5474649073624890916},"usedName":{"constructorName":{"identifier":"WTBWorking"},"constructorTypeName":{"identifier":"WTB"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"id"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"GHC.IORef"},"usedName":{"valueName":{"identifier":"readIORef"}},"qualification":null},{"reference":{"builtinModule":"GHC.Err"},"usedName":{"valueName":{"identifier":"error"}},"qualification":null},{"reference":{"otherSlice":5474649073624890916},"usedName":{"constructorName":{"identifier":"WTBDone"},"constructorTypeName":{"identifier":"WTB"}},"qualification":null},{"reference":{"otherSlice":2109377013281436257},"usedName":{"valueName":{"identifier":"empty"}},"qualification":"S"},{"reference":{"otherSlice":621536066086058423},"usedName":{"valueName":{"identifier":"readSource"}},"qualification":null},{"reference":{"otherSlice":675696118971413715},"usedName":{"valueName":{"identifier":"null"}},"qualification":"S"},{"reference":{"builtinModule":"GHC.IORef"},"usedName":{"valueName":{"identifier":"writeIORef"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"False"},"constructorTypeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"otherSlice":1442112398648689634},"usedName":{"valueName":{"identifier":"findBound"}},"qualification":null},{"reference":{"otherSlice":1975004662051247232},"usedName":{"constructorName":{"identifier":"FoundBound"},"constructorTypeName":{"identifier":"Bound"}},"qualification":null},{"reference":{"otherSlice":2672280475015569228},"usedName":{"valueName":{"identifier":"killCRLF"}},"qualification":null},{"reference":{"otherSlice":2033628292110967929},"usedName":{"valueName":{"identifier":"leftover"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"True"},"constructorTypeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"otherSlice":1975004662051247232},"usedName":{"constructorName":{"identifier":"NoBound"},"constructorTypeName":{"identifier":"Bound"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"identifier":"not"}},"qualification":null},{"reference":{"otherSlice":675696118971413715},"usedName":{"valueName":{"identifier":"null"}},"qualification":"S8"},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"&&"}},"qualification":null},{"reference":{"otherSlice":8297043965701811244},"usedName":{"valueName":{"identifier":"last"}},"qualification":"S8"},{"reference":{"builtinModule":"GHC.List"},"usedName":{"valueName":{"identifier":"elem"}},"qualification":null},{"reference":{"otherSlice":3674330957874520992},"usedName":{"valueName":{"identifier":"splitAt"}},"qualification":"S"},{"reference":{"otherSlice":6258463563638113276},"usedName":{"valueName":{"identifier":"length"}},"qualification":"S"},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"-"}},"qualification":null},{"reference":{"otherSlice":1524283775147600600},"usedName":{"valueName":{"identifier":"append"}},"qualification":"S"},{"reference":{"otherSlice":1975004662051247232},"usedName":{"constructorName":{"identifier":"PartialBound"},"constructorTypeName":{"identifier":"Bound"}},"qualification":null},{"reference":{"otherSlice":8642306666063513779},"usedName":{"typeName":{"identifier":"ByteString"}},"qualification":"S"},{"reference":{"otherSlice":7175686423223527142},"usedName":{"typeName":{"identifier":"Source"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Bool"}},"qualification":null}],"fragment":["wrapTillBound ::\n              S.ByteString -> Source -> IO (IO S.ByteString, IO Bool)","wrapTillBound bound src\n  = do ref <- newIORef $ WTBWorking id\n       return (go ref, final ref)\n  where final ref\n          = do x <- readIORef ref\n               case x of\n                   WTBWorking _ -> error \"wrapTillBound did not finish\"\n                   WTBDone y -> return y\n        go ref\n          = do state <- readIORef ref\n               case state of\n                   WTBDone _ -> return S.empty\n                   WTBWorking front -> do bs <- readSource src\n                                          if S.null bs then\n                                            do writeIORef ref $ WTBDone False\n                                               return $ front bs\n                                            else push $ front bs\n          where push bs\n                  = case findBound bound bs of\n                        FoundBound before after -> do let before' = killCRLF before\n                                                      leftover src after\n                                                      writeIORef ref $ WTBDone True\n                                                      return before'\n                        NoBound -> do let (toEmit, front')\n                                            = if not (S8.null bs) && S8.last bs `elem` ['\\r', '\\n']\n                                                then\n                                                let (x, y) = S.splitAt (S.length bs - 2) bs in\n                                                  (x, S.append y)\n                                                else (bs, id)\n                                      writeIORef ref $ WTBWorking front'\n                                      if S.null toEmit then go ref else return toEmit\n                        PartialBound -> do writeIORef ref $ WTBWorking $ S.append bs\n                                           go ref"],"instances":[],"language":{"extensions":["OverloadedStrings","ExistentialQuantification","PatternGuards","TypeFamilies","RankNTypes","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll"],"isInstance":false}}