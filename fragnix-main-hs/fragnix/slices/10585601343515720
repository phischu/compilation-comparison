{"sliceID":10585601343515720,"uses":[{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null},{"reference":{"otherSlice":3588951401414067716},"usedName":{"valueName":{"identifier":"runBuilder"}},"qualification":"I"},{"reference":{"builtinModule":"GHC.Ptr"},"usedName":{"valueName":{"identifier":"minusPtr"}},"qualification":null},{"reference":{"otherSlice":8496573510002582276},"usedName":{"typeName":{"identifier":"BuildStep"}},"qualification":"I"},{"reference":{"otherSlice":6247261920417293319},"usedName":{"typeName":{"identifier":"BufferWriter"}},"qualification":null},{"reference":{"otherSlice":6247261920417293319},"usedName":{"constructorName":{"identifier":"Done"},"constructorTypeName":{"identifier":"Next"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"otherSlice":6247261920417293319},"usedName":{"constructorName":{"identifier":"More"},"constructorTypeName":{"identifier":"Next"}},"qualification":null},{"reference":{"otherSlice":6247261920417293319},"usedName":{"constructorName":{"identifier":"Chunk"},"constructorTypeName":{"identifier":"Next"}},"qualification":null},{"reference":{"otherSlice":38613747648554582},"usedName":{"constructorName":{"identifier":"BufferRange"},"constructorTypeName":{"identifier":"BufferRange"}},"qualification":"I"},{"reference":{"builtinModule":"GHC.Ptr"},"usedName":{"valueName":{"identifier":"plusPtr"}},"qualification":null},{"reference":{"otherSlice":7838743463568576031},"usedName":{"valueName":{"identifier":"fillWithBuildStep"}},"qualification":"I"},{"reference":{"otherSlice":4322896446757888605},"usedName":{"typeName":{"identifier":"Builder"}},"qualification":null}],"fragment":["runBuilder :: Builder -> BufferWriter","runBuilder = run . I.runBuilder\n  where bytesWritten startPtr endPtr = endPtr `minusPtr` startPtr\n        \n        run :: I.BuildStep () -> BufferWriter\n        run step\n          = \\ buf len ->\n              let doneH endPtr ()\n                    = let !wc = bytesWritten buf endPtr\n                          next = Done\n                        in return (wc, next)\n                  bufferFullH endPtr minReq step'\n                    = let !wc = bytesWritten buf endPtr\n                          next = More minReq (run step')\n                        in return (wc, next)\n                  insertChunkH endPtr bs step'\n                    = let !wc = bytesWritten buf endPtr\n                          next = Chunk bs (run step')\n                        in return (wc, next)\n                  br = I.BufferRange buf (buf `plusPtr` len)\n                in I.fillWithBuildStep step doneH bufferFullH insertChunkH br"],"instances":[],"language":{"extensions":["BangPatterns","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}