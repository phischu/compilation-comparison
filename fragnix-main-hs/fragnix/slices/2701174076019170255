{"sliceID":2701174076019170255,"uses":[{"reference":{"otherSlice":7233619382983855062},"usedName":{"constructorName":{"identifier":"Empty"},"constructorTypeName":{"identifier":"ByteString"}},"qualification":null},{"reference":{"otherSlice":7233619382983855062},"usedName":{"constructorName":{"identifier":"Chunk"},"constructorTypeName":{"identifier":"ByteString"}},"qualification":null},{"reference":{"otherSlice":6205401353656581290},"usedName":{"valueName":{"identifier":"unpackAppendCharsLazy"}},"qualification":"S"},{"reference":{"otherSlice":7233619382983855062},"usedName":{"typeName":{"identifier":"ByteString"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Char"}},"qualification":null}],"fragment":["unpackChars :: ByteString -> [Char]","unpackChars Empty = []\nunpackChars (Chunk c cs)\n  = S.unpackAppendCharsLazy c (unpackChars cs)"],"instances":[],"language":{"extensions":["ForeignFunctionInterface","BangPatterns","DeriveDataTypeable","Unsafe","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}