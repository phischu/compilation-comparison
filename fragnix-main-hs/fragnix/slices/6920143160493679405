{"sliceID":6920143160493679405,"uses":[{"reference":{"otherSlice":5859084506302185979},"usedName":{"valueName":{"identifier":"unstreamM"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null},{"reference":{"otherSlice":4424269399968759001},"usedName":{"valueName":{"identifier":"mapM"}},"qualification":"Stream"},{"reference":{"otherSlice":2700673456966481432},"usedName":{"valueName":{"identifier":"stream"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Monad"}},"qualification":null},{"reference":{"otherSlice":8934491602005769172},"usedName":{"typeName":{"identifier":"Vector"}},"qualification":null}],"fragment":["mapM ::\n       (Monad m, Vector v a, Vector v b) => (a -> m b) -> v a -> m (v b)","mapM f = unstreamM . Stream.mapM f . stream"],"instances":[],"language":{"extensions":["DeriveDataTypeable","Rank2Types","MultiParamTypeClasses","FlexibleContexts","TypeFamilies","ScopedTypeVariables","BangPatterns","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}