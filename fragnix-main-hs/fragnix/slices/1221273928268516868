{"sliceID":1221273928268516868,"uses":[{"reference":{"otherSlice":9209112058599157037},"usedName":{"constructorName":{"identifier":"Stream"},"constructorTypeName":{"identifier":"Stream"}},"qualification":null},{"reference":{"builtinModule":"Data.Maybe"},"usedName":{"constructorName":{"identifier":"Nothing"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"-"}},"qualification":null},{"reference":{"builtinModule":"Control.Monad"},"usedName":{"valueName":{"identifier":"liftM"}},"qualification":null},{"reference":{"otherSlice":6240008831363963322},"usedName":{"constructorName":{"identifier":"Yield"},"constructorTypeName":{"identifier":"Step"}},"qualification":null},{"reference":{"otherSlice":6240008831363963322},"usedName":{"constructorName":{"identifier":"Skip"},"constructorTypeName":{"identifier":"Step"}},"qualification":null},{"reference":{"builtinModule":"Data.Maybe"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":6240008831363963322},"usedName":{"constructorName":{"identifier":"Done"},"constructorTypeName":{"identifier":"Step"}},"qualification":null},{"reference":{"otherSlice":5324811590526126075},"usedName":{"valueName":{"identifier":"error"}},"qualification":"Ck"},{"reference":{"otherSlice":8034283368639521573},"usedName":{"valueName":{"identifier":"emptyStream"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Monad"}},"qualification":null},{"reference":{"otherSlice":9209112058599157037},"usedName":{"typeName":{"identifier":"Stream"}},"qualification":null}],"fragment":["init :: Monad m => Stream m a -> Stream m a","init (Stream step s sz) = Stream step' (Nothing, s) (sz - 1)\n  where {-# INLINE [0] step' #-}\n        step' (Nothing, s)\n          = liftM\n              (\\ r ->\n                 case r of\n                     Yield x s' -> Skip (Just x, s')\n                     Skip s' -> Skip (Nothing, s')\n                     Done -> (\\ s ->\n                                (Ck.error \"Data/Vector/Fusion/Stream/Monadic.hs\" 317) s\n                                  emptyStream)\n                               \"init\")\n              (step s)\n        step' (Just x, s)\n          = liftM\n              (\\ r ->\n                 case r of\n                     Yield y s' -> Yield x (Just y, s')\n                     Skip s' -> Skip (Just x, s')\n                     Done -> Done)\n              (step s)"],"instances":[],"language":{"extensions":["DeriveDataTypeable","ExistentialQuantification","Rank2Types","BangPatterns","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}