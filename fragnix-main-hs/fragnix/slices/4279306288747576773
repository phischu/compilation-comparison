{"sliceID":4279306288747576773,"uses":[{"reference":{"otherSlice":3326759671840124085},"usedName":{"typeName":{"identifier":"PrimMonad"}},"qualification":null},{"reference":{"otherSlice":176320221852820559},"usedName":{"typeName":{"identifier":"MutVar"}},"qualification":null},{"reference":{"otherSlice":3326759671840124085},"usedName":{"typeName":{"identifier":"PrimState"}},"qualification":null},{"reference":{"otherSlice":4612809190767580749},"usedName":{"valueName":{"identifier":"atomicModifyMutVar"}},"qualification":null},{"reference":{"builtinModule":"GHC.Prim"},"usedName":{"valueName":{"identifier":"seq"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null}],"fragment":["atomicModifyMutVar' ::\n                      PrimMonad m => MutVar (PrimState m) a -> (a -> (a, b)) -> m b","atomicModifyMutVar' mv f\n  = do b <- atomicModifyMutVar mv force\n       b `seq` return b\n  where force x = let (a, b) = f x in (a, a `seq` b)"],"instances":[],"language":{"extensions":["MagicHash","UnboxedTuples","DeriveDataTypeable","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}