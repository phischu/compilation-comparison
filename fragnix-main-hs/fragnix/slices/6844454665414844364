{"sliceID":6844454665414844364,"uses":[{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"typeName":{"identifier":"Ord"}},"qualification":null},{"reference":{"otherSlice":4406277257444163371},"usedName":{"typeName":{"identifier":"Map"}},"qualification":null},{"reference":{"otherSlice":4406277257444163371},"usedName":{"constructorName":{"identifier":"Tip"},"constructorTypeName":{"identifier":"Map"}},"qualification":null},{"reference":{"otherSlice":4406277257444163371},"usedName":{"constructorName":{"identifier":"Bin"},"constructorTypeName":{"identifier":"Map"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"identifier":"compare"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"LT"},"constructorTypeName":{"identifier":"Ordering"}},"qualification":null},{"reference":{"otherSlice":5593748703179870837},"usedName":{"valueName":{"identifier":"ptrEq"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"otherSlice":7128300501389607638},"usedName":{"valueName":{"identifier":"balanceR"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"GT"},"constructorTypeName":{"identifier":"Ordering"}},"qualification":null},{"reference":{"otherSlice":611873764292850874},"usedName":{"valueName":{"identifier":"balanceL"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"EQ"},"constructorTypeName":{"identifier":"Ordering"}},"qualification":null},{"reference":{"otherSlice":1906275447382178356},"usedName":{"valueName":{"identifier":"glue"}},"qualification":null}],"fragment":["delete :: Ord k => k -> Map k a -> Map k a","delete = go\n  where go :: Ord k => k -> Map k a -> Map k a\n        go !_ Tip = Tip\n        go k t@(Bin _ kx x l r)\n          = case compare k kx of\n                LT | l' `ptrEq` l -> t\n                   | otherwise -> balanceR kx x l' r\n                  where !l' = go k l\n                GT | r' `ptrEq` r -> t\n                   | otherwise -> balanceL kx x l r'\n                  where !r' = go k r\n                EQ -> glue l r"],"instances":[],"language":{"extensions":["BangPatterns","PatternGuards","DeriveDataTypeable","StandaloneDeriving","RoleAnnotations","TypeFamilies","MagicHash","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll"],"isInstance":false}}