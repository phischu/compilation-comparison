{"sliceID":7395501926118906788,"uses":[{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":">="}},"qualification":null},{"reference":{"otherSlice":8280657994540913042},"usedName":{"valueName":{"identifier":"size"}},"qualification":null},{"reference":{"otherSlice":1904543910357874234},"usedName":{"constructorName":{"identifier":"Tip"},"constructorTypeName":{"identifier":"Set"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"<="}},"qualification":null},{"reference":{"otherSlice":1904543910357874234},"usedName":{"constructorName":{"identifier":"Bin"},"constructorTypeName":{"identifier":"Set"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"identifier":"compare"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"LT"},"constructorTypeName":{"identifier":"Ordering"}},"qualification":null},{"reference":{"otherSlice":5092005356321557259},"usedName":{"valueName":{"identifier":"link"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"GT"},"constructorTypeName":{"identifier":"Ordering"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"-"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"EQ"},"constructorTypeName":{"identifier":"Ordering"}},"qualification":null},{"reference":{"otherSlice":1756972569592436584},"usedName":{"valueName":{"identifier":"insertMin"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null},{"reference":{"otherSlice":1904543910357874234},"usedName":{"typeName":{"identifier":"Set"}},"qualification":null}],"fragment":["drop :: Int -> Set a -> Set a","drop i m | i >= size m = Tip\ndrop i0 m0 = go i0 m0\n  where go i m | i <= 0 = m\n        go !_ Tip = Tip\n        go i (Bin _ x l r)\n          = case compare i sizeL of\n                LT -> link x (go i l) r\n                GT -> go (i - sizeL - 1) r\n                EQ -> insertMin x r\n          where sizeL = size l"],"instances":[],"language":{"extensions":["BangPatterns","PatternGuards","DeriveDataTypeable","StandaloneDeriving","RoleAnnotations","TypeFamilies","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll"],"isInstance":false}}