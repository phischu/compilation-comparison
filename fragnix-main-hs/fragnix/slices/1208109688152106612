{"sliceID":1208109688152106612,"uses":[{"reference":{"otherSlice":3515459160259683656},"usedName":{"valueName":{"identifier":"uncons"}},"qualification":"T"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Nothing"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":2731699828731760517},"usedName":{"constructorName":{"identifier":"Finished"},"constructorTypeName":{"identifier":"Scan"}},"qualification":null},{"reference":{"otherSlice":2731699828731760517},"usedName":{"constructorName":{"identifier":"Continue"},"constructorTypeName":{"identifier":"Scan"}},"qualification":null},{"reference":{"otherSlice":9026227396759938023},"usedName":{"valueName":{"identifier":"get"}},"qualification":null},{"reference":{"otherSlice":54412462067114173},"usedName":{"valueName":{"identifier":"inputSpansChunks"}},"qualification":null},{"reference":{"otherSlice":8815246374892258961},"usedName":{"valueName":{"identifier":"size"}},"qualification":null},{"reference":{"otherSlice":7133367760469904600},"usedName":{"valueName":{"identifier":"advance"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"-"}},"qualification":null},{"reference":{"otherSlice":3061601359968548493},"usedName":{"valueName":{"identifier":"take"}},"qualification":"T"},{"reference":{"otherSlice":2241541392207318616},"usedName":{"typeName":{"identifier":"Text"}},"qualification":null},{"reference":{"otherSlice":915346971857185237},"usedName":{"typeName":{"identifier":"Parser"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Char"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Maybe"}},"qualification":null}],"fragment":["scan_ ::\n      (s -> [Text] -> Parser r) ->\n        s -> (s -> Char -> Maybe s) -> Parser r","scan_ f s0 p = go [] s0\n  where scanner s !n t\n          = case T.uncons t of\n                Just (c, t') -> case p s c of\n                                    Just s' -> scanner s' (n + 1) t'\n                                    Nothing -> Finished s n t\n                Nothing -> Continue s\n        go acc s\n          = do input <- get\n               case scanner s 0 input of\n                   Continue s' -> do continue <- inputSpansChunks (size input)\n                                     if continue then go (input : acc) s' else f s' (input : acc)\n                   Finished s' n t -> do advance (size input - size t)\n                                         f s' (T.take n input : acc)"],"instances":[],"language":{"extensions":["BangPatterns","FlexibleInstances","GADTs","OverloadedStrings","Rank2Types","RecordWildCards","TypeFamilies","TypeSynonymInstances","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}