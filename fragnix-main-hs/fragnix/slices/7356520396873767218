{"sliceID":7356520396873767218,"uses":[{"reference":{"otherSlice":4010822550476529195},"usedName":{"constructorName":{"identifier":"PS"},"constructorTypeName":{"identifier":"ByteString"}},"qualification":"B"},{"reference":{"builtinModule":"Foreign.ForeignPtr"},"usedName":{"valueName":{"identifier":"withForeignPtr"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"GHC.Ptr"},"usedName":{"valueName":{"identifier":"plusPtr"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"<"}},"qualification":null},{"reference":{"builtinModule":"Foreign.Storable"},"usedName":{"valueName":{"identifier":"peek"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Ptr"},"usedName":{"valueName":{"identifier":"minusPtr"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"otherSlice":6645032013393414869},"usedName":{"constructorName":{"identifier":"T"},"constructorTypeName":{"identifier":"T"}},"qualification":null},{"reference":{"otherSlice":6319358220054646503},"usedName":{"valueName":{"identifier":"get"}},"qualification":null},{"reference":{"otherSlice":1407842651072297740},"usedName":{"valueName":{"identifier":"inlinePerformIO"}},"qualification":null},{"reference":{"otherSlice":2833648163881947677},"usedName":{"valueName":{"identifier":"unsafeTake"}},"qualification":"B"},{"reference":{"otherSlice":929813521966159103},"usedName":{"valueName":{"identifier":"inputSpansChunks"}},"qualification":null},{"reference":{"otherSlice":4010822550476529195},"usedName":{"typeName":{"identifier":"ByteString"}},"qualification":null},{"reference":{"otherSlice":2921449568316915535},"usedName":{"typeName":{"identifier":"Parser"}},"qualification":null},{"reference":{"builtinModule":"GHC.Word"},"usedName":{"typeName":{"identifier":"Word8"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Maybe"}},"qualification":null}],"fragment":["scan_ ::\n      (s -> [ByteString] -> Parser r) ->\n        s -> (s -> Word8 -> Maybe s) -> Parser r","scan_ f s0 p = go [] s0\n  where go acc s1\n          = do let scanner (B.PS fp off len)\n                     = withForeignPtr fp $\n                         \\ ptr0 ->\n                           do let start = ptr0 `plusPtr` off\n                                  end = start `plusPtr` len\n                                  inner ptr !s\n                                    | ptr < end =\n                                      do w <- peek ptr\n                                         case p s w of\n                                             Just s' -> inner (ptr `plusPtr` 1) s'\n                                             _ -> done (ptr `minusPtr` start) s\n                                    | otherwise = done (ptr `minusPtr` start) s\n                                  done !i !s = return (T i s)\n                              inner start s1\n               bs <- get\n               let T i s' = inlinePerformIO $ scanner bs\n                   !h = B.unsafeTake i bs\n               continue <- inputSpansChunks i\n               if continue then go (h : acc) s' else f s' (h : acc)"],"instances":[],"language":{"extensions":["BangPatterns","GADTs","OverloadedStrings","RankNTypes","RecordWildCards","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}