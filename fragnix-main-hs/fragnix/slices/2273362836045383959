{"sliceID":2273362836045383959,"uses":[{"reference":{"otherSlice":2065173151069060358},"usedName":{"valueName":{"identifier":"unsafeCreate"}},"qualification":"I"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":1592189035054902320},"usedName":{"valueName":{"identifier":"memset"}},"qualification":"I"},{"reference":{"otherSlice":1081040113900034831},"usedName":{"valueName":{"identifier":"unsafeUseAsCStringLen"}},"qualification":"U"},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"builtinModule":"Foreign.Storable"},"usedName":{"valueName":{"identifier":"peekByteOff"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null},{"reference":{"builtinModule":"GHC.Word"},"usedName":{"typeName":{"identifier":"Word8"}},"qualification":null},{"reference":{"otherSlice":5902154932943786400},"usedName":{"constructorName":{"identifier":"I"},"constructorTypeName":{"identifier":"I"}},"qualification":null},{"reference":{"otherSlice":2304422479748538231},"usedName":{"valueName":{"identifier":"index"}},"qualification":null},{"reference":{"builtinModule":"GHC.Real"},"usedName":{"valueName":{"identifier":"fromIntegral"}},"qualification":null},{"reference":{"builtinModule":"Foreign.Storable"},"usedName":{"valueName":{"identifier":"pokeByteOff"}},"qualification":null},{"reference":{"builtinModule":"Data.Bits"},"usedName":{"valueName":{"operator":".|."}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"otherSlice":4010822550476529195},"usedName":{"typeName":{"identifier":"ByteString"}},"qualification":"B"}],"fragment":["mkTable :: B.ByteString -> B.ByteString","mkTable s\n  = I.unsafeCreate 32 $\n      \\ t ->\n        do _ <- I.memset t 0 32\n           U.unsafeUseAsCStringLen s $\n             \\ (p, l) ->\n               let loop n\n                     | n == l = return ()\n                     | otherwise =\n                       do c <- peekByteOff p n :: IO Word8\n                          let I byte bit = index (fromIntegral c)\n                          prev <- peekByteOff t byte :: IO Word8\n                          pokeByteOff t byte (prev .|. bit)\n                          loop (n + 1)\n                 in loop 0"],"instances":[],"language":{"extensions":["BangPatterns","MagicHash","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}