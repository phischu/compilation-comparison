{"sliceID":7810934421277133710,"uses":[{"reference":{"builtinModule":"Foreign.Marshal.Alloc"},"usedName":{"valueName":{"identifier":"allocaBytes"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"Foreign.C.Error"},"usedName":{"valueName":{"identifier":"throwErrnoIfMinus1_"}},"qualification":null},{"reference":{"otherSlice":8107234076392520614},"usedName":{"valueName":{"identifier":"c_getrlimit"}},"qualification":null},{"reference":{"otherSlice":4645234071956984424},"usedName":{"valueName":{"identifier":"packResource"}},"qualification":null},{"reference":{"builtinModule":"Foreign.Storable"},"usedName":{"valueName":{"identifier":"peekByteOff"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"otherSlice":4573595417233217072},"usedName":{"constructorName":{"identifier":"ResourceLimits"},"constructorTypeName":{"identifier":"ResourceLimits"}},"qualification":null},{"reference":{"otherSlice":4573595417233217072},"usedName":{"valueName":{"identifier":"softLimit"}},"qualification":null},{"reference":{"otherSlice":9149765190300345977},"usedName":{"valueName":{"identifier":"unpackRLimit"}},"qualification":null},{"reference":{"otherSlice":4573595417233217072},"usedName":{"valueName":{"identifier":"hardLimit"}},"qualification":null},{"reference":{"otherSlice":7690845151596207094},"usedName":{"typeName":{"identifier":"Resource"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null},{"reference":{"otherSlice":4573595417233217072},"usedName":{"typeName":{"identifier":"ResourceLimits"}},"qualification":null}],"fragment":["getResourceLimit :: Resource -> IO ResourceLimits","getResourceLimit res\n  = do allocaBytes (16) $\n         \\ p_rlimit ->\n           do throwErrnoIfMinus1_ \"getResourceLimit\" $\n                c_getrlimit (packResource res) p_rlimit\n              soft <- ((\\ hsc_ptr -> peekByteOff hsc_ptr 0)) p_rlimit\n              hard <- ((\\ hsc_ptr -> peekByteOff hsc_ptr 8)) p_rlimit\n              return\n                (ResourceLimits{softLimit = unpackRLimit soft,\n                                hardLimit = unpackRLimit hard})"],"instances":[],"language":{"extensions":["MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}