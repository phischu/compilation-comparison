{"sliceID":4312568800265429185,"uses":[{"reference":{"otherSlice":1010722195463586032},"usedName":{"constructorName":{"identifier":"RWST"},"constructorTypeName":{"identifier":"RWST"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":1010722195463586032},"usedName":{"valueName":{"identifier":"runRWST"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"Data.Monoid"},"usedName":{"typeName":{"identifier":"Monoid"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Monad"}},"qualification":null},{"reference":{"otherSlice":1010722195463586032},"usedName":{"typeName":{"identifier":"RWST"}},"qualification":null}],"fragment":["censor ::\n         (Monoid w, Monad m) => (w -> w) -> RWST r w s m a -> RWST r w s m a","censor f m\n  = RWST $\n      \\ r s ->\n        do (a, s', w) <- runRWST m r s\n           return (a, s', f w)"],"instances":[],"language":{"extensions":["MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}