{"sliceID":7579592426097536521,"uses":[{"reference":{"otherSlice":4132404936174356097},"usedName":{"constructorName":{"identifier":"Stream"},"constructorTypeName":{"identifier":"Stream"}},"qualification":null},{"reference":{"otherSlice":5999573723849470462},"usedName":{"constructorName":{"identifier":"S1"},"constructorTypeName":{"identifier":"Switch"}},"qualification":null},{"reference":{"otherSlice":4923910788515433777},"usedName":{"constructorName":{"operator":":*:"},"constructorTypeName":{"identifier":"PairS"}},"qualification":null},{"reference":{"otherSlice":2339004113504757537},"usedName":{"constructorName":{"identifier":"Done"},"constructorTypeName":{"identifier":"Step"}},"qualification":null},{"reference":{"otherSlice":2339004113504757537},"usedName":{"constructorName":{"identifier":"Skip"},"constructorTypeName":{"identifier":"Step"}},"qualification":null},{"reference":{"otherSlice":2339004113504757537},"usedName":{"constructorName":{"identifier":"Yield"},"constructorTypeName":{"identifier":"Step"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"otherSlice":5999573723849470462},"usedName":{"constructorName":{"identifier":"S2"},"constructorTypeName":{"identifier":"Switch"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Char"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"otherSlice":4132404936174356097},"usedName":{"typeName":{"identifier":"Stream"}},"qualification":null}],"fragment":["dropWhile :: (Char -> Bool) -> Stream Char -> Stream Char","dropWhile p (Stream next0 s0 len) = Stream next (S1 :*: s0) len\n  where {-# INLINE next #-}\n        next (S1 :*: s)\n          = case next0 s of\n                Done -> Done\n                Skip s' -> Skip (S1 :*: s')\n                Yield x s' | p x -> Skip (S1 :*: s')\n                           | otherwise -> Yield x (S2 :*: s')\n        next (S2 :*: s)\n          = case next0 s of\n                Done -> Done\n                Skip s' -> Skip (S2 :*: s')\n                Yield x s' -> Yield x (S2 :*: s')"],"instances":[],"language":{"extensions":["BangPatterns","MagicHash","Rank2Types","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}