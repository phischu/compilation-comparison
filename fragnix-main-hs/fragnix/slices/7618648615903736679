{"sliceID":7618648615903736679,"uses":[{"reference":{"otherSlice":7954954090554769191},"usedName":{"typeName":{"identifier":"Hashable"}},"qualification":null},{"reference":{"builtinModule":"GHC.Int"},"usedName":{"typeName":{"identifier":"Int64"}},"qualification":null},{"reference":{"otherSlice":7954954090554769191},"usedName":{"valueName":{"identifier":"hash"}},"qualification":null},{"reference":{"builtinModule":"Data.Bits"},"usedName":{"valueName":{"identifier":"bitSize"}},"qualification":null},{"reference":{"builtinModule":"GHC.Err"},"usedName":{"valueName":{"identifier":"undefined"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"builtinModule":"GHC.Real"},"usedName":{"valueName":{"identifier":"fromIntegral"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"builtinModule":"Data.Bits"},"usedName":{"valueName":{"identifier":"xor"}},"qualification":null},{"reference":{"builtinModule":"Data.Bits"},"usedName":{"valueName":{"identifier":"shiftR"}},"qualification":null},{"reference":{"builtinModule":"GHC.Word"},"usedName":{"typeName":{"identifier":"Word64"}},"qualification":null},{"reference":{"otherSlice":7954954090554769191},"usedName":{"valueName":{"identifier":"hashWithSalt"}},"qualification":null},{"reference":{"otherSlice":4509469804204379300},"usedName":{"valueName":{"identifier":"defaultHashWithSalt"}},"qualification":null}],"fragment":["instance Hashable Int64 where\n        hash n\n          | bitSize (undefined :: Int) == 64 = fromIntegral n\n          | otherwise =\n            fromIntegral\n              (fromIntegral n `xor` (fromIntegral n `shiftR` 32 :: Word64))\n        hashWithSalt = defaultHashWithSalt"],"instances":[],"language":{"extensions":["BangPatterns","ForeignFunctionInterface","MagicHash","ScopedTypeVariables","UnliftedFFITypes","DefaultSignatures","FlexibleContexts","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":true}}