{"sliceID":3539375125644945854,"uses":[{"reference":{"otherSlice":3326759671840124085},"usedName":{"typeName":{"identifier":"PrimMonad"}},"qualification":null},{"reference":{"otherSlice":4641953017354057066},"usedName":{"typeName":{"identifier":"MVector"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"otherSlice":5873523979145974553},"usedName":{"typeName":{"identifier":"Bundle"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null},{"reference":{"otherSlice":3326759671840124085},"usedName":{"typeName":{"identifier":"PrimState"}},"qualification":null},{"reference":{"otherSlice":6598411705420963928},"usedName":{"valueName":{"identifier":"checkLength"}},"qualification":"Ck"},{"reference":{"otherSlice":4956884951746098628},"usedName":{"constructorName":{"identifier":"Internal"},"constructorTypeName":{"identifier":"Checks"}},"qualification":"Ck"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":3004867841528755180},"usedName":{"valueName":{"identifier":"unsafeNew"}},"qualification":null},{"reference":{"otherSlice":7447414200794448241},"usedName":{"valueName":{"identifier":"unsafeWrite"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"-"}},"qualification":null},{"reference":{"otherSlice":1020303219121790489},"usedName":{"valueName":{"identifier":"foldM'"}},"qualification":"Bundle"},{"reference":{"otherSlice":9056219066746679510},"usedName":{"valueName":{"identifier":"unsafeSlice"}},"qualification":null}],"fragment":["unstablePartitionMax ::\n                       (PrimMonad m, MVector v a) =>\n                       (a -> Bool) ->\n                         Bundle u a -> Int -> m (v (PrimState m) a, v (PrimState m) a)","unstablePartitionMax f s n\n  = do v <- ((Ck.checkLength \"Data/Vector/Generic/Mutable.hs\" 926)\n               Ck.Internal)\n              \"unstablePartitionMax\"\n              n\n              $ unsafeNew n\n       let {-# INLINE [0] put #-}\n           put (i, j) x\n             | f x =\n               do unsafeWrite v i x\n                  return (i + 1, j)\n             | otherwise =\n               do unsafeWrite v (j - 1) x\n                  return (i, j - 1)\n       (i, j) <- Bundle.foldM' put (0, n) s\n       return (unsafeSlice 0 i v, unsafeSlice j (n - j) v)"],"instances":[],"language":{"extensions":["MultiParamTypeClasses","FlexibleContexts","BangPatterns","TypeFamilies","ScopedTypeVariables","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}