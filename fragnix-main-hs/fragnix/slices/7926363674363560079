{"sliceID":7926363674363560079,"uses":[{"reference":{"otherSlice":8979303205475815826},"usedName":{"typeName":{"identifier":"Error"}},"qualification":null},{"reference":{"otherSlice":3786418068262660356},"usedName":{"typeName":{"identifier":"MonadThrow"}},"qualification":null},{"reference":{"otherSlice":1776344282554687497},"usedName":{"typeName":{"identifier":"ErrorT"}},"qualification":null},{"reference":{"otherSlice":3786418068262660356},"usedName":{"valueName":{"identifier":"throwM"}},"qualification":null},{"reference":{"otherSlice":1800817309688667062},"usedName":{"valueName":{"identifier":"lift"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null}],"fragment":["instance (Error e, MonadThrow m) => MonadThrow (ErrorT e m) where\n        throwM = lift . throwM"],"instances":[],"language":{"extensions":["ExistentialQuantification","GeneralizedNewtypeDeriving","RankNTypes","FlexibleInstances","MultiParamTypeClasses","UndecidableInstances","TypeFamilies","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":true}}