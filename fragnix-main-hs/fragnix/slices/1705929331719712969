{"sliceID":1705929331719712969,"uses":[{"reference":{"otherSlice":8765721791877540981},"usedName":{"valueName":{"identifier":"toPair"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":4406277257444163371},"usedName":{"constructorName":{"identifier":"Tip"},"constructorTypeName":{"identifier":"Map"}},"qualification":null},{"reference":{"otherSlice":4609286002637564688},"usedName":{"constructorName":{"operator":":*:"},"constructorTypeName":{"identifier":"StrictPair"}},"qualification":null},{"reference":{"otherSlice":4406277257444163371},"usedName":{"constructorName":{"identifier":"Bin"},"constructorTypeName":{"identifier":"Map"}},"qualification":null},{"reference":{"otherSlice":5593748703179870837},"usedName":{"valueName":{"identifier":"ptrEq"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"&&"}},"qualification":null},{"reference":{"otherSlice":7995582847914420959},"usedName":{"valueName":{"identifier":"link"}},"qualification":null},{"reference":{"otherSlice":8591646212762114909},"usedName":{"valueName":{"identifier":"link2"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"otherSlice":4406277257444163371},"usedName":{"typeName":{"identifier":"Map"}},"qualification":null}],"fragment":["partitionWithKey ::\n                 (k -> a -> Bool) -> Map k a -> (Map k a, Map k a)","partitionWithKey p0 t0 = toPair $ go p0 t0\n  where go _ Tip = (Tip :*: Tip)\n        go p t@(Bin _ kx x l r)\n          | p kx x =\n            (if l1 `ptrEq` l && r1 `ptrEq` r then t else link kx x l1 r1) :*:\n              link2 l2 r2\n          | otherwise =\n            link2 l1 r1 :*:\n              (if l2 `ptrEq` l && r2 `ptrEq` r then t else link kx x l2 r2)\n          where (l1 :*: l2) = go p l\n                (r1 :*: r2) = go p r"],"instances":[],"language":{"extensions":["BangPatterns","PatternGuards","DeriveDataTypeable","StandaloneDeriving","RoleAnnotations","TypeFamilies","MagicHash","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll"],"isInstance":false}}