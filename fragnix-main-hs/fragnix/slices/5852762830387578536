{"sliceID":5852762830387578536,"uses":[{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"I#"},"constructorTypeName":{"identifier":"Int"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"valueName":{"identifier":"isTrue#"}},"qualification":null},{"reference":{"builtinModule":"GHC.Prim"},"usedName":{"valueName":{"operator":"<#"}},"qualification":null},{"reference":{"builtinModule":"GHC.Err"},"usedName":{"valueName":{"identifier":"error"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"builtinModule":"GHC.Integer.Logarithms"},"usedName":{"valueName":{"identifier":"wordLog2#"}},"qualification":null},{"reference":{"builtinModule":"GHC.Prim"},"usedName":{"valueName":{"identifier":"int2Word#"}},"qualification":null}],"fragment":["intLog2 :: Int -> Int","intLog2 (I# i#)\n  | isTrue# (i# <# 1#) =\n    error\n      \"Math.NumberTheory.Logarithms.intLog2: argument must be positive\"\n  | otherwise = I# (wordLog2# (int2Word# i#))"],"instances":[],"language":{"extensions":["MagicHash","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}