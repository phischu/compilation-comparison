{"sliceID":9207717872096665863,"uses":[{"reference":{"otherSlice":9208044541903137161},"usedName":{"constructorName":{"identifier":"Seq"},"constructorTypeName":{"identifier":"Seq"}},"qualification":null},{"reference":{"otherSlice":354684057922072400},"usedName":{"valueName":{"identifier":"viewl"}},"qualification":null},{"reference":{"otherSlice":7270423061335848636},"usedName":{"constructorName":{"identifier":"EmptyL"},"constructorTypeName":{"identifier":"ViewL"}},"qualification":null},{"reference":{"otherSlice":7772613785600637975},"usedName":{"valueName":{"identifier":"empty"}},"qualification":null},{"reference":{"otherSlice":7270423061335848636},"usedName":{"constructorName":{"operator":":<"},"constructorTypeName":{"identifier":"ViewL"}},"qualification":null},{"reference":{"otherSlice":260850562356698968},"usedName":{"valueName":{"identifier":"viewr"}},"qualification":null},{"reference":{"otherSlice":5507254915546375839},"usedName":{"constructorName":{"identifier":"EmptyR"},"constructorTypeName":{"identifier":"ViewR"}},"qualification":null},{"reference":{"builtinModule":"Data.Functor"},"usedName":{"valueName":{"operator":"<$>"}},"qualification":null},{"reference":{"otherSlice":5507254915546375839},"usedName":{"constructorName":{"operator":":>"},"constructorTypeName":{"identifier":"ViewR"}},"qualification":null},{"reference":{"otherSlice":6732333861573237300},"usedName":{"valueName":{"identifier":"rigidify"}},"qualification":null},{"reference":{"otherSlice":8981610629214482880},"usedName":{"constructorName":{"identifier":"RigidEmpty"},"constructorTypeName":{"identifier":"Rigidified"}},"qualification":null},{"reference":{"otherSlice":8981610629214482880},"usedName":{"constructorName":{"identifier":"RigidOne"},"constructorTypeName":{"identifier":"Rigidified"}},"qualification":null},{"reference":{"otherSlice":3555949835188142327},"usedName":{"constructorName":{"identifier":"Elem"},"constructorTypeName":{"identifier":"Elem"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"fmap"}},"qualification":null},{"reference":{"otherSlice":8981610629214482880},"usedName":{"constructorName":{"identifier":"RigidTwo"},"constructorTypeName":{"identifier":"Rigidified"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":4863458966340106727},"usedName":{"valueName":{"identifier":"lift2FT"}},"qualification":null},{"reference":{"otherSlice":8981610629214482880},"usedName":{"constructorName":{"identifier":"RigidThree"},"constructorTypeName":{"identifier":"Rigidified"}},"qualification":null},{"reference":{"otherSlice":6687162462794788791},"usedName":{"valueName":{"identifier":"lift3FT"}},"qualification":null},{"reference":{"otherSlice":8981610629214482880},"usedName":{"constructorName":{"identifier":"RigidFull"},"constructorTypeName":{"identifier":"Rigidified"}},"qualification":null},{"reference":{"otherSlice":6330763764213190359},"usedName":{"constructorName":{"identifier":"Rigid"},"constructorTypeName":{"identifier":"Rigid"}},"qualification":null},{"reference":{"otherSlice":2103754850612341338},"usedName":{"constructorName":{"identifier":"Deep"},"constructorTypeName":{"identifier":"FingerTree"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"*"}},"qualification":null},{"reference":{"otherSlice":7787832157326777448},"usedName":{"valueName":{"identifier":"length"}},"qualification":null},{"reference":{"otherSlice":3517403630358752853},"usedName":{"valueName":{"identifier":"nodeToDigit"}},"qualification":null},{"reference":{"otherSlice":2763250986601531949},"usedName":{"valueName":{"identifier":"aptyMiddle"}},"qualification":null},{"reference":{"otherSlice":3555949835188142327},"usedName":{"typeName":{"identifier":"Elem"}},"qualification":null},{"reference":{"builtinModule":"GHC.Prim"},"usedName":{"valueName":{"identifier":"coerce"}},"qualification":null},{"reference":{"otherSlice":9208044541903137161},"usedName":{"typeName":{"identifier":"Seq"}},"qualification":null}],"fragment":["liftA2Seq :: (a -> b -> c) -> Seq a -> Seq b -> Seq c","liftA2Seq f xs ys@(Seq ysFT)\n  = case viewl xs of\n        EmptyL -> empty\n        firstx :< xs' -> case viewr xs' of\n                             EmptyR -> f firstx <$> ys\n                             Seq xs''FT :> lastx -> case rigidify ysFT of\n                                                        RigidEmpty -> empty\n                                                        RigidOne (Elem y) -> fmap (\\ x -> f x y) xs\n                                                        RigidTwo (Elem y1) (Elem y2) -> Seq $\n                                                                                          lift2FT f\n                                                                                            firstx\n                                                                                            xs''FT\n                                                                                            lastx\n                                                                                            (y1, y2)\n                                                        RigidThree (Elem y1) (Elem y2)\n                                                          (Elem y3) -> Seq $\n                                                                         lift3FT f firstx xs''FT\n                                                                           lastx\n                                                                           (y1, y2, y3)\n                                                        RigidFull r@(Rigid s pr _m sf) -> Seq $\n                                                                                            Deep\n                                                                                              (s *\n                                                                                                 length\n                                                                                                   xs)\n                                                                                              (fmap\n                                                                                                 (fmap\n                                                                                                    (f firstx))\n                                                                                                 (nodeToDigit\n                                                                                                    pr))\n                                                                                              (aptyMiddle\n                                                                                                 (fmap\n                                                                                                    (f firstx))\n                                                                                                 (fmap\n                                                                                                    (f lastx))\n                                                                                                 (lift_elem\n                                                                                                    f)\n                                                                                                 xs''FT\n                                                                                                 r)\n                                                                                              (fmap\n                                                                                                 (fmap\n                                                                                                    (f lastx))\n                                                                                                 (nodeToDigit\n                                                                                                    sf))\n  where lift_elem :: (a -> b -> c) -> a -> Elem b -> Elem c\n        lift_elem = coerce"],"instances":[],"language":{"extensions":["BangPatterns","DeriveDataTypeable","StandaloneDeriving","FlexibleInstances","ScopedTypeVariables","DeriveGeneric","TypeFamilies","PatternSynonyms","ViewPatterns","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}