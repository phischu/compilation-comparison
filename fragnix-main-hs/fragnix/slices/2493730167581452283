{"sliceID":2493730167581452283,"uses":[{"reference":{"otherSlice":1527332270030016565},"usedName":{"typeName":{"identifier":"MonadCatch"}},"qualification":null},{"reference":{"otherSlice":4513011172434259357},"usedName":{"typeName":{"identifier":"IdentityT"}},"qualification":null},{"reference":{"otherSlice":1527332270030016565},"usedName":{"valueName":{"identifier":"catch"}},"qualification":null},{"reference":{"otherSlice":4513011172434259357},"usedName":{"constructorName":{"identifier":"IdentityT"},"constructorTypeName":{"identifier":"IdentityT"}},"qualification":null},{"reference":{"otherSlice":4513011172434259357},"usedName":{"valueName":{"identifier":"runIdentityT"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null}],"fragment":["instance MonadCatch m => MonadCatch (IdentityT m) where\n        catch (IdentityT m) f = IdentityT (catch m (runIdentityT . f))"],"instances":[],"language":{"extensions":["ExistentialQuantification","GeneralizedNewtypeDeriving","RankNTypes","FlexibleInstances","MultiParamTypeClasses","UndecidableInstances","TypeFamilies","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":true}}