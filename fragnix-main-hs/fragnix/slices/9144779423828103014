{"sliceID":9144779423828103014,"uses":[{"reference":{"otherSlice":8587154504401928891},"usedName":{"typeName":{"identifier":"MonadCatch"}},"qualification":null},{"reference":{"otherSlice":8162688007533086550},"usedName":{"typeName":{"identifier":"IdentityT"}},"qualification":null},{"reference":{"otherSlice":8587154504401928891},"usedName":{"valueName":{"identifier":"catch"}},"qualification":null},{"reference":{"otherSlice":8162688007533086550},"usedName":{"constructorName":{"identifier":"IdentityT"},"constructorTypeName":{"identifier":"IdentityT"}},"qualification":null},{"reference":{"otherSlice":8162688007533086550},"usedName":{"valueName":{"identifier":"runIdentityT"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null}],"fragment":["instance MonadCatch m => MonadCatch (IdentityT m) where\n        catch (IdentityT m) f = IdentityT (catch m (runIdentityT . f))"],"instances":[],"language":{"extensions":["ExistentialQuantification","GeneralizedNewtypeDeriving","RankNTypes","FlexibleInstances","MultiParamTypeClasses","UndecidableInstances","TypeFamilies","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":true}}