{"sliceID":6351763927857876917,"uses":[{"reference":{"otherSlice":2685013294826592877},"usedName":{"valueName":{"identifier":"mapExceptT"}},"qualification":null},{"reference":{"otherSlice":7632135482993295932},"usedName":{"constructorName":{"identifier":"Identity"},"constructorTypeName":{"identifier":"Identity"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null},{"reference":{"otherSlice":7632135482993295932},"usedName":{"valueName":{"identifier":"runIdentity"}},"qualification":null},{"reference":{"builtinModule":"Data.Either"},"usedName":{"typeName":{"identifier":"Either"}},"qualification":null},{"reference":{"otherSlice":8727464647183228196},"usedName":{"typeName":{"identifier":"Except"}},"qualification":null}],"fragment":["mapExcept ::\n          (Either e a -> Either e' b) -> Except e a -> Except e' b","mapExcept f = mapExceptT (Identity . f . runIdentity)"],"instances":[],"language":{"extensions":["MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}