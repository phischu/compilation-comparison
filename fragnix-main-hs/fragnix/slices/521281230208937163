{"sliceID":521281230208937163,"uses":[{"reference":{"otherSlice":3524487285931367047},"usedName":{"constructorName":{"identifier":"Reaper"},"constructorTypeName":{"identifier":"Reaper"}},"qualification":null},{"reference":{"otherSlice":3524487285931367047},"usedName":{"valueName":{"identifier":"reaperAdd"}},"qualification":null},{"reference":{"otherSlice":3524487285931367047},"usedName":{"valueName":{"identifier":"reaperKill"}},"qualification":null},{"reference":{"otherSlice":3524487285931367047},"usedName":{"valueName":{"identifier":"reaperRead"}},"qualification":null},{"reference":{"otherSlice":3524487285931367047},"usedName":{"valueName":{"identifier":"reaperStop"}},"qualification":null},{"reference":{"otherSlice":1254746538566141260},"usedName":{"valueName":{"identifier":"lookup"}},"qualification":"M"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":5124441656816406754},"usedName":{"constructorName":{"identifier":"Negative"},"constructorTypeName":{"identifier":"Entry"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO"},"usedName":{"valueName":{"identifier":"throwIO"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO.Exception"},"usedName":{"valueName":{"identifier":"userError"}},"qualification":null},{"reference":{"otherSlice":5124441656816406754},"usedName":{"constructorName":{"identifier":"Positive"},"constructorTypeName":{"identifier":"Entry"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"constructorName":{"identifier":"Nothing"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":848809022053984829},"usedName":{"valueName":{"identifier":"positive"}},"qualification":null},{"reference":{"builtinModule":"Control.Exception.Base"},"usedName":{"valueName":{"identifier":"onException"}},"qualification":"E"},{"reference":{"otherSlice":6678839057310866113},"usedName":{"valueName":{"identifier":"negative"}},"qualification":null},{"reference":{"otherSlice":7805617090344902998},"usedName":{"typeName":{"identifier":"FileInfoCache"}},"qualification":null},{"reference":{"otherSlice":1350312861518069942},"usedName":{"typeName":{"identifier":"Hash"}},"qualification":null},{"reference":{"builtinModule":"GHC.IO"},"usedName":{"typeName":{"identifier":"FilePath"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null},{"reference":{"otherSlice":6031488408124747280},"usedName":{"typeName":{"identifier":"FileInfo"}},"qualification":null}],"fragment":["getAndRegisterInfo ::\n                   FileInfoCache -> Hash -> FilePath -> IO FileInfo","getAndRegisterInfo reaper@Reaper{..} h path\n  = do cache <- reaperRead\n       case M.lookup h path cache of\n           Just Negative -> throwIO\n                              (userError \"FileInfoCache:getAndRegisterInfo\")\n           Just (Positive x) -> return x\n           Nothing -> positive reaper h path `E.onException`\n                        negative reaper h path"],"instances":[],"language":{"extensions":["RecordWildCards","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}