{"sliceID":3453571193212593238,"uses":[{"reference":{"otherSlice":7687432913428665514},"usedName":{"typeName":{"identifier":"Bitmap"}},"qualification":null},{"reference":{"otherSlice":7421561743090722311},"usedName":{"typeName":{"identifier":"Array"}},"qualification":"A"},{"reference":{"otherSlice":4624303957607166275},"usedName":{"valueName":{"identifier":"run"}},"qualification":"A"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"Data.Bits"},"usedName":{"valueName":{"operator":".|."}},"qualification":null},{"reference":{"otherSlice":7916845059951741125},"usedName":{"valueName":{"identifier":"new_"}},"qualification":"A"},{"reference":{"builtinModule":"Data.Bits"},"usedName":{"valueName":{"identifier":"popCount"}},"qualification":null},{"reference":{"builtinModule":"Data.Bits"},"usedName":{"valueName":{"operator":".&."}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":">"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"otherSlice":2062893055141454594},"usedName":{"valueName":{"identifier":"unsafeShiftL"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"/="}},"qualification":null},{"reference":{"otherSlice":5770064233821844047},"usedName":{"valueName":{"identifier":"write"}},"qualification":"A"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$!"}},"qualification":null},{"reference":{"otherSlice":7169929954465792251},"usedName":{"valueName":{"identifier":"index"}},"qualification":"A"},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"=<<"}},"qualification":null},{"reference":{"otherSlice":3403653658545981831},"usedName":{"valueName":{"identifier":"indexM"}},"qualification":"A"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"identifier":"negate"}},"qualification":null}],"fragment":["unionArrayBy ::\n             (a -> a -> a) ->\n               Bitmap -> Bitmap -> A.Array a -> A.Array a -> A.Array a","unionArrayBy f b1 b2 ary1 ary2\n  = A.run $\n      do let b' = b1 .|. b2\n         mary <- A.new_ (popCount b')\n         let ba = b1 .&. b2\n             go !i !i1 !i2 !m\n               | m > b' = return ()\n               | b' .&. m == 0 = go i i1 i2 (m `unsafeShiftL` 1)\n               | ba .&. m /= 0 =\n                 do A.write mary i $! f (A.index ary1 i1) (A.index ary2 i2)\n                    go (i + 1) (i1 + 1) (i2 + 1) (m `unsafeShiftL` 1)\n               | b1 .&. m /= 0 =\n                 do A.write mary i =<< A.indexM ary1 i1\n                    go (i + 1) (i1 + 1) (i2) (m `unsafeShiftL` 1)\n               | otherwise =\n                 do A.write mary i =<< A.indexM ary2 i2\n                    go (i + 1) (i1) (i2 + 1) (m `unsafeShiftL` 1)\n         go 0 0 0 (b' .&. negate b')\n         return mary"],"instances":[],"language":{"extensions":["BangPatterns","DeriveDataTypeable","MagicHash","ScopedTypeVariables","PatternGuards","RoleAnnotations","TypeFamilies","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll"],"isInstance":false}}