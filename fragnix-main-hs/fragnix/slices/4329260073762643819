{"sliceID":4329260073762643819,"uses":[{"reference":{"otherSlice":5876841121207984499},"usedName":{"valueName":{"identifier":"zipWithM"}},"qualification":"M"},{"reference":{"otherSlice":8190307605777436853},"usedName":{"valueName":{"identifier":"liftStream"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Monad"}},"qualification":null},{"reference":{"otherSlice":963393349676107981},"usedName":{"typeName":{"identifier":"Stream"}},"qualification":null},{"reference":{"otherSlice":9209112058599157037},"usedName":{"typeName":{"identifier":"Stream"}},"qualification":"M"}],"fragment":["zipWithM ::\n           Monad m => (a -> b -> m c) -> Stream a -> Stream b -> M.Stream m c","zipWithM f as bs = M.zipWithM f (liftStream as) (liftStream bs)"],"instances":[],"language":{"extensions":["DeriveDataTypeable","FlexibleInstances","Rank2Types","BangPatterns","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}