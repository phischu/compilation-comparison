{"sliceID":4398528053301522578,"uses":[{"reference":{"otherSlice":6073454630168832022},"usedName":{"constructorName":{"identifier":"One"},"constructorTypeName":{"identifier":"Digit"}},"qualification":null},{"reference":{"builtinModule":"GHC.Prim"},"usedName":{"valueName":{"identifier":"seq"}},"qualification":null},{"reference":{"otherSlice":7359514920200544764},"usedName":{"constructorName":{"identifier":"Split"},"constructorTypeName":{"identifier":"Split"}},"qualification":null},{"reference":{"builtinModule":"Data.Maybe"},"usedName":{"constructorName":{"identifier":"Nothing"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"otherSlice":6073454630168832022},"usedName":{"constructorName":{"identifier":"Two"},"constructorTypeName":{"identifier":"Digit"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"<"}},"qualification":null},{"reference":{"builtinModule":"Data.Maybe"},"usedName":{"constructorName":{"identifier":"Just"},"constructorTypeName":{"identifier":"Maybe"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"otherSlice":3097725820661431075},"usedName":{"valueName":{"identifier":"size"}},"qualification":null},{"reference":{"otherSlice":6073454630168832022},"usedName":{"constructorName":{"identifier":"Three"},"constructorTypeName":{"identifier":"Digit"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"otherSlice":6073454630168832022},"usedName":{"constructorName":{"identifier":"Four"},"constructorTypeName":{"identifier":"Digit"}},"qualification":null},{"reference":{"otherSlice":3097725820661431075},"usedName":{"typeName":{"identifier":"Sized"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Int"}},"qualification":null},{"reference":{"otherSlice":6073454630168832022},"usedName":{"typeName":{"identifier":"Digit"}},"qualification":null},{"reference":{"otherSlice":7359514920200544764},"usedName":{"typeName":{"identifier":"Split"}},"qualification":null},{"reference":{"builtinModule":"Data.Maybe"},"usedName":{"typeName":{"identifier":"Maybe"}},"qualification":null}],"fragment":["splitDigit ::\n             Sized a => Int -> Digit a -> Split (Maybe (Digit a)) a","splitDigit i (One a) = i `seq` Split Nothing a Nothing\nsplitDigit i (Two a b)\n  | i < sa = Split Nothing a (Just (One b))\n  | otherwise = Split (Just (One a)) b Nothing\n  where sa = size a\nsplitDigit i (Three a b c)\n  | i < sa = Split Nothing a (Just (Two b c))\n  | i < sab = Split (Just (One a)) b (Just (One c))\n  | otherwise = Split (Just (Two a b)) c Nothing\n  where sa = size a\n        sab = sa + size b\nsplitDigit i (Four a b c d)\n  | i < sa = Split Nothing a (Just (Three b c d))\n  | i < sab = Split (Just (One a)) b (Just (Two c d))\n  | i < sabc = Split (Just (Two a b)) c (Just (One d))\n  | otherwise = Split (Just (Three a b c)) d Nothing\n  where sa = size a\n        sab = sa + size b\n        sabc = sab + size c"],"instances":[],"language":{"extensions":["DeriveDataTypeable","StandaloneDeriving","TypeFamilies","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}