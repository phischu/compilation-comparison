{"sliceID":2247575848941298293,"uses":[{"reference":{"otherSlice":2840484400631494086},"usedName":{"constructorName":{"identifier":"UrlEncoded"},"constructorTypeName":{"identifier":"RequestBodyType"}},"qualification":null},{"reference":{"otherSlice":675696118971413715},"usedName":{"valueName":{"identifier":"null"}},"qualification":"S"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":8017170790354418478},"usedName":{"valueName":{"identifier":"concat"}},"qualification":"S"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"id"}},"qualification":null},{"reference":{"builtinModule":"Control.Monad"},"usedName":{"valueName":{"identifier":"mapM_"}},"qualification":null},{"reference":{"builtinModule":"Data.Either"},"usedName":{"constructorName":{"identifier":"Left"},"constructorTypeName":{"identifier":"Either"}},"qualification":null},{"reference":{"otherSlice":8006649162155888313},"usedName":{"valueName":{"identifier":"parseSimpleQuery"}},"qualification":"H"},{"reference":{"otherSlice":2840484400631494086},"usedName":{"constructorName":{"identifier":"Multipart"},"constructorTypeName":{"identifier":"RequestBodyType"}},"qualification":null},{"reference":{"otherSlice":4778842974934768098},"usedName":{"valueName":{"identifier":"parsePieces"}},"qualification":null},{"reference":{"otherSlice":8519534216426756697},"usedName":{"valueName":{"identifier":"pack"}},"qualification":"S8"},{"reference":{"otherSlice":1524283775147600600},"usedName":{"valueName":{"identifier":"append"}},"qualification":"S"},{"reference":{"otherSlice":4175260859201958131},"usedName":{"typeName":{"identifier":"BackEnd"}},"qualification":null},{"reference":{"otherSlice":2840484400631494086},"usedName":{"typeName":{"identifier":"RequestBodyType"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null},{"reference":{"otherSlice":8642306666063513779},"usedName":{"typeName":{"identifier":"ByteString"}},"qualification":"S"},{"reference":{"builtinModule":"Data.Either"},"usedName":{"typeName":{"identifier":"Either"}},"qualification":null},{"reference":{"otherSlice":3233004973087392466},"usedName":{"typeName":{"identifier":"Param"}},"qualification":null},{"reference":{"otherSlice":1662716235212055960},"usedName":{"typeName":{"identifier":"File"}},"qualification":null}],"fragment":["conduitRequestBody ::\n                   BackEnd y ->\n                     RequestBodyType ->\n                       IO S.ByteString -> (Either Param (File y) -> IO ()) -> IO ()","conduitRequestBody _ UrlEncoded rbody add\n  = do let loop front\n             = do bs <- rbody\n                  if S.null bs then return $ S.concat $ front [] else\n                    loop $ front . (bs :)\n       bs <- loop id\n       mapM_ (add . Left) $ H.parseSimpleQuery bs\nconduitRequestBody backend (Multipart bound) rbody add\n  = parsePieces backend (S8.pack \"--\" `S.append` bound) rbody add"],"instances":[],"language":{"extensions":["OverloadedStrings","ExistentialQuantification","PatternGuards","TypeFamilies","RankNTypes","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll"],"isInstance":false}}