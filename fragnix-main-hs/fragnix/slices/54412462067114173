{"sliceID":54412462067114173,"uses":[{"reference":{"otherSlice":8785507881657649312},"usedName":{"constructorName":{"identifier":"Parser"},"constructorTypeName":{"identifier":"Parser"}},"qualification":"T"},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"<"}},"qualification":null},{"reference":{"otherSlice":7200968871480325809},"usedName":{"valueName":{"identifier":"lengthOf"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"||"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"otherSlice":5210530093827115852},"usedName":{"constructorName":{"identifier":"Complete"},"constructorTypeName":{"identifier":"More"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"False"},"constructorTypeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"constructorName":{"identifier":"True"},"constructorTypeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"otherSlice":8097268505951239635},"usedName":{"valueName":{"identifier":"prompt"}},"qualification":null},{"reference":{"otherSlice":494130822622245686},"usedName":{"typeName":{"identifier":"Pos"}},"qualification":null},{"reference":{"otherSlice":915346971857185237},"usedName":{"typeName":{"identifier":"Parser"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Bool"}},"qualification":null}],"fragment":["inputSpansChunks :: Pos -> Parser Bool","inputSpansChunks i\n  = T.Parser $\n      \\ t pos_ more _lose succ ->\n        let pos = pos_ + i in\n          if pos < lengthOf t || more == Complete then succ t pos more False\n            else\n            let lose' t' pos' more' = succ t' pos' more' False\n                succ' t' pos' more' = succ t' pos' more' True\n              in prompt t pos more lose' succ'"],"instances":[],"language":{"extensions":["BangPatterns","FlexibleInstances","GADTs","OverloadedStrings","Rank2Types","RecordWildCards","TypeFamilies","TypeSynonymInstances","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}