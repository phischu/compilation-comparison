{"sliceID":4785268450026516003,"uses":[{"reference":{"otherSlice":3867849288792351978},"usedName":{"valueName":{"identifier":"unsafeNew"}},"qualification":null},{"reference":{"otherSlice":3826499326822741802},"usedName":{"valueName":{"identifier":"foldM'"}},"qualification":"Stream"},{"reference":{"otherSlice":7455058673344695308},"usedName":{"valueName":{"identifier":"checkSlice"}},"qualification":"Ck"},{"reference":{"otherSlice":4579156144394400265},"usedName":{"constructorName":{"identifier":"Internal"},"constructorTypeName":{"identifier":"Checks"}},"qualification":"Ck"},{"reference":{"otherSlice":3867849288792351978},"usedName":{"valueName":{"identifier":"length"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"otherSlice":3538790270360548723},"usedName":{"valueName":{"identifier":"unsafeSlice"}},"qualification":null},{"reference":{"otherSlice":2027147290182338639},"usedName":{"valueName":{"identifier":"unsafeAppend1"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"otherSlice":3377634759521931512},"usedName":{"typeName":{"identifier":"PrimMonad"}},"qualification":null},{"reference":{"otherSlice":3867849288792351978},"usedName":{"typeName":{"identifier":"MVector"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"Bool"}},"qualification":null},{"reference":{"otherSlice":963393349676107981},"usedName":{"typeName":{"identifier":"Stream"}},"qualification":null},{"reference":{"otherSlice":3377634759521931512},"usedName":{"typeName":{"identifier":"PrimState"}},"qualification":null}],"fragment":["partitionUnknown ::\n                   (PrimMonad m, MVector v a) =>\n                   (a -> Bool) -> Stream a -> m (v (PrimState m) a, v (PrimState m) a)","partitionUnknown f s\n  = do v1 <- unsafeNew 0\n       v2 <- unsafeNew 0\n       (v1', n1, v2', n2) <- Stream.foldM' put (v1, 0, v2, 0) s\n       ((Ck.checkSlice \"Data/Vector/Generic/Mutable.hs\" 869) Ck.Internal)\n         \"partitionUnknown\"\n         0\n         n1\n         (length v1')\n         $\n         ((Ck.checkSlice \"Data/Vector/Generic/Mutable.hs\" 870) Ck.Internal)\n           \"partitionUnknown\"\n           0\n           n2\n           (length v2')\n           $ return (unsafeSlice 0 n1 v1', unsafeSlice 0 n2 v2')\n  where {-# INLINE [0] put #-}\n        put (v1, i1, v2, i2) x\n          | f x =\n            do v1' <- unsafeAppend1 v1 i1 x\n               return (v1', i1 + 1, v2, i2)\n          | otherwise =\n            do v2' <- unsafeAppend1 v2 i2 x\n               return (v1, i1, v2', i2 + 1)"],"instances":[],"language":{"extensions":["DeriveDataTypeable","MultiParamTypeClasses","BangPatterns","ScopedTypeVariables","TypeFamilies","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}