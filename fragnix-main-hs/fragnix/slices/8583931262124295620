{"sliceID":8583931262124295620,"uses":[{"reference":{"builtinModule":"Data.Monoid"},"usedName":{"typeName":{"identifier":"Monoid"}},"qualification":null},{"reference":{"otherSlice":7256290753492126844},"usedName":{"typeName":{"identifier":"MonadResource"}},"qualification":null},{"reference":{"otherSlice":4456860579171675913},"usedName":{"typeName":{"identifier":"WriterT"}},"qualification":"Strict"},{"reference":{"otherSlice":7256290753492126844},"usedName":{"valueName":{"identifier":"liftResourceT"}},"qualification":null},{"reference":{"otherSlice":1800817309688667062},"usedName":{"valueName":{"identifier":"lift"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"."}},"qualification":null}],"fragment":["instance (Monoid w, MonadResource m) => MonadResource\n         (Strict.WriterT w m) where\n        liftResourceT = lift . liftResourceT"],"instances":[],"language":{"extensions":["DeriveDataTypeable","FlexibleInstances","FlexibleContexts","MultiParamTypeClasses","TypeFamilies","UndecidableInstances","RankNTypes","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":true}}