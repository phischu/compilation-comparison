{"sliceID":3547578873355961164,"uses":[{"reference":{"otherSlice":6383363541455760455},"usedName":{"constructorName":{"identifier":"DynamicTable"},"constructorTypeName":{"identifier":"DynamicTable"}},"qualification":null},{"reference":{"otherSlice":6383363541455760455},"usedName":{"valueName":{"identifier":"circularTable"}},"qualification":null},{"reference":{"otherSlice":6383363541455760455},"usedName":{"valueName":{"identifier":"codeInfo"}},"qualification":null},{"reference":{"otherSlice":6383363541455760455},"usedName":{"valueName":{"identifier":"dynamicTableSize"}},"qualification":null},{"reference":{"otherSlice":6383363541455760455},"usedName":{"valueName":{"identifier":"maxDynamicTableSize"}},"qualification":null},{"reference":{"otherSlice":6383363541455760455},"usedName":{"valueName":{"identifier":"maxNumOfEntries"}},"qualification":null},{"reference":{"otherSlice":6383363541455760455},"usedName":{"valueName":{"identifier":"numOfEntries"}},"qualification":null},{"reference":{"otherSlice":6383363541455760455},"usedName":{"valueName":{"identifier":"offset"}},"qualification":null},{"reference":{"builtinModule":"GHC.IORef"},"usedName":{"valueName":{"identifier":"readIORef"}},"qualification":null},{"reference":{"otherSlice":6989548830528317013},"usedName":{"valueName":{"identifier":"adj"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"otherSlice":1926972219394793977},"usedName":{"valueName":{"identifier":"entrySize"}},"qualification":null},{"reference":{"otherSlice":5632142578980093812},"usedName":{"valueName":{"identifier":"unsafeWrite"}},"qualification":null},{"reference":{"builtinModule":"GHC.IORef"},"usedName":{"valueName":{"identifier":"writeIORef"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":6872817222089278019},"usedName":{"constructorName":{"identifier":"EncodeInfo"},"constructorTypeName":{"identifier":"CodeInfo"}},"qualification":null},{"reference":{"otherSlice":7642370867813026280},"usedName":{"valueName":{"identifier":"insertRevIndex"}},"qualification":null},{"reference":{"otherSlice":7665315041499981020},"usedName":{"constructorName":{"identifier":"DIndex"},"constructorTypeName":{"identifier":"HIndex"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"return"}},"qualification":null},{"reference":{"otherSlice":2519392774758835021},"usedName":{"typeName":{"identifier":"Entry"}},"qualification":null},{"reference":{"otherSlice":6383363541455760455},"usedName":{"typeName":{"identifier":"DynamicTable"}},"qualification":null},{"reference":{"builtinModule":"GHC.Types"},"usedName":{"typeName":{"identifier":"IO"}},"qualification":null}],"fragment":["insertEnd :: Entry -> DynamicTable -> IO ()","insertEnd e DynamicTable{..}\n  = do maxN <- readIORef maxNumOfEntries\n       off <- readIORef offset\n       n <- readIORef numOfEntries\n       dsize <- readIORef dynamicTableSize\n       table <- readIORef circularTable\n       !i <- adj maxN (off + n + 1)\n       let !dsize' = dsize + entrySize e\n       unsafeWrite table i e\n       writeIORef numOfEntries $ n + 1\n       writeIORef dynamicTableSize dsize'\n       case codeInfo of\n           EncodeInfo rev _ -> insertRevIndex e (DIndex i) rev\n           _ -> return ()"],"instances":[],"language":{"extensions":["TupleSections","RecordWildCards","FlexibleContexts","BangPatterns","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":false}}