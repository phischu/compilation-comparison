{"sliceID":7109858530954693004,"uses":[{"reference":{"builtinModule":"GHC.Base"},"usedName":{"typeName":{"identifier":"Alternative"}},"qualification":null},{"reference":{"otherSlice":836250808765999032},"usedName":{"typeName":{"identifier":"Array"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"empty"}},"qualification":null},{"reference":{"otherSlice":3529679283697619194},"usedName":{"valueName":{"identifier":"emptyArray"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"<|>"}},"qualification":null},{"reference":{"otherSlice":6359411244316829523},"usedName":{"valueName":{"identifier":"createArray"}},"qualification":null},{"reference":{"builtinModule":"GHC.Num"},"usedName":{"valueName":{"operator":"+"}},"qualification":null},{"reference":{"otherSlice":5999148496770720081},"usedName":{"valueName":{"identifier":"die"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":"$"}},"qualification":null},{"reference":{"otherSlice":424073283210537862},"usedName":{"valueName":{"identifier":"copyArray"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"operator":">>"}},"qualification":null},{"reference":{"otherSlice":7297700151455758761},"usedName":{"valueName":{"identifier":"sizeofArray"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"some"}},"qualification":null},{"reference":{"builtinModule":"GHC.Classes"},"usedName":{"valueName":{"operator":"=="}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"otherwise"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"many"}},"qualification":null},{"reference":{"builtinModule":"GHC.Base"},"usedName":{"valueName":{"identifier":"pure"}},"qualification":null}],"fragment":["instance Alternative Array where\n        empty = emptyArray\n        a1 <|> a2\n          = createArray (sza1 + sza2) (die \"<|>\" \"impossible\") $\n              \\ ma -> copyArray ma 0 a1 0 sza1 >> copyArray ma sza1 a2 0 sza2\n          where sza1 = sizeofArray a1\n                sza2 = sizeofArray a2\n        some a\n          | sizeofArray a == 0 = emptyArray\n          | otherwise = die \"some\" \"infinite arrays are not well defined\"\n        many a\n          | sizeofArray a == 0 = pure []\n          | otherwise = die \"many\" \"infinite arrays are not well defined\""],"instances":[],"language":{"extensions":["MagicHash","UnboxedTuples","DeriveDataTypeable","BangPatterns","RankNTypes","TypeFamilies","MultiParamTypeClasses","NondecreasingIndentation","ExplicitForAll","PatternGuards"],"isInstance":true}}